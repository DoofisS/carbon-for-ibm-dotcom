/*! For license information please see main~ceab0c39.910eaa78.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{"./src/components/masthead/__stories__/README.stories.mdx":function(e,n,t){"use strict";t("../../node_modules/core-js/modules/es.object.keys.js"),t("../../node_modules/core-js/modules/es.array.index-of.js"),t("../../node_modules/core-js/modules/es.symbol.js"),t("../../node_modules/core-js/modules/es.object.assign.js"),t("../../node_modules/core-js/modules/es.function.bind.js"),t("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),t("../../node_modules/core-js/modules/es.date.to-primitive.js"),t("../../node_modules/core-js/modules/es.symbol.description.js"),t("../../node_modules/core-js/modules/es.object.to-string.js"),t("../../node_modules/core-js/modules/es.number.constructor.js"),t("../../node_modules/core-js/modules/es.object.define-property.js"),t("../../node_modules/core-js/modules/es.array.filter.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),t("../../node_modules/core-js/modules/es.array.for-each.js"),t("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),t("../../node_modules/core-js/modules/es.object.define-properties.js"),t("../../node_modules/core-js/modules/es.symbol.iterator.js"),t("../../node_modules/core-js/modules/es.string.iterator.js"),t("../../node_modules/core-js/modules/es.array.iterator.js"),t("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),t("../../node_modules/react/index.js");var a=t("./node_modules/@mdx-js/react/dist/esm.js"),s=t("./node_modules/@storybook/addon-docs/dist/esm/index.js"),o=t("./node_modules/@storybook/addon-docs/blocks.js"),l=t("../../docs/contributing-license.md"),r=t("./src/globals/internal/storybook-cdn.ts");function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}var c=["components"];function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function h(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){m(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n,t){return(n=function(e){var n=function(e,n){if("object"!==i(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==i(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===i(n)?n:String(n)}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function d(){return d=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},d.apply(this,arguments)}function p(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var f={},b="wrapper";function N(e){var n=e.components,t=p(e,c);return Object(a.b)(b,d({},f,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"masthead"},"Masthead"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The masthead component is a required navigational pattern for IBM.com that\ndisplays consistently at the top of each page. It also includes search and\nprofile services for IBM.com.")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"ðŸ’¡ Check our\n",Object(a.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/masthead",target:"_blank",rel:"nofollow noopener noreferrer"},"CodeSandbox"),"\nexample implementation.")),Object(a.b)("h3",{id:"masthead-l0"},"Masthead (L0):"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/masthead",target:"_blank",rel:"nofollow noopener noreferrer"},Object(a.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(a.b)("h3",{id:"masthead-l1"},"Masthead (L1):"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/masthead-l1",target:"_blank",rel:"nofollow noopener noreferrer"},Object(a.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(a.b)("h2",{id:"getting-started"},"Getting Started"),Object(a.b)("h5",{id:"note-masthead-uses-the-carbon-white-theme-by-design-using-other-themes-will-not-change-the-masthead-color-scheme"},"Note: Masthead uses the Carbon White theme by design. Using other themes will not change the Masthead color scheme."),Object(a.b)("h3",{id:"js-via-import"},"JS (via import)"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/masthead/masthead-container.js';\n")),Object(a.b)(o.a,{markdown:"".concat(Object(r.c)({components:["masthead"]})),mdxType:"Description"}),Object(a.b)(o.a,{markdown:"".concat(Object(r.a)()),mdxType:"Description"}),Object(a.b)("h3",{id:"html"},"HTML"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},"<dds-masthead-container></dds-masthead-container>\n")),Object(a.b)("h4",{id:"setting-platform"},"Setting Platform"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container platform="Lorem Ipsum"></dds-masthead-container>\n')),Object(a.b)("h4",{id:"setting-platform-url"},"Setting Platform URL"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"platformUrl")," property accepts a single URL as string or an object with a specific URL for each locale.\nThis property has to be set via javascript."),Object(a.b)("h6",{id:"setting-a-single-platform-url"},"Setting a single platform URL:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container platform="Lorem Ipsum" id="masthead-container"></dds-masthead-container>\n')),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},'const singleUrl = "https://www.example.com";\n\ndocument.getElementById("masthead-container").platformUrl = singleUrl;\n')),Object(a.b)("h6",{id:"setting-multiple-platform-urls-with-an-object"},"Setting multiple platform URLs with an object:"),Object(a.b)("p",null,"With an object, the component will show a specific URL depending on the locale:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"const urlObject = {\n  'en-US': {\n    url: 'https://www.example.com',\n  },\n  'fr-FR': {\n    url: 'https://www.example.com/fr-fr/sample',\n  },\n  'es-MX': {\n    url: 'https://www.example.com/es-mx/sample',\n  },\n};\n\ndocument.getElementById(\"masthead-container\").platformUrl = urlObject;\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container platform="Lorem Ipsum" id="masthead-container"></dds-masthead-container>\n')),Object(a.b)("h4",{id:"custom-navigation"},"Custom Navigation"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"const links = [...menu items...];\ndocument.getElementById('masthead-container').navLinks = links;\n")),Object(a.b)("h4",{id:"using-l1-nav"},"Using L1 nav"),Object(a.b)("p",null,"To use L1 nav, set ",Object(a.b)("inlineCode",{parentName:"p"},"l1Data")," prop. ",Object(a.b)("inlineCode",{parentName:"p"},"l1Data")," prop should be an\nobject that contains the navigation data of L1 nav:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascipt"},"const l1Data = {\n  platform: {\n    name: 'Stock Charts',\n    url: 'https://example.com/',\n  },\n  menuItems: (The nav links),\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container id="masthead-container"></dds-masthead-container>\n')),Object(a.b)("p",null,"To set a custom endpoint for the translation service to fetch from, set either the ",Object(a.b)("inlineCode",{parentName:"p"},"data-endpoint")," attribute like below or ",Object(a.b)("inlineCode",{parentName:"p"},"DDS_TRANSLATION_ENDPOINT")," environment variable."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container data-endpoint="/custom-endpoint"></dds-masthead-container>\n')),Object(a.b)("h3",{id:"setting-the-active-menu-item"},"Setting the active menu item"),Object(a.b)("p",null,"The active menu item receives a unique style treatment to indicate where the current page is within the navigation hierarchy."),Object(a.b)("h5",{id:"manually"},"Manually"),Object(a.b)("p",null,"Manually set the active item by using the ",Object(a.b)("inlineCode",{parentName:"p"},"selected-menu-item")," property. See ",Object(a.b)("a",{parentName:"p",href:"#props"},"the Props table"),"."),Object(a.b)("h5",{id:"automatically"},"Automatically"),Object(a.b)("p",null,"The first menu item whose ",Object(a.b)("inlineCode",{parentName:"p"},"href")," value matches the browser window's current URL will automatically be marked active if the ",Object(a.b)("inlineCode",{parentName:"p"},"selected-menu-item")," property has not been set."),Object(a.b)("p",null,"If no other menu items are marked active and the optional ",Object(a.b)("inlineCode",{parentName:"p"},"platformUrl")," property has been set, the platform link will be marked active."),Object(a.b)("h2",{id:"using-custom-search-with-typeahead-api"},"Using custom search with typeahead API"),Object(a.b)("p",null,"Using a search API other than the default provided from IBM Search is supported."),Object(a.b)("p",null,"First, add the ",Object(a.b)("inlineCode",{parentName:"p"},"custom-typeahead-api")," attribute into the masthead and set it to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container custom-typeahead-api="true"></dds-masthead-container>\n')),Object(a.b)("p",null,"As an example, we will be using the IBM Docs API to fetch the data, retrieving an array of result suggestions."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"  async function customTypeaheadApiFunction(searchVal) {\n    return fetch(\n      `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=en&categories=&limit=6`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        let searchResults = [\n          data.hints,\n        ];\n        return searchResults;\n      });\n  }\n")),Object(a.b)("p",null,"To query the current masthead search input, we need to create an event listener to listen for the ",Object(a.b)("inlineCode",{parentName:"p"},"dds-search-with-typeahead-input")," event.\nOnce captured, we need to call our asynchronous function to fetch the custom API results based on the query. Once the results are retrieved,\na new custom event ",Object(a.b)("inlineCode",{parentName:"p"},"dds-custom-typeahead-api-results")," needs to be dispatched containing the results for the component to render the search suggestions."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"  document.addEventListener('dds-search-with-typeahead-input', async (e) => { \n    const results = await customTypeaheadApiFunction(e.detail.value);\n    document.dispatchEvent(new CustomEvent('dds-custom-typeahead-api-results', { detail: results}));\n  })\n")),Object(a.b)("h3",{id:"grouped-search"},"Grouped Search"),Object(a.b)("p",null,"Some APIs contain grouped results in addition to regular search suggestions, which can also be displayed upon search."),Object(a.b)("p",null,"As before, create a function that fetches the query and make sure to include a JSON object containing the section's ",Object(a.b)("inlineCode",{parentName:"p"},"title"),"\nand the array of retrieved section suggestions in ",Object(a.b)("inlineCode",{parentName:"p"},"items"),". In the example below, the section ",Object(a.b)("inlineCode",{parentName:"p"},"Product pages")," is added to the\nresults array."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},'  async function customTypeaheadApiFunction(searchVal) {\n    return fetch(\n      `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=en&categories=&limit=6`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        let searchResults = [\n          data.hints,\n\n          // optional category results fetched from API\n          {\n            title: "Product pages",\n            items: data.products\n          }\n        ];\n        return searchResults;\n      });\n  }\n')),Object(a.b)("p",null,"As mentioned above, the two events ",Object(a.b)("inlineCode",{parentName:"p"},"dds-search-with-typeahead-input")," and ",Object(a.b)("inlineCode",{parentName:"p"},"dds-custom-typeahead-api-results")," must be handled for\nsuggestions to be rendered -- the same code for the event listener can be reused."),Object(a.b)("h4",{id:"note"},"Note"),Object(a.b)("p",null,"The API results must match the following structure:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"[\n  ['result 1', 'result 2', 'result 3'],\n  {\n    title: 'Example group 1'\n    items: ['result a', 'result b', 'result c']\n  },\n  {\n    title: \"Example group 2\",\n    items: ['result d', 'result e', 'result f']\n  }\n]\n")),Object(a.b)("p",null,"Note that only the first array element is necessary to render the basic search suggestions, the following JSON objects are optional Grouped sections."),Object(a.b)("h2",{id:"scoped-search"},"Scoped search"),Object(a.b)("p",null,"Scoped searches are also supported, returning results from specifically targeted IBM pages and products."),Object(a.b)("p",null,"First, prepare the desired categories to use when scoping the search. In this example, we will be creating an array with\nfour categories, which must follow the structure below:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"const scopeParameters = [\n  {\n    name: 'All',\n    appId: 'all',\n    value: 'all',\n  },\n  {\n    name: 'Analyst',\n    appId: 'analyst',\n    value: 'analyst'\n  },\n  {\n    name: 'PartnerWorld',\n    appId: 'pw',\n    value: ['pw', 'pwp'],\n  },\n  {\n    name: 'Developer',\n    appId: 'dw',\n    value: ['dw', 'dwaspera'],\n  }, \n  {\n    name: 'IBM Docs',\n    appId: 'ibmdocs',\n    value: ['ibmdocs', 'dw']\n    label: 'Search Label', // optional\n  }\n];\n")),Object(a.b)("h4",{id:"note-1"},"Note"),Object(a.b)("p",null,"A list of the available scoped categories can be found ",Object(a.b)("a",{parentName:"p",href:"https://github.ibm.com/digital-marketplace/columbus/blob/master/docs/SCOPED.MD",target:"_blank",rel:"nofollow noopener noreferrer"},"here"),"."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"value")," property can either be a single string, or an array of strings."),Object(a.b)("p",null,"This array will be passed into the ",Object(a.b)("inlineCode",{parentName:"p"},"scopeParameters")," property. If using ",Object(a.b)("inlineCode",{parentName:"p"},"lit-html")," to render your page, this can be added\nusing ",Object(a.b)("inlineCode",{parentName:"p"},".scopeParameters")," (note the ",Object(a.b)("inlineCode",{parentName:"p"},"."),"), in order for the array to be processed properly in the component."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-composite .scopeParameters="${scopeParameters}"></dds-masthead-composite>\n')),Object(a.b)("p",null,"Alternatively, JavaScript can be used to insert it into the component."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"document.querySelector('dds-masthead-composite').scopeParameters = scopeParameters;\n")),Object(a.b)("p",null,"If a different locale is used, it will be necessary to use a formatter function to localize the placeholder text that\nwill be rendered depending on the selected scope."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"const placeholderFormatter = ({scopeValue}) => `Buscar en ${scopeValue}`;\ndocument.querySelector('dds-search-with-typeahead').placeholderFormatter = placeholderFormatter;\n")),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"dds-masthead-containerdds-masthead-composite"},Object(a.b)("inlineCode",{parentName:"h3"},"<dds-masthead-container>"),"/",Object(a.b)("inlineCode",{parentName:"h3"},"<dds-masthead-composite>")),Object(a.b)(o.c,{of:"dds-masthead-composite",mdxType:"Props"}),Object(a.b)("p",null,"For Cloud-specific version of masthead-container, ",Object(a.b)("inlineCode",{parentName:"p"},"<dds-cloud-masthead-container>"),", we support two user authentication methods, via cookie or api. To select between the two, provide the ",Object(a.b)("inlineCode",{parentName:"p"},"auth-method")," prop with a value of either 'cookie' or 'api'."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-cloud-masthead-container auth-method="cookie"></dds-cloud-masthead-container>\n')),Object(a.b)("h2",{id:"stable-selectors"},"Stable selectors"),Object(a.b)("p",null,"See ",Object(a.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components#stable-selectors-for-analytics-and-integratione2e-testing-in-web-components",target:"_blank",rel:"nofollow noopener noreferrer"},"our README")," to see how Web Components selector and ",Object(a.b)("inlineCode",{parentName:"p"},"data-autoid")," should be used."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Web Components selector"),Object(a.b)("th",{parentName:"tr",align:null},"Compatibility selector"),Object(a.b)("th",{parentName:"tr",align:null},"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-masthead>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead"')),Object(a.b)("td",{parentName:"tr",align:null},"Component")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-masthead-menu-button>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__hamburger"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-top-nav-name>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__platform-name"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-top-nav>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-nav"')),Object(a.b)("td",{parentName:"tr",align:null},"Component")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-top-nav-menu trigger-content="${item}">')," and ",Object(a.b)("inlineCode",{parentName:"td"},'<dds-top-nav-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-nav--nav${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-top-nav-menu-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-nav--subnav-col${item}-item${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-left-nav>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-sidenav"')),Object(a.b)("td",{parentName:"tr",align:null},"Component")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-left-nav-menu trigger-content="${item}">')," and ",Object(a.b)("inlineCode",{parentName:"td"},'<dds-left-nav-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-sidenav--nav${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-left-nav-menu-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-sidenav--subnav-col${item}-item${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")))),Object(a.b)(o.a,{markdown:l.a,mdxType:"Description"}))}N.isMDXComponent=!0;var g={includeStories:[]},P={};g.parameters=g.parameters||{},g.parameters.docs=h(h({},g.parameters.docs||{}),{},{page:function(){return Object(a.b)(s.a,{mdxStoryNameToKey:P,mdxComponentAnnotations:g},Object(a.b)(N,null))}}),n.a=g},"./src/components/masthead/__stories__/cloud-masthead.stories.ts":function(e,n,t){"use strict";t.r(n),t.d(n,"Default",(function(){return C}));t("../../node_modules/core-js/modules/es.symbol.iterator.js"),t("../../node_modules/core-js/modules/es.array.slice.js"),t("../../node_modules/core-js/modules/es.object.freeze.js"),t("../../node_modules/core-js/modules/es.object.keys.js"),t("../../node_modules/core-js/modules/es.symbol.js"),t("../../node_modules/core-js/modules/es.array.filter.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),t("../../node_modules/core-js/modules/es.array.for-each.js"),t("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),t("../../node_modules/core-js/modules/es.object.define-properties.js"),t("../../node_modules/core-js/modules/es.object.define-property.js"),t("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),t("../../node_modules/core-js/modules/es.date.to-primitive.js"),t("../../node_modules/core-js/modules/es.symbol.description.js"),t("../../node_modules/core-js/modules/es.object.to-string.js"),t("../../node_modules/core-js/modules/es.number.constructor.js"),t("../../node_modules/core-js/modules/web.url.js"),t("../../node_modules/core-js/modules/es.string.iterator.js"),t("../../node_modules/core-js/modules/es.array.iterator.js"),t("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),t("../../node_modules/core-js/modules/es.string.search.js"),t("../../node_modules/core-js/modules/es.regexp.exec.js");var a,s,o,l=t("../../node_modules/lit-element/lit-element.js"),r=t("./node_modules/@storybook/addon-knobs/dist/index.js"),i=t("../../node_modules/carbon-components/es/globals/js/misc/on.js"),c=t("./src/internal/vendor/@carbon/web-components/globals/directives/if-non-null.js"),u=t("../../node_modules/@percy-io/in-percy/src/index.js"),h=t.n(u),m=(t("./src/components/masthead/masthead-container.ts"),t("./src/components/masthead/cloud/cloud-masthead-container.ts"),t("./src/components/masthead/__stories__/masthead.stories.scss")),d=t("./src/components/masthead/__stories__/links.ts"),p=t("./src/components/masthead/__stories__/profile-items.ts"),f=t("./src/components/masthead/__stories__/README.stories.mdx"),b=t("./.storybook/knob-text-nullable.ts");function N(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}var P,w,k;function $(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function y(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?$(Object(t),!0).forEach((function(n){v(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):$(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function v(e,n,t){return(n=function(e){var n=function(e,n){if("object"!==g(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==g(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===g(n)?n:String(n)}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var S,L,M,I,j="https://www.ibm.com/cloud",O={default:{url:"https://www.ibm.com/cloud"},"en-US":{url:"https://www.ibm.com/us-en/cloud"},"fr-FR":{url:"https://www.ibm.com/fr-fr/cloud"},"es-MX":{url:"https://www.ibm.com/es-mx/cloud"}},C=function(e){var n,t,r=null!==(n=null==e?void 0:e.CloudMastheadComposite)&&void 0!==n?n:{},i=r.hasContact,u=r.hasProfile,h=r.hasSearch,d=r.selectedMenuItem,f=r.searchPlaceholder,b=r.userStatus,g=r.navLinks,$=r.redirectPath,y=r.authMethod,v=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return Object(l.d)(P||(P=a||(a=N(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),m.a,v?Object(l.d)(w||(w=s||(s=N(['\n          <dds-cloud-masthead-composite\n            platform="Cloud"\n            .platformUrl="','"\n            selected-menu-item="','"\n            has-contact="','"\n            auth-method="','"\n            redirect-path="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"></dds-cloud-masthead-composite>\n        ']))),Object(c.a)(j),Object(c.a)(d),i,y,Object(c.a)($),Object(c.a)(b),Object(c.a)(f),Object(c.a)(p.a),u,h,g,Object(c.a)(p.b)):Object(l.d)(k||(k=o||(o=N(['\n          <dds-cloud-masthead-container\n            platform="Cloud"\n            .platformUrl="','"\n            selected-menu-item="','"\n            has-contact="','"\n            auth-method="','"\n            redirect-path="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"></dds-cloud-masthead-container>\n        ']))),Object(c.a)(O),Object(c.a)(d),i,y,Object(c.a)($),Object(c.a)(b),Object(c.a)(f),g,u,h))};n.default={title:"Components/Cloud masthead",decorators:[function(e){return window._hPageShow||(window._hPageShow=Object(i.a)(window,"pageshow",(function(){var e=document.querySelector("dds-left-nav");e&&(e.expanded=!1)}))),e()}],parameters:y(y((L={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2021, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport '../cloud/cloud-masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport {\\\\n  authenticatedProfileItems,\\\\n  unauthenticatedProfileItems,\\\\n} from './profile-items';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  default: {\\\\n    url: 'https://www.ibm.com/cloud',\\\\n  },\\\\n  'en-US': {\\\\n    url: 'https://www.ibm.com/us-en/cloud',\\\\n  },\\\\n  'fr-FR': {\\\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\\\n  },\\\\n  'es-MX': {\\\\n    url: 'https://www.ibm.com/es-mx/cloud',\\\\n  },\\\\n};\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    hasContact,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n    redirectPath,\\\\n    authMethod,\\\\n  } = args?.CloudMastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-cloud-masthead-composite\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\\"></dds-cloud-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-cloud-masthead-container\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(urlObject)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            data-endpoint=\\\\\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\\\\\"></dds-cloud-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Cloud masthead',\\\\n  decorators: [\\\\n    (story) => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    'carbon-theme': { disabled: true },\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      CloudMastheadComposite: () => ({\\\\n        userStatus: select(\\\\n          'The user authenticated status (user-status)',\\\\n          ['authenticated', 'anonymous'],\\\\n          'anonymous'\\\\n        ),\\\\n        hasContact: select(\\\\n          'Contact us button visibility (has-contact)',\\\\n          ['true', 'false'],\\\\n          'true'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          'selected menu item (selected-menu-item)',\\\\n          'Docs'\\\\n        ),\\\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\\\n        authMethod: select(\\\\n          'auth method (auth-method)',\\\\n          ['cookie', 'api'],\\\\n          'cookie'\\\\n        ),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\\\n      const useMock =\\\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        CloudMastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        CloudMastheadComposite: {\\\\n          userStatus: 'anonymous',\\\\n          hasContact: true,\\\\n          selectedMenuItem: 'Docs',\\\\n          redirectPath: '',\\\\n          authMethod: 'cookie',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":50},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":102},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":50},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":102}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2021, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport '../cloud/cloud-masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from './profile-items';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst urlObject = {\\n  default: {\\n    url: 'https://www.ibm.com/cloud',\\n  },\\n  'en-US': {\\n    url: 'https://www.ibm.com/us-en/cloud',\\n  },\\n  'fr-FR': {\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\n  },\\n  'es-MX': {\\n    url: 'https://www.ibm.com/es-mx/cloud',\\n  },\\n};\\n\\nexport const Default = (args) => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"></dds-cloud-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Cloud masthead',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2021, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport '../cloud/cloud-masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport {\\\\n  authenticatedProfileItems,\\\\n  unauthenticatedProfileItems,\\\\n} from './profile-items';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  default: {\\\\n    url: 'https://www.ibm.com/cloud',\\\\n  },\\\\n  'en-US': {\\\\n    url: 'https://www.ibm.com/us-en/cloud',\\\\n  },\\\\n  'fr-FR': {\\\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\\\n  },\\\\n  'es-MX': {\\\\n    url: 'https://www.ibm.com/es-mx/cloud',\\\\n  },\\\\n};\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    hasContact,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n    redirectPath,\\\\n    authMethod,\\\\n  } = args?.CloudMastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-cloud-masthead-composite\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\\"></dds-cloud-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-cloud-masthead-container\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(urlObject)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            data-endpoint=\\\\\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\\\\\"></dds-cloud-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Cloud masthead',\\\\n  decorators: [\\\\n    (story) => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    'carbon-theme': { disabled: true },\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      CloudMastheadComposite: () => ({\\\\n        userStatus: select(\\\\n          'The user authenticated status (user-status)',\\\\n          ['authenticated', 'anonymous'],\\\\n          'anonymous'\\\\n        ),\\\\n        hasContact: select(\\\\n          'Contact us button visibility (has-contact)',\\\\n          ['true', 'false'],\\\\n          'true'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          'selected menu item (selected-menu-item)',\\\\n          'Docs'\\\\n        ),\\\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\\\n        authMethod: select(\\\\n          'auth method (auth-method)',\\\\n          ['cookie', 'api'],\\\\n          'cookie'\\\\n        ),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\\\n      const useMock =\\\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        CloudMastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        CloudMastheadComposite: {\\\\n          userStatus: 'anonymous',\\\\n          hasContact: true,\\\\n          selectedMenuItem: 'Docs',\\\\n          redirectPath: '',\\\\n          authMethod: 'cookie',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":50},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":102},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":50},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":102}}}},\\n    ...readme.parameters,\\n    'carbon-theme': { disabled: true },\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      CloudMastheadComposite: () => ({\\n        userStatus: select(\\n          'The user authenticated status (user-status)',\\n          ['authenticated', 'anonymous'],\\n          'anonymous'\\n        ),\\n        hasContact: select(\\n          'Contact us button visibility (has-contact)',\\n          ['true', 'false'],\\n          'true'\\n        ),\\n        selectedMenuItem: textNullable(\\n          'selected menu item (selected-menu-item)',\\n          'Docs'\\n        ),\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\n        authMethod: select(\\n          'auth method (auth-method)',\\n          ['cookie', 'api'],\\n          'cookie'\\n        ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        CloudMastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        CloudMastheadComposite: {\\n          userStatus: 'anonymous',\\n          hasContact: true,\\n          selectedMenuItem: 'Docs',\\n          redirectPath: '',\\n          authMethod: 'cookie',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":58},\"endLoc\":{\"col\":1,\"line\":110},\"startBody\":{\"col\":23,\"line\":58},\"endBody\":{\"col\":1,\"line\":110}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2021, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport '../cloud/cloud-masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from './profile-items';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst urlObject = {\\n  default: {\\n    url: 'https://www.ibm.com/cloud',\\n  },\\n  'en-US': {\\n    url: 'https://www.ibm.com/us-en/cloud',\\n  },\\n  'fr-FR': {\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\n  },\\n  'es-MX': {\\n    url: 'https://www.ibm.com/es-mx/cloud',\\n  },\\n};\\n\\nexport const Default = (args) => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"></dds-cloud-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Cloud masthead',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    'carbon-theme': { disabled: true },\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      CloudMastheadComposite: () => ({\\n        userStatus: select(\\n          'The user authenticated status (user-status)',\\n          ['authenticated', 'anonymous'],\\n          'anonymous'\\n        ),\\n        hasContact: select(\\n          'Contact us button visibility (has-contact)',\\n          ['true', 'false'],\\n          'true'\\n        ),\\n        selectedMenuItem: textNullable(\\n          'selected menu item (selected-menu-item)',\\n          'Docs'\\n        ),\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\n        authMethod: select(\\n          'auth method (auth-method)',\\n          ['cookie', 'api'],\\n          'cookie'\\n        ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        CloudMastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        CloudMastheadComposite: {\\n          userStatus: 'anonymous',\\n          hasContact: true,\\n          selectedMenuItem: 'Docs',\\n          redirectPath: '',\\n          authMethod: 'cookie',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":50},\"endLoc\":{\"col\":1,\"line\":102},\"startBody\":{\"col\":23,\"line\":50},\"endBody\":{\"col\":1,\"line\":102}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2021, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport '../cloud/cloud-masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport {\n  authenticatedProfileItems,\n  unauthenticatedProfileItems,\n} from './profile-items';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst urlObject = {\n  default: {\n    url: 'https://www.ibm.com/cloud',\n  },\n  'en-US': {\n    url: 'https://www.ibm.com/us-en/cloud',\n  },\n  'fr-FR': {\n    url: 'https://www.ibm.com/fr-fr/cloud',\n  },\n  'es-MX': {\n    url: 'https://www.ibm.com/es-mx/cloud',\n  },\n};\n\nexport const Default = (args) => {\n  const {\n    hasContact,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    redirectPath,\n    authMethod,\n  } = args?.CloudMastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-cloud-masthead-composite\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(\n              unauthenticatedProfileItems\n            )}\"></dds-cloud-masthead-composite>\n        `\n      : html`\n          <dds-cloud-masthead-container\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(urlObject)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            data-endpoint=\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\"></dds-cloud-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Cloud masthead',\n  decorators: [\n    (story) => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\"storySource\":{\"source\":\"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2021, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport '../cloud/cloud-masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from './profile-items';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst urlObject = {\\n  default: {\\n    url: 'https://www.ibm.com/cloud',\\n  },\\n  'en-US': {\\n    url: 'https://www.ibm.com/us-en/cloud',\\n  },\\n  'fr-FR': {\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\n  },\\n  'es-MX': {\\n    url: 'https://www.ibm.com/es-mx/cloud',\\n  },\\n};\\n\\nexport const Default = (args) => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"></dds-cloud-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Cloud masthead',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    'carbon-theme': { disabled: true },\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      CloudMastheadComposite: () => ({\\n        userStatus: select(\\n          'The user authenticated status (user-status)',\\n          ['authenticated', 'anonymous'],\\n          'anonymous'\\n        ),\\n        hasContact: select(\\n          'Contact us button visibility (has-contact)',\\n          ['true', 'false'],\\n          'true'\\n        ),\\n        selectedMenuItem: textNullable(\\n          'selected menu item (selected-menu-item)',\\n          'Docs'\\n        ),\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\n        authMethod: select(\\n          'auth method (auth-method)',\\n          ['cookie', 'api'],\\n          'cookie'\\n        ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        CloudMastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        CloudMastheadComposite: {\\n          userStatus: 'anonymous',\\n          hasContact: true,\\n          selectedMenuItem: 'Docs',\\n          redirectPath: '',\\n          authMethod: 'cookie',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\",\"locationsMap\":{\"default\":{\"startLoc\":{\"col\":23,\"line\":50},\"endLoc\":{\"col\":1,\"line\":102},\"startBody\":{\"col\":23,\"line\":50},\"endBody\":{\"col\":1,\"line\":102}}}},\n    ...readme.parameters,\n    'carbon-theme': { disabled: true },\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      CloudMastheadComposite: () => ({\n        userStatus: select(\n          'The user authenticated status (user-status)',\n          ['authenticated', 'anonymous'],\n          'anonymous'\n        ),\n        hasContact: select(\n          'Contact us button visibility (has-contact)',\n          ['true', 'false'],\n          'true'\n        ),\n        selectedMenuItem: textNullable(\n          'selected menu item (selected-menu-item)',\n          'Docs'\n        ),\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\n        authMethod: select(\n          'auth method (auth-method)',\n          ['cookie', 'api'],\n          'cookie'\n        ),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-cloud-masthead-container>` load the nav links\n      const useMock =\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        CloudMastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        CloudMastheadComposite: {\n          userStatus: 'anonymous',\n          hasContact: true,\n          selectedMenuItem: 'Docs',\n          redirectPath: '',\n          authMethod: 'cookie',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"></dds-cloud-masthead-container>\\n        `}\\n  `;\\n}\" }, ...Default.parameters };",locationsMap:{default:{startLoc:{col:23,line:66},endLoc:{col:1,line:118},startBody:{col:23,line:66},endBody:{col:1,line:118}}}}},M="storySource",I={source:"/**\n * @license\n *\n * Copyright IBM Corp. 2021, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport '../cloud/cloud-masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport {\n  authenticatedProfileItems,\n  unauthenticatedProfileItems,\n} from './profile-items';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst urlObject = {\n  default: {\n    url: 'https://www.ibm.com/cloud',\n  },\n  'en-US': {\n    url: 'https://www.ibm.com/us-en/cloud',\n  },\n  'fr-FR': {\n    url: 'https://www.ibm.com/fr-fr/cloud',\n  },\n  'es-MX': {\n    url: 'https://www.ibm.com/es-mx/cloud',\n  },\n};\n\nexport const Default = (args) => {\n  const {\n    hasContact,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    redirectPath,\n    authMethod,\n  } = args?.CloudMastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-cloud-masthead-composite\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(\n              unauthenticatedProfileItems\n            )}\"></dds-cloud-masthead-composite>\n        `\n      : html`\n          <dds-cloud-masthead-container\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(urlObject)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            data-endpoint=\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\"></dds-cloud-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Cloud masthead',\n  decorators: [\n    (story) => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\n    ...readme.parameters,\n    'carbon-theme': { disabled: true },\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      CloudMastheadComposite: () => ({\n        userStatus: select(\n          'The user authenticated status (user-status)',\n          ['authenticated', 'anonymous'],\n          'anonymous'\n        ),\n        hasContact: select(\n          'Contact us button visibility (has-contact)',\n          ['true', 'false'],\n          'true'\n        ),\n        selectedMenuItem: textNullable(\n          'selected menu item (selected-menu-item)',\n          'Docs'\n        ),\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\n        authMethod: select(\n          'auth method (auth-method)',\n          ['cookie', 'api'],\n          'cookie'\n        ),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-cloud-masthead-container>` load the nav links\n      const useMock =\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        CloudMastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        CloudMastheadComposite: {\n          userStatus: 'anonymous',\n          hasContact: true,\n          selectedMenuItem: 'Docs',\n          redirectPath: '',\n          authMethod: 'cookie',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n",locationsMap:{default:{startLoc:{col:23,line:50},endLoc:{col:1,line:102},startBody:{col:23,line:50},endBody:{col:1,line:102}}}},(M=function(e){var n=function(e,n){if("object"!==g(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==g(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===g(n)?n:String(n)}(M))in L?Object.defineProperty(L,M,{value:I,enumerable:!0,configurable:!0,writable:!0}):L[M]=I,L),f.a.parameters),{},{"carbon-theme":{disabled:!0},percy:{skip:!0},knobs:{escapeHTML:!1,CloudMastheadComposite:function(){return{userStatus:Object(r.select)("The user authenticated status (user-status)",["authenticated","anonymous"],"anonymous"),hasContact:Object(r.select)("Contact us button visibility (has-contact)",["true","false"],"true"),selectedMenuItem:Object(b.a)("selected menu item (selected-menu-item)","Docs"),redirectPath:Object(b.a)("redirect path (redirect-path)",""),authMethod:Object(r.select)("auth method (auth-method)",["cookie","api"],"cookie")}}},props:(S=h()()||new URLSearchParams(window.location.search).has("mock"),{CloudMastheadComposite:{navLinks:S?d.e:void 0},Other:{useMock:S}}),propsSet:{default:{CloudMastheadComposite:{userStatus:"anonymous",hasContact:!0,selectedMenuItem:"Docs",redirectPath:"",authMethod:"cookie",navLinks:d.e}}}})},C.parameters=y({storySource:{source:'(args) => {\n  const {\n    hasContact,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    redirectPath,\n    authMethod,\n  } = args?.CloudMastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-cloud-masthead-composite\n            platform="Cloud"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            has-contact="${hasContact}"\n            auth-method="${authMethod}"\n            redirect-path="${ifNonNull(redirectPath)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-cloud-masthead-composite>\n        `\n      : html`\n          <dds-cloud-masthead-container\n            platform="Cloud"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            has-contact="${hasContact}"\n            auth-method="${authMethod}"\n            redirect-path="${ifNonNull(redirectPath)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"></dds-cloud-masthead-container>\n        `}\n  `;\n}'}},C.parameters)},"./src/components/masthead/__stories__/links.ts":function(e,n,t){"use strict";t.d(n,"e",(function(){return l})),t.d(n,"b",(function(){return s})),t.d(n,"c",(function(){return a})),t.d(n,"d",(function(){return o}));var a={svg:'<svg width="81px" height="33px" viewBox="0 0 81 33" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink">\n  <title>Artboard</title>\n  <defs>\n      <path d="M67.716,0.0192 L66.982,2.1532 L80.733,2.1532 L80.733,0.0192 L67.716,0.0192 Z M44.624,0.0192 L44.625,2.1532 L58.392,2.1532 L57.64,0.0192 L44.624,0.0192 Z M17.011,0.0192 L17.011,2.1532 L39.738,2.1532 C38.216,0.8282 36.189,0.0192 33.961,0.0192 L33.961,0.0192 L17.011,0.0192 Z M0.019,2.1532 L14.887,2.1532 L14.887,0.0192 L0.019,0.0192 L0.019,2.1532 Z M66.246,4.2862 L65.479,6.4192 L80.733,6.4192 L80.733,4.2862 L66.246,4.2862 Z M44.624,4.2862 L44.625,6.4192 L59.87,6.4192 L59.132,4.2862 L44.624,4.2862 Z M17.011,4.2862 L17.011,6.4192 L41.863,6.4192 C41.672,5.6612 41.365,4.9442 40.97,4.2862 L40.97,4.2862 L17.011,4.2862 Z M0.019,6.4192 L14.887,6.4192 L14.887,4.2862 L0.019,4.2862 L0.019,6.4192 Z M64.761,8.5532 L64.009,10.6862 L76.485,10.6862 L76.485,8.5532 L64.761,8.5532 Z M48.872,8.5532 L48.872,10.6862 L61.354,10.6862 L60.602,8.5532 L48.872,8.5532 Z M34.004,8.5532 L34.004,10.6862 L41.565,10.6862 C41.756,10.0052 41.863,9.2912 41.863,8.5532 L41.863,8.5532 L34.004,8.5532 Z M21.259,10.6862 L27.632,10.6862 L27.632,8.5532 L21.259,8.5532 L21.259,10.6862 Z M4.267,10.6862 L10.639,10.6862 L10.639,8.5532 L4.267,8.5532 L4.267,10.6862 Z M63.273,12.8192 L62.679,14.5432 L62.084,12.8192 L48.872,12.8192 L48.872,14.9532 L55.244,14.9532 L55.244,12.9912 L55.945,14.9532 L69.39,14.9532 L70.113,12.9912 L70.113,14.9532 L76.485,14.9532 L76.485,12.8192 L63.273,12.8192 Z M21.259,12.8192 L21.259,14.9532 L38.953,14.9532 C39.685,14.3502 40.316,13.6292 40.801,12.8192 L40.801,12.8192 L21.259,12.8192 Z M4.267,14.9532 L10.639,14.9532 L10.639,12.8192 L4.267,12.8192 L4.267,14.9532 Z M70.113,19.2182 L76.485,19.2182 L76.485,17.0852 L70.113,17.0852 L70.113,19.2182 Z M56.82,17.0862 L57.644,19.2182 L67.691,19.2182 L68.522,17.0862 L56.82,17.0862 Z M48.872,19.2182 L55.244,19.2182 L55.244,17.0852 L48.872,17.0852 L48.872,19.2182 Z M21.259,17.0862 L21.259,19.2182 L40.801,19.2182 C40.316,18.4092 39.685,17.6882 38.953,17.0862 L38.953,17.0862 L21.259,17.0862 Z M4.267,19.2182 L10.639,19.2182 L10.639,17.0852 L4.267,17.0852 L4.267,19.2182 Z M70.113,23.4852 L76.485,23.4852 L76.485,21.3522 L70.113,21.3522 L70.113,23.4852 Z M58.494,21.3522 L59.334,23.4852 L66.023,23.4852 L66.857,21.3522 L58.494,21.3522 Z M48.872,23.4852 L55.244,23.4852 L55.244,21.3522 L48.872,21.3522 L48.872,23.4852 Z M34.004,21.3522 L34.004,23.4852 L41.863,23.4852 C41.863,22.7472 41.756,22.0322 41.565,21.3522 L41.565,21.3522 L34.004,21.3522 Z M21.259,23.4852 L27.632,23.4852 L27.632,21.3522 L21.259,21.3522 L21.259,23.4852 Z M4.267,23.4852 L10.639,23.4852 L10.639,21.3522 L4.267,21.3522 L4.267,23.4852 Z M70.113,27.7522 L80.733,27.7522 L80.733,25.6192 L70.113,25.6192 L70.113,27.7522 Z M60.169,25.6192 L61.001,27.7522 L64.363,27.7522 L65.191,25.6192 L60.169,25.6192 Z M44.624,27.7522 L55.244,27.7522 L55.244,25.6192 L44.624,25.6192 L44.624,27.7522 Z M17.011,25.6192 L17.011,27.7522 L40.97,27.7522 C41.365,27.0932 41.672,26.3772 41.863,25.6192 L41.863,25.6192 L17.011,25.6192 Z M0.019,27.7522 L14.887,27.7522 L14.887,25.6192 L0.019,25.6192 L0.019,27.7522 Z M70.113,32.0192 L80.733,32.0192 L80.733,29.8852 L70.113,29.8852 L70.113,32.0192 Z M61.833,29.8852 L62.676,32.0192 L63.53,29.8852 L61.833,29.8852 Z M44.624,32.0192 L55.244,32.0192 L55.244,29.8852 L44.624,29.8852 L44.624,32.0192 Z M17.011,29.8852 L17.011,32.0192 L33.961,32.0192 C36.205,32.0192 38.216,31.2102 39.738,29.8852 L39.738,29.8852 L17.011,29.8852 Z M0.019,32.0192 L14.887,32.0192 L14.887,29.8852 L0.019,29.8852 L0.019,32.0192 Z" id="path-1"></path>\n  </defs>\n  <g id="Artboard" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n      <g id="Group-7">\n          <mask id="mask-2" fill="white">\n              <use xlink:href="#path-1"></use>\n          </mask>\n          <g id="Clip-2"></g>\n          <polygon id="Fill-1" fill="#EC1D24" mask="url(#mask-2)" points="-1 33.0382 86.8 33.0382 86.8 -0.9998 -1 -0.9998"></polygon>\n          <polygon id="Fill-3" fill="#2E3092" mask="url(#mask-2)" points="-1 3.3942 86.8 3.3942 86.8 -0.9998 -1 -0.9998"></polygon>\n          <polygon id="Fill-4" fill="#2E3092" mask="url(#mask-2)" points="-1 11.8162 86.8 11.8162 86.8 7.4222 -1 7.4222"></polygon>\n          <polygon id="Fill-5" fill="#00A550" mask="url(#mask-2)" points="-1 20.3502 86.8 20.3502 86.8 15.9562 -1 15.9562"></polygon>\n          <polygon id="Fill-6" fill="#FFF100" mask="url(#mask-2)" points="-1 28.8832 86.8 28.8832 86.8 24.4892 -1 24.4892"></polygon>\n      </g>\n  </g>\n  </svg>',tooltip:"Lorem ipsum dolor sit amet, consectetur adipiscing elit.",denylist:[],allowlist:[],end:"May 5, 2021 0:00:01",path:"/",href:"https://www.example.com/not-default-href"},s={title:"Stock Charts",url:"https://example.com",menuItems:[{title:"Lorem ipsum dolor sit amet",titleEnglish:"Lorem ipsum dolor sit amet",url:"",hasMenu:!0,hasMegapanel:!1,menuSections:[{heading:"Explore",menuItems:[{title:"Link 1",url:"",megapanelContent:{headingTitle:"",headingUrl:"",description:"",quickLinks:{title:"Title",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Menu dropdown item with extra long text",url:""}]}]},{title:"Consectetur adipiscing elit",titleEnglish:"Consectetur adipiscing elit",url:"",hasMenu:!0,menuSections:[{heading:"",menuItems:[{title:"Link 2",url:"",megapanelContent:{headingTitle:"Services",headingUrl:"https://www.ibm.com/services?lnk=hpmse_ts&lnk2=learn",description:"Reimagine your business, designing and building the platforms necessary for growth",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"IBM Services, your Digital Reinvention Ã¢â€žÂ¢ partner",imageUrl:"https://www.ibm.com/images/portal/U609055Q90660U49/windmills.jpg",linkTitle:"Explore all our business consulting and technology services",linkUrl:"https://www.ibm.com/services?lnk=hpmse_ts&lnk2=learn"}}},{title:"Financing",url:"https://www.ibm.com/financing?lnk=hpmse_fin&lnk2=learn",megapanelContent:{headingTitle:"Financing",headingUrl:"https://www.ibm.com/financing?lnk=hpmse_fin&lnk2=learn",description:"Funding options that fit your business",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"Cloud financing strategies that work for your business",imageUrl:"https://www.ibm.com/images/portal/F774737R30303N19/Skyline-Card-cloud-feature380x160.jpg?1=1",linkTitle:"Committed to cloud? Make the most of your cash flow.",linkUrl:"https://www.ibm.com/financing/solutions/cloud-financing?lnk=hpmse_fin&lnk2=learn"}}}]}]},{title:"Nulla quis sem at nibh elementum imperdiet",titleEnglish:"Nulla quis sem at nibh elementum imperdiet",url:"https://www.ibm.com/industries?lnk=min",hasMenu:!1,hasMegapanel:!1,menuSections:[]},{title:"Fusce nec tellus sed augue semper porta",titleEnglish:"Fusce nec tellus sed augue semper porta",url:"",hasMenu:!0,hasMegapanel:!1,menuSections:[{heading:"",menuItems:[{title:"IBM Developer",url:"https://developer.ibm.com/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"IBM Developer",headingUrl:"https://developer.ibm.com/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"IBM Developer newsletters",imageUrl:"https://1.dam.s81c.com/m/5908c17b26b9dd19/original/news-ibmdevnewsletters-600x245.jpg",linkTitle:"Technical info on popular software development topics, including AI, Blockchain, Java and more",linkUrl:"https://developer.ibm.com/newsletters/?lnk=hpmdev_dw&lnk2=learn"}}},{title:"Blockchain",url:"https://developer.ibm.com/technologies/blockchain/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"Blockchain",headingUrl:"https://developer.ibm.com/technologies/blockchain/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"Blockchain 101",imageUrl:"https://www.ibm.com/images/portal/E174255N41814O86/Blockchain2_600x245.jpg?1=3",linkTitle:"Build a kick-starter blockchain network and start coding with the IBM Blockchain Platform Starter Plan",linkUrl:"https://developer.ibm.com/tutorials/cl-ibm-blockchain-101-quick-start-guide-for-developers-bluemix-trs/?lnk=hpmdev_dw&lnk2=learn"}}},{title:"Containers",url:"https://developer.ibm.com/technologies/containers/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"Containers",headingUrl:"https://developer.ibm.com/technologies/containers/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Code patterns",url:"https://developer.ibm.com/patterns/category/containers/?lnk=hpmdev_dw&lnk2=learn"},{title:"Tutorials",url:"https://developer.ibm.com/tutorials/category/containers/?lnk=hpmdev_dw&lnk2=learn"},{title:"Events",url:"https://developer.ibm.com/events/category/containers/?lnk=hpmdev_dw&lnk2=learn"}]},feature:{heading:"Make sense of Kubernetes",imageUrl:"https://www.ibm.com/images/portal/E693054G76296P64/Kubernetes-Pythomn_600x245.jpg?1=2",linkTitle:"Deploy a simple Python application with Kubernetes",linkUrl:"https://developer.ibm.com/tutorials/scalable-python-app-with-kubernetes/?lnk=hpmdev_dw&lnk2=learn"}}},{title:"Analytics",url:"https://developer.ibm.com/technologies/analytics/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"Analytics",headingUrl:"https://developer.ibm.com/technologies/analytics/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Code patterns",url:"https://developer.ibm.com/patterns/category/analytics/?lnk=hpmdev_dw&lnk2=learn"},{title:"Tutorials",url:"https://developer.ibm.com/tutorials/category/analytics/?lnk=hpmdev_dw&lnk2=learn"},{title:"Events",url:"https://developer.ibm.com/events/category/analytics/?lnk=hpmdev_dw&lnk2=learn"},{title:"Developer community",url:"https://developer.ibm.com/watson/?lnk=hpmdev_dw&lnk2=learn"}]},feature:{heading:"Train your data no matter where it lives",imageUrl:"https://1.dam.s81c.com/m/76c0ed6f3e6386c1/original/Train-data_600x245.jpg",linkTitle:"Easily and securely connect to your data source for initial model training and continuous learning",linkUrl:"https://developer.ibm.com/announcements/training-machine-learning-models-in-watson-studio?lnk=hpmdev_dw&lnk2=learn"}}}]}]},{title:"Sed cursus ante dapibus diam",titleEnglish:"Sed cursus ante dapibus diam",url:"https://www.ibm.com/support/home/?lnk=msu_usen",hasMenu:!1,hasMegapanel:!1,menuSections:[]}]},o={title:"Analytics",url:"https://www.ibm.com/analytics",menuItems:[{title:"Products",titleEnglish:"Products",url:"https://www.ibm.com/analytics/products"},{title:"Solutions",titleEnglish:"Solutions",url:"https://www.ibm.com/analytics/solutions"},{title:"Services",titleEnglish:"Services",url:"https://www.ibm.com/industries?lnk=min"},{title:"Learn",titleEnglish:"Learn",menuSections:[{menuItems:[{title:"Blogs",url:"https://www.ibm.com/blogs/journey-to-ai/"},{title:"Client stories",url:"https://www.ibm.com/analytics/client-stories"},{title:"Communities",url:"https://www.ibm.com/analytics/communities"}]}]},{title:"Explore more",titleEnglish:"Explore more",menuSections:[{menuItems:[{title:"Product support",url:"https://www.ibm.com/analytics/support"},{title:"Expert gallery",url:"https://developer.ibm.com/technologies/blockchain/?lnk=hpmdev_dw&lnk2=learn"}]}]}]},l=[{title:"Products & Solutions",titleEnglish:"Products & Solutions",url:"",hasMenu:!0,hasMegapanel:!0,menuSections:[{heading:"",menuItems:[{title:"Top products & platforms",titleEnglish:"Top products & platforms",url:"https://www.ibm.com/products?lnk=hpmps_bupr&lnk2=link",highlighted:!0,megapanelContent:{headingTitle:"Top products & platforms",headingUrl:"https://www.ibm.com/products?lnk=hpmps_bupr",description:"",quickLinks:{title:"",links:[{title:"Db2",titleEnglish:"Db2",url:"https://www.ibm.com/analytics/db2?lnk=hpmps_bupr&lnk2=learn"},{title:"Hybrid Cloud",titleEnglish:"Hybrid Cloud",url:"https://www.ibm.com/cloud/hybrid?lnk=hpmps_bupr&lnk2=learn"},{title:"IBM Cloud",titleEnglish:"IBM Cloud",url:"https://www.ibm.com/cloud?lnk=hpmps_bupr&lnk2=learn"},{title:"IBM Security",titleEnglish:"IBM Security",url:"https://www.ibm.com/security?lnk=hpmps_bupr&lnk2=learn"},{title:"IBM Sterling",titleEnglish:"IBM Sterling",url:"https://www.ibm.com/supply-chain/sterling?lnk=hpmps_bupr&lnk2=learn"},{title:"IBM Z",titleEnglish:"IBM Z",url:"https://www.ibm.com/it-infrastructure/z?lnk=hpmps_bupr&lnk2=learn"},{title:"Red Hat",titleEnglish:"Red Hat",url:"https://www.ibm.com/cloud/redhat?lnk=hpmps_bupr&lnk2=learn"},{title:"SPSS Statistics",titleEnglish:"SPSS Statistics",url:"https://www.ibm.com/products/spss-statistics?lnk=hpmps_bupr&lnk2=learn"},{title:"The Weather Company",titleEnglish:"The Weather Company",url:"https://www.ibm.com/weather?lnk=hpmps_bupr&lnk2=learn"},{title:"Watson",titleEnglish:"Watson",url:"https://www.ibm.com/watson?lnk=hpmps_bupr&lnk2=learn"},{title:"WebSphere",titleEnglish:"WebSphere",url:"https://www.ibm.com/cloud/websphere-application-platform/?lnk=hpmps_bupr&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/7b8ce832a78108d5/original/megamenu-pictogram-top-products-and-services.png",linkTitle:"",linkUrl:""}}},{title:"Industries",titleEnglish:"Industries",url:"https://www.ibm.com/industries?lnk=hpmps_buin&lnk2=link",highlighted:!0,megapanelContent:{headingTitle:"Industries",headingUrl:"https://www.ibm.com/industries?lnk=hpmps_buin",description:"",quickLinks:{title:"",links:[{title:"Banking & financial markets",titleEnglish:"Banking & financial markets",url:"https://www.ibm.com/industries/banking-financial-markets?lnk=hpmps_buin&lnk2=learn"},{title:"Energy & utilities",titleEnglish:"Energy & utilities",url:"https://www.ibm.com/industries/energy?lnk=hpmps_buin&lnk2=learn"},{title:"Government - US Federal",titleEnglish:"Government - US Federal",url:"https://www.ibm.com/industries/federal?lnk=hpmps_buin&lnk2=learn"},{title:"Healthcare",titleEnglish:"Healthcare",url:"https://www.ibm.com/industries/healthcare?lnk=hpmps_buin&lnk2=learn"},{title:"Insurance",titleEnglish:"Insurance",url:"https://www.ibm.com/industries/insurance?lnk=hpmps_buin&lnk2=learn"},{title:"Manufacturing",titleEnglish:"Manufacturing",url:"https://www.ibm.com/industries/manufacturing?lnk=hpmps_buin&lnk2=learn"},{title:"Retail & consumer products",titleEnglish:"Retail & consumer products",url:"https://www.ibm.com/industries/retail-consumer-products?lnk=hpmps_buin&lnk2=learn"},{title:"Telco, media & entertainment",titleEnglish:"Telco, media & entertainment",url:"https://www.ibm.com/industries/telecom-media-entertainment?lnk=hpmps_buin&lnk2=learn"},{title:"Travel & transportation",titleEnglish:"Travel & transportation",url:"https://www.ibm.com/industries/travel-transportation?lnk=hpmps_buin&lnk2=learn"},{title:"View all Industries",titleEnglish:"View all Industries",url:"https://www.ibm.com/industries?lnk=hpmps_buin&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/6cad5af285e48a89/original/megamenu-pictogram-industries.png",linkTitle:"",linkUrl:""}}},{title:"Artificial intelligence",titleEnglish:"Artificial intelligence",url:"https://www.ibm.com/artificial-intelligence?lnk=hpmps_buai&lnk2=link",megapanelContent:{headingTitle:"Artificial intelligence",headingUrl:"https://www.ibm.com/artificial-intelligence?lnk=hpmps_buai",description:"",quickLinks:{title:"",links:[{title:"Customer service",titleEnglish:"Customer service",url:"https://www.ibm.com/watson/ai-customer-service?lnk=hpmps_buai&lnk2=learn"},{title:"Deep learning",titleEnglish:"Deep learning",url:"https://www.ibm.com/cloud/deep-learning?lnk=hpmps_buai&lnk2=learn"},{title:"Image recognition",titleEnglish:"Image recognition",url:"https://www.ibm.com/cloud/watson-visual-recognition?lnk=hpmps_buai&lnk2=learn"},{title:"Platforms & APIs",titleEnglish:"Platforms & APIs",url:"https://www.ibm.com/watson/products-services?lnk=hpmps_buai&lnk2=learn"},{title:"View all AI products",titleEnglish:"View all AI products",url:"https://www.ibm.com/us-en/products/category/technology/cognitive-computing-and-AI?lnk=hpmps_buai&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/3ed6517e90739279/original/megamenu-pictogram-artificial-intelligence.png",linkTitle:"",linkUrl:""}}},{title:"Automation",titleEnglish:"Automation",url:"https://www.ibm.com/automation?lnk=hpmps_buau&lnk2=link",megapanelContent:{headingTitle:"Automation",headingUrl:"https://www.ibm.com/automation?lnk=hpmps_buau",description:"",quickLinks:{title:"",links:[{title:"Business process automation",titleEnglish:"Business process automation",url:"https://www.ibm.com/automation/services?lnk=hpmps_buau&lnk2=learn"},{title:"Business process mapping",titleEnglish:"Business process mapping",url:"https://www.ibm.com/automation/process-mapping?lnk=hpmps_buau&lnk2=learn"},{title:"Business rules management",titleEnglish:"Business rules management",url:"https://www.ibm.com/automation/enterprise-content-management?lnk=hpmps_buau&lnk2=learn"},{title:"Data capture",titleEnglish:"Data capture",url:"https://www.ibm.com/automation/data-capture?lnk=hpmps_buau&lnk2=learn"},{title:"View all Automation products",titleEnglish:"View all Automation products",url:"https://www.ibm.com/automation/platform?lnk=hpmps_buau&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/15598df3a3519f7f/original/megamenu-pictogram-business-automation.png",linkTitle:"",linkUrl:""}}},{title:"Blockchain",titleEnglish:"Blockchain",url:"https://www.ibm.com/blockchain?lnk=hpmps_bubc&lnk2=link",megapanelContent:{headingTitle:"Blockchain",headingUrl:"https://www.ibm.com/blockchain?lnk=hpmps_bubc",description:"",quickLinks:{title:"",links:[{title:"Blockchain platform",titleEnglish:"Blockchain platform",url:"https://www.ibm.com/blockchain/platform?lnk=hpmps_bubc&lnk2=learn"},{title:"Transparent supply",titleEnglish:"Transparent supply",url:"https://www.ibm.com/blockchain/solutions/transparent-supply?lnk=hpmps_bubc&lnk2=learn"},{title:"Blockchain for supplier management",titleEnglish:"Blockchain for supplier management",url:"https://www.ibm.com/blockchain/solutions/trust-your-supplier?lnk=hpmps_bubc&lnk2=learn"},{title:"Blockchain for trade finance",titleEnglish:"Blockchain for trade finance",url:"https://www.ibm.com/blockchain/solutions/trade-finance?lnk=hpmps_bubc&lnk2=learn"},{title:"Blockchain for supply chain",titleEnglish:"Blockchain for supply chain",url:"https://www.ibm.com/blockchain/industries/supply-chain?lnk=hpmps_bubc&lnk2=learn"},{title:"Blockchain for food",titleEnglish:"Blockchain for food",url:"https://www.ibm.com/blockchain/solutions/food-trust?lnk=hpmps_bubc&lnk2=learn"},{title:"View all Blockchain products",titleEnglish:"View all Blockchain products",url:"https://www.ibm.com/us-en/products/category/technology/blockchain?lnk=hpmps_bubc&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/75dc99f23dced53/original/megamenu-pictogram-blockchain.png",linkTitle:"",linkUrl:""}}},{title:"Business operations",titleEnglish:"Business operations",url:"https://www.ibm.com/business-operations?lnk=hpmps_buop&lnk2=link",megapanelContent:{headingTitle:"Business operations",headingUrl:"https://www.ibm.com/business-operations?lnk=hpmps_buop",description:"",quickLinks:{title:"",links:[{title:"Enterprise asset management",titleEnglish:"Enterprise asset management",url:"https://www.ibm.com/business-operations/enterprise-asset-management?lnk=hpmps_buop&lnk2=learn"},{title:"Facilities management",titleEnglish:"Facilities management",url:"https://www.ibm.com/business-operations/facilities-management/integrated-workplace-management-system?lnk=hpmps_buop&lnk2=learn"},{title:"Systems engineering",titleEnglish:"Systems engineering",url:"https://www.ibm.com/business-operations/systems-engineering?lnk=hpmps_buop&lnk2=learn"},{title:"Weather Business Solutions",titleEnglish:"Weather Business Solutions",url:"https://www.ibm.com/weather/industries?lnk=hpmps_buop&lnk2=learn"},{title:"View all Business operations products",titleEnglish:"View all Business operations products",url:"https://www.ibm.com/us-en/products/category/business/business-operations?lnk=hpmps_buop&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5e600deb01c4ebd3/original/megamenu-pictogram-business-operations.png",linkTitle:"",linkUrl:""}}},{title:"Cloud computing",titleEnglish:"Cloud computing",url:"https://www.ibm.com/cloud?lnk=hpmps_bucl&lnk2=link",megapanelContent:{headingTitle:"Cloud computing",headingUrl:"https://www.ibm.com/cloud?lnk=hpmps_bucl",description:"",quickLinks:{title:"",links:[{title:"Containers",titleEnglish:"Containers",url:"https://www.ibm.com/cloud/container-service/?lnk=hpmps_bucl&lnk2=learn"},{title:"Databases",titleEnglish:"Databases",url:"https://www.ibm.com/cloud/databases?lnk=hpmps_bucl&lnk2=learn"},{title:"DevOps",titleEnglish:"DevOps",url:"https://www.ibm.com/cloud/devops?lnk=hpmps_bucl&lnk2=learn"},{title:"Hybrid Cloud",titleEnglish:"Hybrid Cloud",url:"https://www.ibm.com/cloud/hybrid?lnk=hpmps_bucl&lnk2=learn"},{title:"View all Cloud computing products",titleEnglish:"View all Cloud computing products",url:"https://www.ibm.com/us-en/products/category/technology/cloud-computing?lnk=hpmps_bucl&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/1f27aeccb7d68054/original/megamenu-pictogram-cloud-computing.png",linkTitle:"",linkUrl:""}}},{title:"Data & Analytics",titleEnglish:"Data & Analytics",url:"https://www.ibm.com/analytics?lnk=hpmps_buda&lnk2=link",megapanelContent:{headingTitle:"Data & Analytics",headingUrl:"https://www.ibm.com/analytics?lnk=hpmps_buda",description:"",quickLinks:{title:"",links:[{title:"Data Management",titleEnglish:"Data Management",url:"https://www.ibm.com/analytics/data-management?lnk=hpmps_buda&lnk2=learn"},{title:"Business intelligence",titleEnglish:"Business intelligence",url:"https://www.ibm.com/analytics/business-intelligence?lnk=hpmps_buda&lnk2=learn"},{title:"Data governance",titleEnglish:"Data governance",url:"https://www.ibm.com/analytics/data-governance?lnk=hpmps_buda&lnk2=learn"},{title:"Data science",titleEnglish:"Data science",url:"https://www.ibm.com/analytics/data-science-business-analytics?lnk=hpmps_buda&lnk2=learn"},{title:"View all Data & Analytics products",titleEnglish:"View all Data & Analytics products",url:"https://www.ibm.com/us-en/products/category/technology/analytics?lnk=hpmps_buda&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/6d9bf0fd66e54f9a/original/megamenu-pictogram-data-analytics.png",linkTitle:"",linkUrl:""}}},{title:"IT infrastructure",titleEnglish:"IT infrastructure",url:"https://www.ibm.com/it-infrastructure?lnk=hpmps_buit&lnk2=link",megapanelContent:{headingTitle:"IT infrastructure",headingUrl:"https://www.ibm.com/it-infrastructure?lnk=hpmps_buit",description:"",quickLinks:{title:"",links:[{title:"Data storage",titleEnglish:"Data storage",url:"https://www.ibm.com/it-infrastructure/storage?lnk=hpmps_buit&lnk2=learn"},{title:"Enterprise servers",titleEnglish:"Enterprise servers",url:"https://www.ibm.com/it-infrastructure/servers?lnk=hpmps_buit&lnk2=learn"},{title:"Hybrid cloud infrastructure",titleEnglish:"Hybrid cloud infrastructure",url:"https://www.ibm.com/it-infrastructure/solutions/hybrid-cloud?lnk=hpmps_buit&lnk2=learn"},{title:"Secure infrastructure",titleEnglish:"Secure infrastructure",url:"https://www.ibm.com/it-infrastructure/solutions/security?lnk=hpmps_buit&lnk2=learn"},{title:"Mainframes",titleEnglish:"Mainframes",url:"https://www.ibm.com/it-infrastructure/servers/mainframes?lnk=hpmps_buit&lnk2=learn"},{title:"View all IT infrastructure products",titleEnglish:"View all IT infrastructure products",url:"https://www.ibm.com/us-en/products/category/technology/IT-infrastructure?lnk=hpmps_buit&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/18758c6b890d488e/original/megamenu-pictogram-IT-infrastructure.png",linkTitle:"",linkUrl:""}}},{title:"Security",titleEnglish:"Security",url:"https://www.ibm.com/security?lnk=hpmps_buse&lnk2=link",megapanelContent:{headingTitle:"Security",headingUrl:"https://www.ibm.com/security?lnk=hpmps_buse",description:"",quickLinks:{title:"",links:[{title:"Data security",titleEnglish:"Data security",url:"https://www.ibm.com/security/data-security?lnk=hpmps_buse&lnk2=learn"},{title:"Identity & access management",titleEnglish:"Identity & access management",url:"https://www.ibm.com/security/identity-access-management?lnk=hpmps_buse&lnk2=learn"},{title:"Security information & event management",titleEnglish:"Security information & event management",url:"https://www.ibm.com/security/security-intelligence?lnk=hpmps_buse&lnk2=learn"},{title:"Security orchestration, automation & response",titleEnglish:"Security orchestration, automation & response",url:"https://www.ibm.com/security/intelligent-orchestration?lnk=hpmps_buse"},{title:"View all Security products",titleEnglish:"View all Security products",url:"https://www.ibm.com/us-en/products/category/technology/security?lnk=hpmps_buse&lnk2=learn?lnk=hpmps_buse&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/335f1d6485cede0/original/megamenu-pictogram-security.png",linkTitle:"",linkUrl:""}}},{title:"Supply chain",titleEnglish:"Supply chain",url:"https://www.ibm.com/supply-chain?lnk=hpmps_busc&lnk2=link",megapanelContent:{headingTitle:"Supply chain",headingUrl:"https://www.ibm.com/supply-chain?lnk=hpmps_busc",description:"",quickLinks:{title:"",links:[{title:"Supply chain visibility",titleEnglish:"Supply chain visibility",url:"https://www.ibm.com/supply-chain/visibility?lnk=hpmps_busc&lnk2=learn"},{title:"Supplier collaboration",titleEnglish:"Supplier collaboration",url:"https://www.ibm.com/supply-chain/supplier-collaboration-solutions?lnk=hpmps_busc&lnk2=learn"},{title:"Business process improvement",titleEnglish:"Business process improvement",url:"https://www.ibm.com/supply-chain/process-improvement-solutions?lnk=hpmps_busc&lnk2=learn"},{title:"Order management and fulfillment",titleEnglish:"Order management and fulfillment",url:"https://www.ibm.com/supply-chain/order-management-software?lnk=hpmps_busc&lnk2=learn"},{title:"View all Supply Chain products",titleEnglish:"View all Supply Chain products",url:"https://www.ibm.com/supply-chain/products?lnk=hpmps_busc&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/53c30e47cbfc167/original/megamenu-pictogram-supply-chain.png",linkTitle:"",linkUrl:""}}},{title:"Payment plans for Products & Solutions",titleEnglish:"Payment plans for Products & Solutions",url:"https://www.ibm.com/financing?lnk=hpmps_bufi&lnk2=link",highlighted:!0},{title:"View all products",titleEnglish:"View all products",url:"https://www.ibm.com/products?lnk=hpmps_buall&lnk2=link",megaPanelViewAll:!0}]}]},{title:"Consulting & Services",titleEnglish:"Consulting & Services",url:"",hasMenu:!0,hasMegapanel:!0,menuSections:[{heading:"",menuItems:[{title:"Business process services",titleEnglish:"Business process services",url:"https://www.ibm.com/services/process?lnk=hpmsc_bups&lnk2=link",megapanelContent:{headingTitle:"Business process services",headingUrl:"https://www.ibm.com/services/process?lnk=hpmsc_bups",description:"",quickLinks:{title:"",links:[{title:"Artificial intelligence services",titleEnglish:"Artificial intelligence services",url:"https://www.ibm.com/services/artificial-intelligence?lnk=hpmsc_bups&lnk2=learn"},{title:"Automation",titleEnglish:"Automation",url:"https://www.ibm.com/automation/services?lnk=hpmsc_bups&lnk2=learn"},{title:"Big data & data platform",titleEnglish:"Big data & data platform",url:"https://www.ibm.com/services/big-data-services?lnk=hpmsc_bups&lnk2=learn"},{title:"Business process outsourcing",titleEnglish:"Business process outsourcing",url:"https://www.ibm.com/services/process/outsourcing?lnk=hpmsc_bups&lnk2=learn"},{title:"Edge consulting",titleEnglish:"Edge consulting",url:"https://www.ibm.com/services/process/edge-services?lnk=hpmsc_bups&lnk2=learn"},{title:"Finance transformation",titleEnglish:"Finance transformation",url:"https://www.ibm.com/services/process/finance?lnk=hpmsc_bups&lnk2=learn"},{title:"IoT consulting",titleEnglish:"IoT consulting",url:"https://www.ibm.com/services/process/iot-consulting?lnk=hpmsc_bups&lnk2=learn"},{title:"Procurement & strategic sourcing",titleEnglish:"Procurement & strategic sourcing",url:"https://www.ibm.com/services/process/procurement?lnk=hpmsc_bups&lnk2=learn"},{title:"Risk consulting & fraud management",titleEnglish:"Risk consulting & fraud management",url:"https://www.ibm.com/services/process/risk?lnk=hpmsc_bups&lnk2=learn"},{title:"Supply chain",titleEnglish:"Supply chain",url:"https://www.ibm.com/services/process/supply-chain?lnk=hpmsc_bups&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/79a6c3cde7dd0665/original/megamenu-pictogram-business-process-service.png",linkTitle:"",linkUrl:""}}},{title:"Design & business strategy",titleEnglish:"Design & business strategy",url:"https://www.ibm.com/services/ibmix/?lnk=hpmsc_budbs&lnk2=link",megapanelContent:{headingTitle:"Design & business strategy",headingUrl:"https://www.ibm.com/services/ibmix/?lnk=hpmsc_bubs",description:"",quickLinks:{title:"",links:[{title:"Digital strategy",titleEnglish:"Digital strategy",url:"https://www.ibm.com/services/business/digital?lnk=hpmsc_bubs&lnk2=learn"},{title:"Experience strategy",titleEnglish:"Experience strategy",url:"https://www.ibm.com/services/ibmix/experience-strategy?lnk=hpmsc_bubs&lnk2=learn"},{title:"Marketing platforms",titleEnglish:"Marketing platforms",url:"https://www.ibm.com/services/ibmix/marketing-platforms?lnk=hpmsc_bubs&lnk2=learn"},{title:"Salesforce consulting",titleEnglish:"Salesforce consulting",url:"https://www.ibm.com/services/salesforce?lnk=hpmsc_bubs&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/1b7522c50ea39ca/original/megamenu-pictogram-design-business-strategy.png",linkTitle:"",linkUrl:""}}},{title:"Hybrid multicloud services",titleEnglish:"Hybrid multicloud services",url:"https://www.ibm.com/services/cloud?lnk=hpmsc_buhs?lnk=hpmsc_buhs",megapanelContent:{headingTitle:"Hybrid multicloud services",headingUrl:"https://www.ibm.com/services/cloud?lnk=hpmsc_buhs",description:"",quickLinks:{title:"",links:[{title:"Business continuity & resiliency",titleEnglish:"Business continuity & resiliency",url:"https://www.ibm.com/services/business-continuity?lnk=hpmsc_buhs&lnk2=learn"},{title:"Cloud services",titleEnglish:"Cloud services",url:"https://www.ibm.com/services/cloud?lnk=hpmsc_buhs&lnk2=learn"},{title:"Network",titleEnglish:"Network",url:"https://www.ibm.com/services/network?lnk=hpmsc_buhs&lnk2=learn"},{title:"Workplace services",titleEnglish:"Workplace services",url:"https://www.ibm.com/services/digital-workplace?lnk=hpmsc_buhs&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5daa9dce872913ea/original/megamenu-pictogram-hybrid-multi-cloud-services.png",linkTitle:"",linkUrl:""}}},{title:"Talent & transformation",titleEnglish:"Talent & transformation",url:"https://www.ibm.com/talent-management?lnk=hpmsc_buta&lnk2=link",megapanelContent:{headingTitle:"Talent & transformation",headingUrl:"https://www.ibm.com/talent-management?lnk=hpmsc_buta",description:"",quickLinks:{title:"",links:[{title:"HR transformation",titleEnglish:"HR transformation",url:"https://www.ibm.com/services/process/talent/human-resources?lnk=hpmsc_buta&lnk2=learn"},{title:"Talent acquisition",titleEnglish:"Talent acquisition",url:"https://www.ibm.com/talent-management/talent-acquisition?lnk=hpmsc_buta&lnk2=learn"},{title:"Talent development",titleEnglish:"Talent development",url:"https://www.ibm.com/services/process/talent/development?lnk=hpmsc_buta&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/69e350b141e12bd5/original/megamenu-pictogram-talent-and-transformation.png",linkTitle:"",linkUrl:""}}},{title:"Application services",titleEnglish:"Application services",url:"https://www.ibm.com/services/applications?lnk=hpmsc_buas&lnk2=link",megapanelContent:{headingTitle:"Application services",headingUrl:"https://www.ibm.com/services/applications?lnk=hpmsc_buas",description:"",quickLinks:{title:"",links:[{title:"Application development",titleEnglish:"Application development",url:"https://www.ibm.com/services/applications/development?lnk=hpmsc_buas&lnk2=learn"},{title:"Application Modernization",titleEnglish:"Application Modernization",url:"https://www.ibm.com/services/cloud/modernize-applications?lnk=hpmsc_buas&lnk2=learn"},{title:"Enterprise application management",titleEnglish:"Enterprise application management",url:"https://www.ibm.com/services/cloud/enterprise-application-management?lnk=hpmsc_buas&lnk2=learn"},{title:"Enterprise applications strategy",titleEnglish:"Enterprise applications strategy",url:"https://www.ibm.com/services/applications/enterprise?lnk=hpmsc_buas&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/2b7c180c68557dcb/original/megamenu-pictogram-application-services.png",linkTitle:"",linkUrl:""}}},{title:"Security services",titleEnglish:"Security services",url:"https://www.ibm.com/security/services?lnk=hpmsc_buse&lnk2=link",megapanelContent:{headingTitle:"Security services",headingUrl:"https://www.ibm.com/security/services?lnk=hpmsc_buse",description:"",quickLinks:{title:"",links:[{title:"Application security",titleEnglish:"Application security",url:"https://www.ibm.com/security/services/application-security-services?lnk=hpmsc_buse&lnk2=learn"},{title:"Cloud security",titleEnglish:"Cloud security",url:"https://www.ibm.com/security/services/cloud-security-services?lnk=hpmsc_buse&lnk2=learn"},{title:"Data security",titleEnglish:"Data security",url:"https://www.ibm.com/security/services/data-security?lnk=hpmsc_buse&lnk2=learn"},{title:"Identity & access management",titleEnglish:"Identity & access management",url:"https://www.ibm.com/security/services/identity-access-management?lnk=hpmsc_buse&lnk2=learn"},{title:"Managed security",titleEnglish:"Managed security",url:"https://www.ibm.com/security/services/managed-security-services?lnk=hpmsc_buse&lnk2=learn"},{title:"Security governance",titleEnglish:"Security governance",url:"https://www.ibm.com/security/services/security-governance?lnk=hpmsc_buse&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/6ecec25a8489cf82/original/megamenu-pictogram-security-services.png",linkTitle:"",linkUrl:""}}},{title:"Services for tech support",titleEnglish:"Services for tech support",url:"https://www.ibm.com/services/technology-support?lnk=hpmsc_busv&lnk2=link",megapanelContent:{headingTitle:"Services for tech support",headingUrl:"https://www.ibm.com/services/technology-support?lnk=hpmsc_busv",description:"",quickLinks:{title:"",links:[{title:"Open source",titleEnglish:"Open source",url:"https://www.ibm.com/services/technology-support/open-source?lnk=hpmsc_busv&lnk2=learn"},{title:"Third party & multivendor",titleEnglish:"Third party & multivendor",url:"https://www.ibm.com/services/technology-support/multivendor-it?lnk=hpmsc_busv&lnk2=learn"},{title:"IBM warranties and maintenance",titleEnglish:"IBM warranties and maintenance",url:"https://www.ibm.com/services/technology-support/hardware-software?lnk=hpmsc_busv&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/7056e2b83b04133e/original/megamenu-pictogram-services-for-tech-support.png",linkTitle:"",linkUrl:""}}},{title:"Payment plans for Services & Consulting",titleEnglish:"Payment plans for Services & Consulting",url:"https://www.ibm.com/financing/solutions/it-services-financing?lnk=hpmsc_bufi&lnk2=link"},{title:"View all services",titleEnglish:"View all services",url:"https://www.ibm.com/services?lnk=hpmsc_buall&lnk2=link",megaPanelViewAll:!0}]}]},{title:"Learn & Support",titleEnglish:"Learn & Support",url:"",hasMenu:!0,hasMegapanel:!0,menuSections:[{heading:"",menuItems:[{title:"Support",titleEnglish:"Support",url:"https://www.ibm.com/support?lnk=hpmls_busu&lnk2=link",megapanelContent:{headingTitle:"Support",headingUrl:"https://www.ibm.com/support?lnk=hpmls_busu",description:"",quickLinks:{title:"",links:[{title:"IBM Support",titleEnglish:"IBM Support",url:"https://www.ibm.com/support?lnk=hpmls_busu&lnk2=learn"},{title:"IBM Cloud Support",titleEnglish:"IBM Cloud Support",url:"https://www.ibm.com/cloud/support?lnk=hpmls_busu&lnk2=learn"},{title:"IBM Developer",titleEnglish:"IBM Developer",url:"https://developer.ibm.com/?lnk=hpmls_busu&lnk2=learn"},{title:"IBM Community",titleEnglish:"IBM Community",url:"https://community.ibm.com/community/user/home?lnk=hpmls_busu&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5b1abed637b01b55/original/megamenu-pictogram-support.png",linkTitle:"",linkUrl:""}}},{title:"Documentation",titleEnglish:"Documentation",url:"https://www.ibm.com/support/knowledgecenter/?lnk=hpmls_budc&lnk2=link",megapanelContent:{headingTitle:"Documentation",headingUrl:"https://www.ibm.com/support/knowledgecenter/?lnk=hpmls_budc",description:"",quickLinks:{title:"",links:[{title:"All product documentation",titleEnglish:"All product documentation",url:"https://www.ibm.com/support/knowledgecenter?lnk=hpmls_budc&lnk2=learn"},{title:"For products on IBM Cloud",titleEnglish:"For products on IBM Cloud",url:"https://cloud.ibm.com/docs?lnk=hpmls_budc&lnk2=learn"},{title:"For use cases (IBM Redbooks)",titleEnglish:"For use cases (IBM Redbooks)",url:"http://www.redbooks.ibm.com/?lnk=hpmls_budc&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/49d529fab45bb565/original/megamenu-pictogram-documentation.png",linkTitle:"",linkUrl:""}}},{title:"Developer education",titleEnglish:"Developer education",url:"https://developer.ibm.com/?lnk=hpmls_bude&lnk2=link",megapanelContent:{headingTitle:"Developer education",headingUrl:"https://developer.ibm.com/?lnk=hpmls_bude",description:"",quickLinks:{title:"",links:[{title:"Code patterns",titleEnglish:"Code patterns",url:"https://developer.ibm.com/patterns/?lnk=hpmls_bude&lnk2=learn"},{title:"Developer community",titleEnglish:"Developer community",url:"https://developer.ibm.com/community/?lnk=hpmls_bude&lnk2=learn"},{title:"Developer events",titleEnglish:"Developer events",url:"https://developer.ibm.com/events/?lnk=hpmls_bude&lnk2=learn"},{title:"Open Source @ IBM",titleEnglish:"Open Source @ IBM",url:"https://ibm.com/opensource?lnk=hpmls_bude&lnk2=learn"},{title:"Technical articles",titleEnglish:"Technical articles",url:"https://developer.ibm.com/articles?lnk=hpmls_bude&lnk2=learn"},{title:"Tutorials",titleEnglish:"Tutorials",url:"https://developer.ibm.com/tutorials/?lnk=hpmls_bude&lnk2=learn"},{title:"Videos",titleEnglish:"Videos",url:"https://developer.ibm.com/videos?lnk=hpmls_bude&lnk2=learn"},{title:"View more Developer education",titleEnglish:"View more Developer education",url:"https://developer.ibm.com/?lnk=hpmls_bude&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/1e651d0f7b539774/original/megamenu-pictogram-developer-education.png",linkTitle:"",linkUrl:""}}},{title:"Training",titleEnglish:"Training",url:"https://www.ibm.com/training/?lnk=hpmls_butr&lnk2=link",megapanelContent:{headingTitle:"Training",headingUrl:"https://www.ibm.com/training/?lnk=hpmls_butr",description:"",quickLinks:{title:"",links:[{title:"Courses",titleEnglish:"Courses",url:"https://www.ibm.com/training/search?q=course&lnk=hpmls_butr&lnk2=learn"},{title:"Learning journeys",titleEnglish:"Learning journeys",url:"https://www.ibm.com/training/journeys?lnk=hpmls_butr&lnk2=learn"},{title:"Professional certifications",titleEnglish:"Professional certifications",url:"https://www.ibm.com/certify?lnk=hpmls_butr&lnk2=learn"},{title:"Digital learning subscriptions",titleEnglish:"Digital learning subscriptions",url:"https://www.ibm.com/training/subscriptions?lnk=hpmls_butr&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5540e5627aeb2568/original/megamenu-pictogram-training.png",linkTitle:"",linkUrl:""}}},{title:"Resources",titleEnglish:"Resources",url:"https://www.ibm.com/blogs/?lnk=hpmls_bure&lnk2=link",megapanelContent:{headingTitle:"Resources",headingUrl:"https://www.ibm.com/blogs/?lnk=hpmls_bure",description:"",quickLinks:{title:"",links:[{title:"Blogs",titleEnglish:"Blogs",url:"https://www.ibm.com/blogs/?lnk=hpmls_bure&lnk2=learn"},{title:"Case studies",titleEnglish:"Case studies",url:"https://www.ibm.com/case-studies?lnk=hpmls_bure&lnk2=learn"},{title:"Events",titleEnglish:"Events",url:"http://www.ibm.com/events?lnk=hpmls_bure&lnk2=learn"},{title:"IBM Institute for Business Value",titleEnglish:"IBM Institute for Business Value",url:"https://www.ibm.com/thought-leadership/institute-business-value?lnk=hpmls_bure&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/164ef3660bad78a8/original/megamenu-pictogram-resources.png",linkTitle:"",linkUrl:""}}},{title:"What is...",titleEnglish:"What is...",url:"https://www.ibm.com/cloud/learn?lnk=hpmls_buwi&lnk2=link",megapanelContent:{headingTitle:"What is...",headingUrl:"https://www.ibm.com/cloud/learn?lnk=hpmls_buwi",description:"",quickLinks:{title:"",links:[{title:"Artificial intelligence",titleEnglish:"Artificial intelligence",url:"https://www.ibm.com/cloud/learn/artificial-intelligence?lnk=hpmls_buwi&lnk2=learn"},{title:"Automation",titleEnglish:"Automation",url:"https://www.ibm.com/topics/automation?lnk=hpmls_buwi&lnk2=learn"},{title:"Blockchain",titleEnglish:"Blockchain",url:"https://www.ibm.com/blockchain/what-is-blockchain?lnk=hpmls_buwi&lnk2=learn"},{title:"Business intelligence",titleEnglish:"Business intelligence",url:"https://www.ibm.com/topics/business-intelligence?lnk=hpmls_buwi&lnk2=learn"},{title:"Cloud computing",titleEnglish:"Cloud computing",url:"https://www.ibm.com/cloud/learn/cloud-computing?lnk=hpmls_buwi&lnk2=learn"},{title:"Cybersecurity",titleEnglish:"Cybersecurity",url:"https://www.ibm.com/topics/cybersecurity?lnk=hpmls_buwi&lnk2=learn"},{title:"DevOps",titleEnglish:"DevOps",url:"https://www.ibm.com/cloud/learn/devops-a-complete-guide?lnk=hpmls_buwi&lnk2=learn"},{title:"Hybrid Cloud",titleEnglish:"Hybrid Cloud",url:"https://www.ibm.com/cloud/learn/hybrid-cloud?lnk=hpmls_buwi"},{title:"Kubernetes",titleEnglish:"Kubernetes",url:"https://www.ibm.com/cloud/learn/kubernetes?lnk=hpmls_buwi&lnk2=learn"},{title:"Quantum computing",titleEnglish:"Quantum computing",url:"https://www.ibm.com/quantum-computing/learn/what-is-quantum-computing/?lnk=hpmls_buwi&lnk2=learn"},{title:"Supply chain",titleEnglish:"Supply chain",url:"https://www.ibm.com/topics/supply-chain-management?lnk=hpmls_buwi&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/581adf40f2b008ec/original/megamenu-pictogram-what-is-_.png",linkTitle:"",linkUrl:""}}}]}]},{title:"Explore more",titleEnglish:"Explore more",url:"",hasMenu:!0,hasMegapanel:!0,menuSections:[{heading:"",menuItems:[{title:"Partners",titleEnglish:"Partners",url:"https://www.ibm.com/partnerworld/public?lnk=hpmex_bupa&lnk2=link",megapanelContent:{headingTitle:"Partners",headingUrl:"https://www.ibm.com/partnerworld/public?lnk=hpmex_bupa",description:"",quickLinks:{title:"",links:[{title:"Partner with us (PartnerWorld)",titleEnglish:"Partner with us (PartnerWorld)",url:"https://www.ibm.com/partnerworld/public?lnk=hpmex_bupa&lnk2=learn"},{title:"Our strategic partnerships",titleEnglish:"Our strategic partnerships",url:"https://www.ibm.com/alliances?lnk=hpmex_bupa&lnk2=learn"},{title:"Payment plans for IBM Partners",titleEnglish:"Payment plans for IBM Partners",url:"https://www.ibm.com/partnerworld/financing?lnk=hpmex_bupa&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/4075a8633a1137d/original/megamenu-pictogram-partners.png",linkTitle:"",linkUrl:""}}},{title:"IBM Research",titleEnglish:"IBM Research",url:"https://www.research.ibm.com/?lnk=hpmex_bure&lnk2=link",megapanelContent:{headingTitle:"IBM Research",headingUrl:"https://www.research.ibm.com/?lnk=hpmex_bure",description:"",quickLinks:{title:"",links:[{title:"Research areas",titleEnglish:"Research areas",url:"https://www.research.ibm.com/?lnk=hpmex_bure&lnk2=learn"},{title:"Researcher directory",titleEnglish:"Researcher directory",url:"https://researcher.watson.ibm.com/researcher/people.php?lnk=hpmex_bure&lnk2=learn"},{title:"Patents",titleEnglish:"Patents",url:"https://www.research.ibm.com/patents/?lnk=hpmex_bure&lnk2=learn"},{title:"Work with us",titleEnglish:"Work with us",url:"https://www.research.ibm.com/frontiers/?lnk=hpmex_bure&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5e05b0b234bc3846/original/megamenu-pictogram-ibm-research.png",linkTitle:"",linkUrl:""}}},{title:"About IBM",titleEnglish:"About IBM",url:"https://www.ibm.com/about?lnk=hpmex_buab",megapanelContent:{headingTitle:"About IBM",headingUrl:"https://www.ibm.com/about?lnk=hpmex_buab",description:"",quickLinks:{title:"",links:[{title:"Annual report",titleEnglish:"Annual report",url:"https://www.ibm.com/annualreport/?lnk=hpmex_buab&lnk2=learn"},{title:"Career opportunities",titleEnglish:"Career opportunities",url:"https://www.ibm.com/employment/?lnk=hpmex_buab&lnk2=learn"},{title:"Corporate social responsibility",titleEnglish:"Corporate social responsibility",url:"https://www.IBM.org?lnk=hpmex_buab&lnk2=learn"},{title:"Diversity & inclusion",titleEnglish:"Diversity & inclusion",url:"https://www.ibm.com/employment/inclusion/?lnk=hpmex_buab&lnk2=learn"},{title:"Investor relations",titleEnglish:"Investor relations",url:"https://www.ibm.com/investor/?lnk=hpmex_buab&lnk2=learn"},{title:"News & announcements",titleEnglish:"News & announcements",url:"http://newsroom.ibm.com?lnk=hpmex_buab&lnk2=learn"},{title:"Thought leadership",titleEnglish:"Thought leadership",url:"https://www.ibm.com/thought-leadership/?lnk=hpmex_buab&lnk2=learn"},{title:"Security, privacy & trust",titleEnglish:"Security, privacy & trust",url:"https://www.ibm.com/trust?lnk=hpmex_buab&lnk2=learn"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/220eb8ea8345a4d6/original/megamenu-pictogram-about-ibm.png",linkTitle:"",linkUrl:""}}},{title:"COVID-19",titleEnglish:"COVID-19",url:"https://www.ibm.com/impact/covid-19?lnk=hpmex_buco&lnk2=link",megapanelContent:{headingTitle:"COVID-19",headingUrl:"https://www.ibm.com/impact/covid-19?lnk=hpmex_buco",description:"",quickLinks:{title:"",links:[{title:"Business solutions",titleEnglish:"Business solutions",url:"https://www.ibm.com/impact/covid-19/business-solutions?lnk=hpmex_buco&lnk2=learn"},{title:"Action guide",titleEnglish:"Action guide",url:"https://www.ibm.com/thought-leadership/institute-business-value/report/covid-19-action-guide?lnk=hpmex_buco&lnk2=learn"},{title:"News",titleEnglish:"News",url:"https://newsroom.ibm.com/COVID-19?lnk=hpmex_buco&lnk2=learn"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}}]}]}];n.a=l},"./src/components/masthead/__stories__/masthead.stories.scss":function(e,n,t){"use strict";var a=t("../../node_modules/lit-element/lit-element.js");n.a=Object(a.b)([".dds-ce-demo-devenv--container{padding-top:calc(3rem + 3rem + 1px);will-change:margin-left;transition:margin-left 0.11s cubic-bezier(0.2, 0, 1, 0.9)}@media (max-width: 65.98rem){.bx--offset-lg-3{margin-left:0}}.bx--content{padding:6rem 0 2rem}@media (max-width: 65.98rem){.bx--content{padding-top:0}}.bx--content.has-leadspace{padding-top:0}@media (max-width: 65.98rem){.bx--content.has-l1{padding-top:3rem}}.bx--content.has-leadspace.has-l1{padding-top:3rem}.bx--content.dds-ce-demo-devenv--ui-shell-content h2{margin:30px 0}.bx--content.dds-ce-demo-devenv--ui-shell-content h2:first-of-type{margin-top:0}\n"])},"./src/components/masthead/__stories__/masthead.stories.ts":function(e,n,t){"use strict";t.r(n),t.d(n,"Default",(function(){return Pe})),t.d(n,"WithCustomTypeahead",(function(){return we})),t.d(n,"searchOpenOnload",(function(){return ke})),t.d(n,"withPlatform",(function(){return $e})),t.d(n,"withL1",(function(){return ye})),t.d(n,"withAlternateLogoAndTooltip",(function(){return ve})),t.d(n,"WithScopedSearch",(function(){return je}));t("../../node_modules/core-js/modules/es.symbol.iterator.js"),t("../../node_modules/core-js/modules/es.array.slice.js"),t("../../node_modules/core-js/modules/es.object.freeze.js"),t("../../node_modules/core-js/modules/es.symbol.async-iterator.js"),t("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),t("../../node_modules/core-js/modules/es.math.to-string-tag.js"),t("../../node_modules/core-js/modules/es.json.to-string-tag.js"),t("../../node_modules/core-js/modules/es.object.create.js"),t("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),t("../../node_modules/core-js/modules/es.function.name.js"),t("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),t("../../node_modules/core-js/modules/es.array.reverse.js"),t("../../node_modules/core-js/modules/es.object.keys.js"),t("../../node_modules/core-js/modules/es.symbol.js"),t("../../node_modules/core-js/modules/es.array.filter.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),t("../../node_modules/core-js/modules/es.array.for-each.js"),t("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),t("../../node_modules/core-js/modules/es.object.define-properties.js"),t("../../node_modules/core-js/modules/es.object.define-property.js"),t("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),t("../../node_modules/core-js/modules/es.date.to-primitive.js"),t("../../node_modules/core-js/modules/es.symbol.description.js"),t("../../node_modules/core-js/modules/es.object.to-string.js"),t("../../node_modules/core-js/modules/es.number.constructor.js"),t("../../node_modules/core-js/modules/es.promise.js"),t("../../node_modules/core-js/modules/web.url.js"),t("../../node_modules/core-js/modules/es.string.iterator.js"),t("../../node_modules/core-js/modules/es.array.iterator.js"),t("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),t("../../node_modules/core-js/modules/es.string.search.js"),t("../../node_modules/core-js/modules/es.regexp.exec.js");var a,s,o,l,r,i,c,u,h,m,d,p,f,b,N,g,P,w,k,$,y,v=t("../../node_modules/lit-element/lit-element.js"),S=t("./node_modules/@storybook/addon-knobs/dist/index.js"),L=t("../../node_modules/carbon-components/es/globals/js/misc/on.js"),M=t("./src/internal/vendor/@carbon/web-components/globals/directives/if-non-null.js"),I=t("../../node_modules/@percy-io/in-percy/src/index.js"),j=t.n(I),O=t("./.storybook/knob-text-nullable.ts"),C=(t("./src/components/masthead/masthead-container.ts"),t("./src/components/masthead/__stories__/masthead.stories.scss")),_=t("./src/components/masthead/__stories__/links.ts"),D=t("./src/internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI.js"),T=t("./src/components/masthead/__stories__/profile-items.ts"),x=t("./src/globals/internal/feature-flags.ts"),E=t("./src/components/masthead/__stories__/README.stories.mdx");function U(){U=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,a=Object.defineProperty||function(e,n,t){e[n]=t.value},s="function"==typeof Symbol?Symbol:{},o=s.iterator||"@@iterator",l=s.asyncIterator||"@@asyncIterator",r=s.toStringTag||"@@toStringTag";function i(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{i({},"")}catch(e){i=function(e,n,t){return e[n]=t}}function c(e,n,t,s){var o=n&&n.prototype instanceof m?n:m,l=Object.create(o.prototype),r=new S(s||[]);return a(l,"_invoke",{value:k(e,t,r)}),l}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var h={};function m(){}function d(){}function p(){}var f={};i(f,o,(function(){return this}));var b=Object.getPrototypeOf,N=b&&b(b(L([])));N&&N!==n&&t.call(N,o)&&(f=N);var g=p.prototype=m.prototype=Object.create(f);function P(e){["next","throw","return"].forEach((function(n){i(e,n,(function(e){return this._invoke(n,e)}))}))}function w(e,n){function s(a,o,l,r){var i=u(e[a],e,o);if("throw"!==i.type){var c=i.arg,h=c.value;return h&&"object"==R(h)&&t.call(h,"__await")?n.resolve(h.__await).then((function(e){s("next",e,l,r)}),(function(e){s("throw",e,l,r)})):n.resolve(h).then((function(e){c.value=e,l(c)}),(function(e){return s("throw",e,l,r)}))}r(i.arg)}var o;a(this,"_invoke",{value:function(e,t){function a(){return new n((function(n,a){s(e,t,n,a)}))}return o=o?o.then(a,a):a()}})}function k(e,n,t){var a="suspendedStart";return function(s,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===s)throw o;return M()}for(t.method=s,t.arg=o;;){var l=t.delegate;if(l){var r=$(l,t);if(r){if(r===h)continue;return r}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===a)throw a="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);a="executing";var i=u(e,n,t);if("normal"===i.type){if(a=t.done?"completed":"suspendedYield",i.arg===h)continue;return{value:i.arg,done:t.done}}"throw"===i.type&&(a="completed",t.method="throw",t.arg=i.arg)}}}function $(e,n){var t=n.method,a=e.iterator[t];if(void 0===a)return n.delegate=null,"throw"===t&&e.iterator.return&&(n.method="return",n.arg=void 0,$(e,n),"throw"===n.method)||"return"!==t&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+t+"' method")),h;var s=u(a,e.iterator,n.arg);if("throw"===s.type)return n.method="throw",n.arg=s.arg,n.delegate=null,h;var o=s.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,h):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,h)}function y(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function v(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(y,this),this.reset(!0)}function L(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,s=function n(){for(;++a<e.length;)if(t.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=void 0,n.done=!0,n};return s.next=s}}return{next:M}}function M(){return{value:void 0,done:!0}}return d.prototype=p,a(g,"constructor",{value:p,configurable:!0}),a(p,"constructor",{value:d,configurable:!0}),d.displayName=i(p,r,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===d||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,i(e,r,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},P(w.prototype),i(w.prototype,l,(function(){return this})),e.AsyncIterator=w,e.async=function(n,t,a,s,o){void 0===o&&(o=Promise);var l=new w(c(n,t,a,s),o);return e.isGeneratorFunction(t)?l:l.next().then((function(e){return e.done?e.value:l.next()}))},P(g),i(g,r,"Generator"),i(g,o,(function(){return this})),i(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=Object(e),t=[];for(var a in n)t.push(a);return t.reverse(),function e(){for(;t.length;){var a=t.pop();if(a in n)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=L,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(v),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(t,a){return l.type="throw",l.arg=e,n.next=t,a&&(n.method="next",n.arg=void 0),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var o=this.tryEntries[s],l=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var r=t.call(o,"catchLoc"),i=t.call(o,"finallyLoc");if(r&&i){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.tryLoc<=this.prev&&t.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var o=s;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var l=o?o.completion:{};return l.type=e,l.arg=n,o?(this.method="next",this.next=o.finallyLoc,h):this.complete(l)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),h},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),v(t),h}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var a=t.completion;if("throw"===a.type){var s=a.arg;v(t)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:L(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),h}},e}function B(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}function A(e,n,t,a,s,o,l){try{var r=e[o](l),i=r.value}catch(e){return void t(e)}r.done?n(i):Promise.resolve(i).then(a,s)}function W(e){return function(){var n=this,t=arguments;return new Promise((function(a,s){var o=e.apply(n,t);function l(e){A(o,a,s,l,r,"next",e)}function r(e){A(o,a,s,l,r,"throw",e)}l(void 0)}))}}function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}var F,q,H,V,G,Z,X,z,Y,Q,J,K,ee,ne,te,ae,se,oe,le,re,ie;function ce(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function ue(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?ce(Object(t),!0).forEach((function(n){he(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ce(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function he(e,n,t){return(n=function(e){var n=function(e,n){if("object"!==R(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==R(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===R(n)?n:String(n)}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var me={authenticated:"test.user@ibm.com",unauthenticated:D.b},de="IBM Cloud",pe="https://www.ibm.com/cloud",fe={"en-US":{url:"https://www.example.com/us-en"},"fr-FR":{url:"https://www.example.com/fr-fr/sample"},"es-MX":{url:"https://www.example.com/ibm/es-mx/sample"}},be=[{name:"All",appId:"all",value:"all"},{name:"Analyst",appId:"analyst",value:"analyst"},{name:"PartnerWorld",appId:"pw",value:["pw","pwp"]},{name:"Developer",appId:"dw",value:["dw","dwaspera"]},{name:"IBM Docs",appId:"ibmdocs",label:"Search Label",value:["ibmdocs","dw"]}];function Ne(e){return ge.apply(this,arguments)}function ge(){return(ge=W(U().mark((function e(n){return U().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",fetch("https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=".concat(n,"&lang=undefined&categories=&limit=6")).then((function(e){return e.json()})).then((function(e){return[e.hints,{title:"Product pages",items:e.products}]})));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var Pe=function(e){var n,t,l=null!==(n=null==e?void 0:e.MastheadComposite)&&void 0!==n?n:{},r=l.customProfileLogin,i=l.platform,c=l.hasProfile,u=l.hasSearch,h=l.selectedMenuItem,m=l.searchPlaceholder,d=l.userStatus,p=l.navLinks,f=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return Object(v.d)(F||(F=a||(a=B(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),C.a,f?Object(v.d)(q||(q=s||(s=B(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"></dds-masthead-composite>\n        ']))),Object(M.a)(i),Object(M.a)(pe),Object(M.a)(h),Object(M.a)(d),Object(M.a)(m),Object(M.a)(T.a),c,u,p,Object(M.a)(T.b),r):Object(v.d)(H||(H=o||(o=B(['\n          <dds-masthead-container\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"></dds-masthead-container>\n        ']))),Object(M.a)(i),Object(M.a)(pe),Object(M.a)(h),Object(M.a)(d),Object(M.a)(m),p,c,u,r))},we=function(e){var n,t,a=null!==(n=null==e?void 0:e.MastheadComposite)&&void 0!==n?n:{},s=a.customProfileLogin,o=a.navLinks,c=a.platform,u=a.selectedMenuItem,h=a.userStatus,m=a.searchPlaceholder,d=a.hasProfile,p=a.hasSearch,f=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return document.documentElement.addEventListener("dds-search-with-typeahead-input",function(){var e=W(U().mark((function e(n){var t;return U().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ne(n.detail.value);case 2:t=e.sent,document.dispatchEvent(new CustomEvent("dds-custom-typeahead-api-results",{detail:t}));case 4:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}()),Object(v.d)(V||(V=l||(l=B(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),C.a,f?Object(v.d)(G||(G=r||(r=B(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            ?custom-typeahead-api=',"></dds-masthead-composite>\n        "]))),Object(M.a)(c),Object(M.a)(pe),Object(M.a)(u),Object(M.a)(h),Object(M.a)(m),Object(M.a)(T.a),d,p,o,Object(M.a)(T.b),s,!0):Object(v.d)(Z||(Z=i||(i=B(['\n          <dds-masthead-container\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            ?custom-typeahead-api=',"></dds-masthead-container>\n        "]))),Object(M.a)(c),Object(M.a)(pe),Object(M.a)(u),Object(M.a)(h),Object(M.a)(m),o,d,p,s,!0))};we.story={name:"With custom typeahead"};var ke=function(e){var n,t,a=null!==(n=null==e?void 0:e.MastheadComposite)&&void 0!==n?n:{},s=a.customProfileLogin,o=a.platform,l=a.selectedMenuItem,r=a.userStatus,i=a.searchPlaceholder,m=a.hasProfile,d=a.hasSearch,p=a.navLinks,f=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return Object(v.d)(X||(X=c||(c=B(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),C.a,f?Object(v.d)(z||(z=u||(u=B(['\n          <dds-masthead-composite\n            activate-search="true"\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"></dds-masthead-composite>\n        ']))),Object(M.a)(de),Object(M.a)(pe),Object(M.a)(l),Object(M.a)(r),Object(M.a)(i),Object(M.a)(T.a),p,m,d,Object(M.a)(T.b),s):Object(v.d)(Y||(Y=h||(h=B(['\n          <dds-masthead-container\n            activate-search="true"\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"></dds-masthead-container>\n        ']))),Object(M.a)(o),Object(M.a)(pe),Object(M.a)(l),Object(M.a)(r),Object(M.a)(i),p,m,d,s))};ke.story={name:"Search open onload"};var $e=function(e){var n,t,a=null!==(n=null==e?void 0:e.MastheadComposite)&&void 0!==n?n:{},s=a.selectedMenuItem,o=a.userStatus,l=a.navLinks,r=a.hasProfile,i=a.hasSearch,c=a.searchPlaceholder,u=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return Object(v.d)(Q||(Q=m||(m=B(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),C.a,u?Object(v.d)(J||(J=d||(d=B(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            .unauthenticatedProfileItems="','"></dds-masthead-composite>\n        ']))),Object(M.a)(de),Object(M.a)(fe),Object(M.a)(s),Object(M.a)(o),Object(M.a)(c),Object(M.a)(T.a),l,r,i,Object(M.a)(T.b)):Object(v.d)(K||(K=p||(p=B(['\n          <dds-masthead-container\n            platform="Platform"\n            .platformUrl="','"\n            user-status="','"\n            searchPlaceholder="','"\n            has-profile="','"\n            ?has-search="','"></dds-masthead-container>\n        ']))),Object(M.a)(pe),Object(M.a)(o),Object(M.a)(c),r,i))};$e.story={name:"With platform",parameters:{knobs:{MastheadComposite:function(){return{hasProfile:Object(S.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(S.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(O.a)("search placeholder (searchPlaceholder)",j()()?"":"Search all of IBM"),selectedMenuItem:Object(O.a)("selected menu item (selected-menu-item)","Consulting & Services"),userStatus:Object(S.select)("The user authenticated status (user-status)",me,me.unauthenticated)}}},propsSet:{default:{MastheadComposite:{hasProfile:"true",hasSearch:!0,searchPlaceHolder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:me.unauthenticated}}}}};var ye=function(e){var n,t,a=null!==(n=null==e?void 0:e.MastheadComposite)&&void 0!==n?n:{},s=a.selectedMenuItem,o=a.userStatus,l=a.navLinks,r=a.hasProfile,i=a.hasSearch,c=a.searchPlaceholder,u=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return Object(v.d)(ee||(ee=f||(f=B(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),C.a,u?Object(v.d)(ne||(ne=b||(b=B(['\n          <dds-masthead-composite\n            selected-menu-item="','"\n            searchPlaceholder="','"\n            user-status="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .l1Data="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"></dds-masthead-composite>\n        ']))),Object(M.a)(s),Object(M.a)(c),Object(M.a)(o),Object(M.a)(T.a),r,i,_.d,l,Object(M.a)(T.b)):Object(v.d)(te||(te=N||(N=B(['\n          <dds-masthead-container\n            selected-menu-item="','"\n            user-status="','"\n            has-profile="','"\n            ?has-search="','"\n            .l1Data="','"\n            .navLinks="','"></dds-masthead-container>\n        ']))),Object(M.a)(s),Object(M.a)(o),r,i,_.d,l))};ye.story={name:"With L1",parameters:{knobs:{MastheadComposite:function(){return{hasProfile:Object(S.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(S.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(O.a)("search placeholder (searchPlaceholder)",j()()?"":"Search all of IBM"),selectedMenuItem:Object(O.a)("selected menu item (selected-menu-item)","Products"),userStatus:Object(S.select)("The user authenticated status (user-status)",me,me.unauthenticated)}}},propsSet:{default:{MastheadComposite:{hasProfile:"true",hasSearch:!0,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Lorem ipsum dolor sit amet",userStatus:me.unauthenticated}}}}};var ve=function(e){var n,t,a=null!==(n=null==e?void 0:e.MastheadComposite)&&void 0!==n?n:{},s=a.selectedMenuItem,o=a.userStatus,l=a.navLinks,r=a.hasProfile,i=a.hasSearch,c=a.searchPlaceholder,u=a.mastheadLogo,h=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return Object(v.d)(ae||(ae=g||(g=B(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),C.a,h?Object(v.d)(se||(se=P||(P=B(['\n          <dds-masthead-composite\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .logoData="','"\n            .unauthenticatedProfileItems="','"></dds-masthead-composite>\n        ']))),Object(M.a)(s),Object(M.a)(o),Object(M.a)(c),Object(M.a)(T.a),r,i,l,"alternateWithTooltip"===u?_.c:null,Object(M.a)(T.b)):Object(v.d)(oe||(oe=w||(w=B(['\n          <dds-masthead-container\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            .logoData="','"\n            has-profile="','"\n            ?has-search="','"></dds-masthead-container>\n        ']))),Object(M.a)(s),Object(M.a)(o),Object(M.a)(c),l,"alternateWithTooltip"===u?_.c:null,r,i))};ve.story={name:"With alternate logo and tooltip",parameters:{knobs:{MastheadComposite:function(){return{hasProfile:Object(S.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(S.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(O.a)("search placeholder (searchPlaceholder)","Search all of IBM"),selectedMenuItem:Object(O.a)("selected menu item (selected-menu-item)","Consulting & Services"),mastheadLogo:Object(S.select)("masthead logo data (logoData)",{defaultWithNoTooltip:null,alternateWithTooltip:"alternateWithTooltip"},"alternateWithTooltip"),userStatus:Object(S.select)("The user authenticated status (user-status)",me,me.unauthenticated)}}},propsSet:{default:{MastheadComposite:{platform:null,hasProfile:"true",hasSearch:!0,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:me.unauthenticated}}}}};var Se,Le,Me,Ie,je=function(e){var n,t,a,s,o=e.parameters,l=null!==(n=null==o||null===(t=o.props)||void 0===t?void 0:t.MastheadComposite)&&void 0!==n?n:{},r=l.customProfileLogin,i=l.platform,c=l.selectedMenuItem,u=l.userStatus,h=l.searchPlaceholder,m=l.hasProfile,d=l.hasSearch,p=l.navLinks,f=(null!==(a=null==o||null===(s=o.props)||void 0===s?void 0:s.Other)&&void 0!==a?a:{}).useMock;return Object(v.d)(le||(le=k||(k=B(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),C.a,f?Object(v.d)(re||(re=$||($=B(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            ?has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            .scopeParameters=',"></dds-masthead-composite>\n        "]))),Object(M.a)(i),Object(M.a)(pe),Object(M.a)(c),Object(M.a)(u),Object(M.a)(h),Object(M.a)(T.a),m,d,p,Object(M.a)(T.b),r,be):Object(v.d)(ie||(ie=y||(y=B(['\n          <dds-masthead-container\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            ?has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            .scopeParameters=',"></dds-masthead-container>\n        "]))),Object(M.a)(i),Object(M.a)(pe),Object(M.a)(c),Object(M.a)(u),Object(M.a)(h),p,m,d,r,be))};je.story={name:"With scoped search"},n.default={title:"Components/Masthead",decorators:[function(e){return window._hPageShow||(window._hPageShow=Object(L.a)(window,"pageshow",(function(){var e=document.querySelector("dds-left-nav");e&&(e.expanded=!1)}))),e()}],parameters:ue(ue((Le={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\\\nimport ifNonNull from \'../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js\';\\\\nimport inPercy from \'@percy-io/in-percy\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\nimport DDSLeftNav from \'../left-nav\';\\\\nimport \'../masthead-container\';\\\\nimport styles from \'./masthead.stories.scss\';\\\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\\\nimport { UNAUTHENTICATED_STATUS } from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\\\nimport {\\\\n  authenticatedProfileItems,\\\\n  unauthenticatedProfileItems,\\\\n} from \'./profile-items\';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\\\nimport readme from \'./README.stories.mdx\';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: \'test.user@ibm.com\',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: \'IBM Cloud\',\\\\n  url: \'https://www.ibm.com/cloud\',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  \'en-US\': {\\\\n    url: \'https://www.example.com/us-en\',\\\\n  },\\\\n  \'fr-FR\': {\\\\n    url: \'https://www.example.com/fr-fr/sample\',\\\\n  },\\\\n  \'es-MX\': {\\\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\\\n  },\\\\n};\\\\n\\\\nconst scopeParameters = [\\\\n  {\\\\n    name: \'All\',\\\\n    appId: \'all\',\\\\n    value: \'all\',\\\\n  },\\\\n  {\\\\n    name: \'Analyst\',\\\\n    appId: \'analyst\',\\\\n    value: \'analyst\',\\\\n  },\\\\n  {\\\\n    name: \'PartnerWorld\',\\\\n    appId: \'pw\',\\\\n    value: [\'pw\', \'pwp\'],\\\\n  },\\\\n  {\\\\n    name: \'Developer\',\\\\n    appId: \'dw\',\\\\n    value: [\'dw\', \'dwaspera\'],\\\\n  },\\\\n  {\\\\n    name: \'IBM Docs\',\\\\n    appId: \'ibmdocs\',\\\\n    label: \'Search Label\',\\\\n    value: [\'ibmdocs\', \'dw\'],\\\\n  },\\\\n];\\\\n\\\\nasync function customTypeaheadApiFunction(searchVal) {\\\\n  return fetch(\\\\n    `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`\\\\n  )\\\\n    .then((response) => response.json())\\\\n    .then((data) => {\\\\n      const searchResults = [\\\\n        data.hints,\\\\n        {\\\\n          title: \'Product pages\',\\\\n          items: data.products,\\\\n        },\\\\n      ];\\\\n      return searchResults;\\\\n    });\\\\n}\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport const WithCustomTypeahead = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    navLinks,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  document.documentElement.addEventListener(\\\\n    \'dds-search-with-typeahead-input\',\\\\n    async (e) => {\\\\n      const results = await customTypeaheadApiFunction(\\\\n        (e as CustomEvent).detail.value\\\\n      );\\\\n      document.dispatchEvent(\\\\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\\\\n      );\\\\n    }\\\\n  );\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nWithCustomTypeahead.story = {\\\\n  name: \'With custom typeahead\',\\\\n};\\\\n\\\\nexport const searchOpenOnload = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            activate-search=\\\\\\"true\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            activate-search=\\\\\\"true\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nsearchOpenOnload.story = {\\\\n  name: \'Search open onload\',\\\\n};\\\\n\\\\nexport const withPlatform = (args) => {\\\\n  const {\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    navLinks,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    searchPlaceholder,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(urlObject)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"Platform\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithPlatform.story = {\\\\n  name: \'With platform\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          inPercy() ? \'\' : \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Consulting & Services\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceHolder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withL1 = (args) => {\\\\n  const {\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    navLinks,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    searchPlaceholder,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithL1.story = {\\\\n  name: \'With L1\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          inPercy() ? \'\' : \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Products\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withAlternateLogoAndTooltip = (args) => {\\\\n  const {\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    navLinks,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    searchPlaceholder,\\\\n    mastheadLogo,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\'\\\\n              ? logoData\\\\n              : null}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\'\\\\n              ? logoData\\\\n              : null}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithAlternateLogoAndTooltip.story = {\\\\n  name: \'With alternate logo and tooltip\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Consulting & Services\'\\\\n        ),\\\\n        mastheadLogo: select(\\\\n          \'masthead logo data (logoData)\',\\\\n          {\\\\n            defaultWithNoTooltip: null,\\\\n            alternateWithTooltip: \'alternateWithTooltip\',\\\\n          },\\\\n          \'alternateWithTooltip\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const WithScopedSearch = ({ parameters }) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = parameters?.props?.MastheadComposite ?? {};\\\\n  const { useMock } = parameters?.props?.Other ?? {};\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            ?has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            ?has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nWithScopedSearch.story = {\\\\n  name: \'With scoped search\',\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Masthead\',\\\\n  decorators: [\\\\n    (story) => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Consulting & Services\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\\\n          textNullable(\\\\n            \'custom profile login url (customProfileLogin)\',\\\\n            \'https://www.example.com/\'\\\\n          ),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock =\\\\n        inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: \'https://www.example.com/\',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":99},\\"endLoc\\":{\\"col\\":1,\\"line\\":145},\\"startBody\\":{\\"col\\":23,\\"line\\":99},\\"endBody\\":{\\"col\\":1,\\"line\\":145}},\\"WithCustomTypeahead\\":{\\"startLoc\\":{\\"col\\":35,\\"line\\":147},\\"endLoc\\":{\\"col\\":1,\\"line\\":208},\\"startBody\\":{\\"col\\":35,\\"line\\":147},\\"endBody\\":{\\"col\\":1,\\"line\\":208}},\\"searchOpenOnload\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":214},\\"endLoc\\":{\\"col\\":1,\\"line\\":262},\\"startBody\\":{\\"col\\":32,\\"line\\":214},\\"endBody\\":{\\"col\\":1,\\"line\\":262}},\\"withPlatform\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":268},\\"endLoc\\":{\\"col\\":1,\\"line\\":308},\\"startBody\\":{\\"col\\":28,\\"line\\":268},\\"endBody\\":{\\"col\\":1,\\"line\\":308}},\\"withL1\\":{\\"startLoc\\":{\\"col\\":22,\\"line\\":350},\\"endLoc\\":{\\"col\\":1,\\"line\\":389},\\"startBody\\":{\\"col\\":22,\\"line\\":350},\\"endBody\\":{\\"col\\":1,\\"line\\":389}},\\"withAlternateLogoAndTooltip\\":{\\"startLoc\\":{\\"col\\":43,\\"line\\":431},\\"endLoc\\":{\\"col\\":1,\\"line\\":476},\\"startBody\\":{\\"col\\":43,\\"line\\":431},\\"endBody\\":{\\"col\\":1,\\"line\\":476}},\\"WithScopedSearch\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":527},\\"endLoc\\":{\\"col\\":1,\\"line\\":576},\\"startBody\\":{\\"col\\":32,\\"line\\":527},\\"endBody\\":{\\"col\\":1,\\"line\\":576}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\nimport ifNonNull from \'../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js\';\\nimport inPercy from \'@percy-io/in-percy\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\nimport DDSLeftNav from \'../left-nav\';\\nimport \'../masthead-container\';\\nimport styles from \'./masthead.stories.scss\';\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\nimport { UNAUTHENTICATED_STATUS } from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from \'./profile-items\';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\nimport readme from \'./README.stories.mdx\';\\n\\nconst userStatuses = {\\n  authenticated: \'test.user@ibm.com\',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: \'IBM Cloud\',\\n  url: \'https://www.ibm.com/cloud\',\\n};\\n\\nconst urlObject = {\\n  \'en-US\': {\\n    url: \'https://www.example.com/us-en\',\\n  },\\n  \'fr-FR\': {\\n    url: \'https://www.example.com/fr-fr/sample\',\\n  },\\n  \'es-MX\': {\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\n  },\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: \'All\',\\n    appId: \'all\',\\n    value: \'all\',\\n  },\\n  {\\n    name: \'Analyst\',\\n    appId: \'analyst\',\\n    value: \'analyst\',\\n  },\\n  {\\n    name: \'PartnerWorld\',\\n    appId: \'pw\',\\n    value: [\'pw\', \'pwp\'],\\n  },\\n  {\\n    name: \'Developer\',\\n    appId: \'dw\',\\n    value: [\'dw\', \'dwaspera\'],\\n  },\\n  {\\n    name: \'IBM Docs\',\\n    appId: \'ibmdocs\',\\n    label: \'Search Label\',\\n    value: [\'ibmdocs\', \'dw\'],\\n  },\\n];\\n\\nasync function customTypeaheadApiFunction(searchVal) {\\n  return fetch(\\n    `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`\\n  )\\n    .then((response) => response.json())\\n    .then((data) => {\\n      const searchResults = [\\n        data.hints,\\n        {\\n          title: \'Product pages\',\\n          items: data.products,\\n        },\\n      ];\\n      return searchResults;\\n    });\\n}\\n\\nexport const Default = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nexport const WithCustomTypeahead = (args) => {\\n  const {\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\\n    \'dds-search-with-typeahead-input\',\\n    async (e) => {\\n      const results = await customTypeaheadApiFunction(\\n        (e as CustomEvent).detail.value\\n      );\\n      document.dispatchEvent(\\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\\n      );\\n    }\\n  );\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nWithCustomTypeahead.story = {\\n  name: \'With custom typeahead\',\\n};\\n\\nexport const searchOpenOnload = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nsearchOpenOnload.story = {\\n  name: \'Search open onload\',\\n};\\n\\nexport const withPlatform = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"Platform\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nwithPlatform.story = {\\n  name: \'With platform\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          inPercy() ? \'\' : \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceHolder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withL1 = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nwithL1.story = {\\n  name: \'With L1\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          inPercy() ? \'\' : \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Products\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withAlternateLogoAndTooltip = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n    mastheadLogo,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nwithAlternateLogoAndTooltip.story = {\\n  name: \'With alternate logo and tooltip\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        mastheadLogo: select(\\n          \'masthead logo data (logoData)\',\\n          {\\n            defaultWithNoTooltip: null,\\n            alternateWithTooltip: \'alternateWithTooltip\',\\n          },\\n          \'alternateWithTooltip\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const WithScopedSearch = ({ parameters }) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nWithScopedSearch.story = {\\n  name: \'With scoped search\',\\n};\\n\\nexport default {\\n  title: \'Components/Masthead\',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\"storySource\\":{\\"source\\":\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\\\nimport ifNonNull from \'../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js\';\\\\nimport inPercy from \'@percy-io/in-percy\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\nimport DDSLeftNav from \'../left-nav\';\\\\nimport \'../masthead-container\';\\\\nimport styles from \'./masthead.stories.scss\';\\\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\\\nimport { UNAUTHENTICATED_STATUS } from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\\\nimport {\\\\n  authenticatedProfileItems,\\\\n  unauthenticatedProfileItems,\\\\n} from \'./profile-items\';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\\\nimport readme from \'./README.stories.mdx\';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: \'test.user@ibm.com\',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: \'IBM Cloud\',\\\\n  url: \'https://www.ibm.com/cloud\',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  \'en-US\': {\\\\n    url: \'https://www.example.com/us-en\',\\\\n  },\\\\n  \'fr-FR\': {\\\\n    url: \'https://www.example.com/fr-fr/sample\',\\\\n  },\\\\n  \'es-MX\': {\\\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\\\n  },\\\\n};\\\\n\\\\nconst scopeParameters = [\\\\n  {\\\\n    name: \'All\',\\\\n    appId: \'all\',\\\\n    value: \'all\',\\\\n  },\\\\n  {\\\\n    name: \'Analyst\',\\\\n    appId: \'analyst\',\\\\n    value: \'analyst\',\\\\n  },\\\\n  {\\\\n    name: \'PartnerWorld\',\\\\n    appId: \'pw\',\\\\n    value: [\'pw\', \'pwp\'],\\\\n  },\\\\n  {\\\\n    name: \'Developer\',\\\\n    appId: \'dw\',\\\\n    value: [\'dw\', \'dwaspera\'],\\\\n  },\\\\n  {\\\\n    name: \'IBM Docs\',\\\\n    appId: \'ibmdocs\',\\\\n    label: \'Search Label\',\\\\n    value: [\'ibmdocs\', \'dw\'],\\\\n  },\\\\n];\\\\n\\\\nasync function customTypeaheadApiFunction(searchVal) {\\\\n  return fetch(\\\\n    `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`\\\\n  )\\\\n    .then((response) => response.json())\\\\n    .then((data) => {\\\\n      const searchResults = [\\\\n        data.hints,\\\\n        {\\\\n          title: \'Product pages\',\\\\n          items: data.products,\\\\n        },\\\\n      ];\\\\n      return searchResults;\\\\n    });\\\\n}\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport const WithCustomTypeahead = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    navLinks,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  document.documentElement.addEventListener(\\\\n    \'dds-search-with-typeahead-input\',\\\\n    async (e) => {\\\\n      const results = await customTypeaheadApiFunction(\\\\n        (e as CustomEvent).detail.value\\\\n      );\\\\n      document.dispatchEvent(\\\\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\\\\n      );\\\\n    }\\\\n  );\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nWithCustomTypeahead.story = {\\\\n  name: \'With custom typeahead\',\\\\n};\\\\n\\\\nexport const searchOpenOnload = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            activate-search=\\\\\\"true\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            activate-search=\\\\\\"true\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nsearchOpenOnload.story = {\\\\n  name: \'Search open onload\',\\\\n};\\\\n\\\\nexport const withPlatform = (args) => {\\\\n  const {\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    navLinks,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    searchPlaceholder,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(urlObject)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"Platform\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithPlatform.story = {\\\\n  name: \'With platform\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          inPercy() ? \'\' : \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Consulting & Services\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceHolder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withL1 = (args) => {\\\\n  const {\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    navLinks,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    searchPlaceholder,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithL1.story = {\\\\n  name: \'With L1\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          inPercy() ? \'\' : \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Products\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withAlternateLogoAndTooltip = (args) => {\\\\n  const {\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    navLinks,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    searchPlaceholder,\\\\n    mastheadLogo,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\'\\\\n              ? logoData\\\\n              : null}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\'\\\\n              ? logoData\\\\n              : null}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithAlternateLogoAndTooltip.story = {\\\\n  name: \'With alternate logo and tooltip\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Consulting & Services\'\\\\n        ),\\\\n        mastheadLogo: select(\\\\n          \'masthead logo data (logoData)\',\\\\n          {\\\\n            defaultWithNoTooltip: null,\\\\n            alternateWithTooltip: \'alternateWithTooltip\',\\\\n          },\\\\n          \'alternateWithTooltip\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const WithScopedSearch = ({ parameters }) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = parameters?.props?.MastheadComposite ?? {};\\\\n  const { useMock } = parameters?.props?.Other ?? {};\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            ?has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            ?has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nWithScopedSearch.story = {\\\\n  name: \'With scoped search\',\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Masthead\',\\\\n  decorators: [\\\\n    (story) => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          \'show the profile functionality (has-profile)\',\\\\n          [\'true\', \'false\'],\\\\n          \'true\'\\\\n        ),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\\\\n          \'search placeholder (searchPlaceholder)\',\\\\n          \'Search all of IBM\'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          \'selected menu item (selected-menu-item)\',\\\\n          \'Consulting & Services\'\\\\n        ),\\\\n        userStatus: select(\\\\n          \'The user authenticated status (user-status)\',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\\\n          textNullable(\\\\n            \'custom profile login url (customProfileLogin)\',\\\\n            \'https://www.example.com/\'\\\\n          ),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock =\\\\n        inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: \'https://www.example.com/\',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\",\\"locationsMap\\":{\\"default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":99},\\"endLoc\\":{\\"col\\":1,\\"line\\":145},\\"startBody\\":{\\"col\\":23,\\"line\\":99},\\"endBody\\":{\\"col\\":1,\\"line\\":145}},\\"with-custom-typeahead\\":{\\"startLoc\\":{\\"col\\":35,\\"line\\":147},\\"endLoc\\":{\\"col\\":1,\\"line\\":208},\\"startBody\\":{\\"col\\":35,\\"line\\":147},\\"endBody\\":{\\"col\\":1,\\"line\\":208}},\\"search-open-onload\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":214},\\"endLoc\\":{\\"col\\":1,\\"line\\":262},\\"startBody\\":{\\"col\\":32,\\"line\\":214},\\"endBody\\":{\\"col\\":1,\\"line\\":262}},\\"with-platform\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":268},\\"endLoc\\":{\\"col\\":1,\\"line\\":308},\\"startBody\\":{\\"col\\":28,\\"line\\":268},\\"endBody\\":{\\"col\\":1,\\"line\\":308}},\\"with-l-1\\":{\\"startLoc\\":{\\"col\\":22,\\"line\\":350},\\"endLoc\\":{\\"col\\":1,\\"line\\":389},\\"startBody\\":{\\"col\\":22,\\"line\\":350},\\"endBody\\":{\\"col\\":1,\\"line\\":389}},\\"with-alternate-logo-and-tooltip\\":{\\"startLoc\\":{\\"col\\":43,\\"line\\":431},\\"endLoc\\":{\\"col\\":1,\\"line\\":476},\\"startBody\\":{\\"col\\":43,\\"line\\":431},\\"endBody\\":{\\"col\\":1,\\"line\\":476}},\\"with-scoped-search\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":527},\\"endLoc\\":{\\"col\\":1,\\"line\\":576},\\"startBody\\":{\\"col\\":32,\\"line\\":527},\\"endBody\\":{\\"col\\":1,\\"line\\":576}}}},\\n    ...readme.parameters,\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\n          textNullable(\\n            \'custom profile login url (customProfileLogin)\',\\n            \'https://www.example.com/\'\\n          ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: \'https://www.example.com/\',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":107},"endLoc":{"col":1,"line":153},"startBody":{"col":23,"line":107},"endBody":{"col":1,"line":153}},"WithCustomTypeahead":{"startLoc":{"col":35,"line":155},"endLoc":{"col":1,"line":216},"startBody":{"col":35,"line":155},"endBody":{"col":1,"line":216}},"searchOpenOnload":{"startLoc":{"col":32,"line":222},"endLoc":{"col":1,"line":270},"startBody":{"col":32,"line":222},"endBody":{"col":1,"line":270}},"withPlatform":{"startLoc":{"col":28,"line":276},"endLoc":{"col":1,"line":316},"startBody":{"col":28,"line":276},"endBody":{"col":1,"line":316}},"withL1":{"startLoc":{"col":22,"line":358},"endLoc":{"col":1,"line":397},"startBody":{"col":22,"line":358},"endBody":{"col":1,"line":397}},"withAlternateLogoAndTooltip":{"startLoc":{"col":43,"line":439},"endLoc":{"col":1,"line":484},"startBody":{"col":43,"line":439},"endBody":{"col":1,"line":484}},"WithScopedSearch":{"startLoc":{"col":32,"line":535},"endLoc":{"col":1,"line":584},"startBody":{"col":32,"line":535},"endBody":{"col":1,"line":584}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\nimport ifNonNull from \'../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js\';\\nimport inPercy from \'@percy-io/in-percy\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\nimport DDSLeftNav from \'../left-nav\';\\nimport \'../masthead-container\';\\nimport styles from \'./masthead.stories.scss\';\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\nimport { UNAUTHENTICATED_STATUS } from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from \'./profile-items\';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\nimport readme from \'./README.stories.mdx\';\\n\\nconst userStatuses = {\\n  authenticated: \'test.user@ibm.com\',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: \'IBM Cloud\',\\n  url: \'https://www.ibm.com/cloud\',\\n};\\n\\nconst urlObject = {\\n  \'en-US\': {\\n    url: \'https://www.example.com/us-en\',\\n  },\\n  \'fr-FR\': {\\n    url: \'https://www.example.com/fr-fr/sample\',\\n  },\\n  \'es-MX\': {\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\n  },\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: \'All\',\\n    appId: \'all\',\\n    value: \'all\',\\n  },\\n  {\\n    name: \'Analyst\',\\n    appId: \'analyst\',\\n    value: \'analyst\',\\n  },\\n  {\\n    name: \'PartnerWorld\',\\n    appId: \'pw\',\\n    value: [\'pw\', \'pwp\'],\\n  },\\n  {\\n    name: \'Developer\',\\n    appId: \'dw\',\\n    value: [\'dw\', \'dwaspera\'],\\n  },\\n  {\\n    name: \'IBM Docs\',\\n    appId: \'ibmdocs\',\\n    label: \'Search Label\',\\n    value: [\'ibmdocs\', \'dw\'],\\n  },\\n];\\n\\nasync function customTypeaheadApiFunction(searchVal) {\\n  return fetch(\\n    `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`\\n  )\\n    .then((response) => response.json())\\n    .then((data) => {\\n      const searchResults = [\\n        data.hints,\\n        {\\n          title: \'Product pages\',\\n          items: data.products,\\n        },\\n      ];\\n      return searchResults;\\n    });\\n}\\n\\nexport const Default = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport const WithCustomTypeahead = (args) => {\\n  const {\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\\n    \'dds-search-with-typeahead-input\',\\n    async (e) => {\\n      const results = await customTypeaheadApiFunction(\\n        (e as CustomEvent).detail.value\\n      );\\n      document.dispatchEvent(\\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\\n      );\\n    }\\n  );\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nWithCustomTypeahead.story = {\\n  name: \'With custom typeahead\',\\n};\\n\\nexport const searchOpenOnload = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nsearchOpenOnload.story = {\\n  name: \'Search open onload\',\\n};\\n\\nexport const withPlatform = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"Platform\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithPlatform.story = {\\n  name: \'With platform\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          inPercy() ? \'\' : \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceHolder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withL1 = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithL1.story = {\\n  name: \'With L1\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          inPercy() ? \'\' : \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Products\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withAlternateLogoAndTooltip = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n    mastheadLogo,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithAlternateLogoAndTooltip.story = {\\n  name: \'With alternate logo and tooltip\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        mastheadLogo: select(\\n          \'masthead logo data (logoData)\',\\n          {\\n            defaultWithNoTooltip: null,\\n            alternateWithTooltip: \'alternateWithTooltip\',\\n          },\\n          \'alternateWithTooltip\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const WithScopedSearch = ({ parameters }) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nWithScopedSearch.story = {\\n  name: \'With scoped search\',\\n};\\n\\nexport default {\\n  title: \'Components/Masthead\',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\n          textNullable(\\n            \'custom profile login url (customProfileLogin)\',\\n            \'https://www.example.com/\'\\n          ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: \'https://www.example.com/\',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":99},"endLoc":{"col":1,"line":145},"startBody":{"col":23,"line":99},"endBody":{"col":1,"line":145}},"WithCustomTypeahead":{"startLoc":{"col":35,"line":147},"endLoc":{"col":1,"line":208},"startBody":{"col":35,"line":147},"endBody":{"col":1,"line":208}},"searchOpenOnload":{"startLoc":{"col":32,"line":214},"endLoc":{"col":1,"line":262},"startBody":{"col":32,"line":214},"endBody":{"col":1,"line":262}},"withPlatform":{"startLoc":{"col":28,"line":268},"endLoc":{"col":1,"line":308},"startBody":{"col":28,"line":268},"endBody":{"col":1,"line":308}},"withL1":{"startLoc":{"col":22,"line":350},"endLoc":{"col":1,"line":389},"startBody":{"col":22,"line":350},"endBody":{"col":1,"line":389}},"withAlternateLogoAndTooltip":{"startLoc":{"col":43,"line":431},"endLoc":{"col":1,"line":476},"startBody":{"col":43,"line":431},"endBody":{"col":1,"line":476}},"WithScopedSearch":{"startLoc":{"col":32,"line":527},"endLoc":{"col":1,"line":576},"startBody":{"col":32,"line":527},"endBody":{"col":1,"line":576}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from \'lit-element\';\nimport { boolean, select } from \'@storybook/addon-knobs\';\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\nimport ifNonNull from \'../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js\';\nimport inPercy from \'@percy-io/in-percy\';\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\nimport DDSLeftNav from \'../left-nav\';\nimport \'../masthead-container\';\nimport styles from \'./masthead.stories.scss\';\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\nimport { UNAUTHENTICATED_STATUS } from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\nimport {\n  authenticatedProfileItems,\n  unauthenticatedProfileItems,\n} from \'./profile-items\';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\nimport readme from \'./README.stories.mdx\';\n\nconst userStatuses = {\n  authenticated: \'test.user@ibm.com\',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: \'IBM Cloud\',\n  url: \'https://www.ibm.com/cloud\',\n};\n\nconst urlObject = {\n  \'en-US\': {\n    url: \'https://www.example.com/us-en\',\n  },\n  \'fr-FR\': {\n    url: \'https://www.example.com/fr-fr/sample\',\n  },\n  \'es-MX\': {\n    url: \'https://www.example.com/ibm/es-mx/sample\',\n  },\n};\n\nconst scopeParameters = [\n  {\n    name: \'All\',\n    appId: \'all\',\n    value: \'all\',\n  },\n  {\n    name: \'Analyst\',\n    appId: \'analyst\',\n    value: \'analyst\',\n  },\n  {\n    name: \'PartnerWorld\',\n    appId: \'pw\',\n    value: [\'pw\', \'pwp\'],\n  },\n  {\n    name: \'Developer\',\n    appId: \'dw\',\n    value: [\'dw\', \'dwaspera\'],\n  },\n  {\n    name: \'IBM Docs\',\n    appId: \'ibmdocs\',\n    label: \'Search Label\',\n    value: [\'ibmdocs\', \'dw\'],\n  },\n];\n\nasync function customTypeaheadApiFunction(searchVal) {\n  return fetch(\n    `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      const searchResults = [\n        data.hints,\n        {\n          title: \'Product pages\',\n          items: data.products,\n        },\n      ];\n      return searchResults;\n    });\n}\n\nexport const Default = (args) => {\n  const {\n    customProfileLogin,\n    platform,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-container>\n        `}\n  `;\n};;;\n\nexport const WithCustomTypeahead = (args) => {\n  const {\n    customProfileLogin,\n    navLinks,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  document.documentElement.addEventListener(\n    \'dds-search-with-typeahead-input\',\n    async (e) => {\n      const results = await customTypeaheadApiFunction(\n        (e as CustomEvent).detail.value\n      );\n      document.dispatchEvent(\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\n      );\n    }\n  );\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}></dds-masthead-container>\n        `}\n  `;\n};;;\n\nWithCustomTypeahead.story = {\n  name: \'With custom typeahead\',\n};\n\nexport const searchOpenOnload = (args) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            activate-search="true"\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            activate-search="true"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-container>\n        `}\n  `;\n};;;\n\nsearchOpenOnload.story = {\n  name: \'Search open onload\',\n};\n\nexport const withPlatform = (args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="Platform"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"></dds-masthead-container>\n        `}\n  `;\n};;;\n\nwithPlatform.story = {\n  name: \'With platform\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          inPercy() ? \'\' : \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Consulting & Services\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceHolder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withL1 = (args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            user-status="${ifNonNull(userStatus)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"></dds-masthead-container>\n        `}\n  `;\n};;;\n\nwithL1.story = {\n  name: \'With L1\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          inPercy() ? \'\' : \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Products\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withAlternateLogoAndTooltip = (args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n    mastheadLogo,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\'\n              ? logoData\n              : null}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\'\n              ? logoData\n              : null}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"></dds-masthead-container>\n        `}\n  `;\n};;;\n\nwithAlternateLogoAndTooltip.story = {\n  name: \'With alternate logo and tooltip\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Consulting & Services\'\n        ),\n        mastheadLogo: select(\n          \'masthead logo data (logoData)\',\n          {\n            defaultWithNoTooltip: null,\n            alternateWithTooltip: \'alternateWithTooltip\',\n          },\n          \'alternateWithTooltip\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const WithScopedSearch = ({ parameters }) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\n        `}\n  `;\n};\n\nWithScopedSearch.story = {\n  name: \'With scoped search\',\n};\n\nexport default {\n  title: \'Components/Masthead\',\n  decorators: [\n    (story) => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\n          const leftNav = document.querySelector(\'dds-left-nav\');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {"storySource":{"source":"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\nimport ifNonNull from \'../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js\';\\nimport inPercy from \'@percy-io/in-percy\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\nimport DDSLeftNav from \'../left-nav\';\\nimport \'../masthead-container\';\\nimport styles from \'./masthead.stories.scss\';\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\nimport { UNAUTHENTICATED_STATUS } from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from \'./profile-items\';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\nimport readme from \'./README.stories.mdx\';\\n\\nconst userStatuses = {\\n  authenticated: \'test.user@ibm.com\',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: \'IBM Cloud\',\\n  url: \'https://www.ibm.com/cloud\',\\n};\\n\\nconst urlObject = {\\n  \'en-US\': {\\n    url: \'https://www.example.com/us-en\',\\n  },\\n  \'fr-FR\': {\\n    url: \'https://www.example.com/fr-fr/sample\',\\n  },\\n  \'es-MX\': {\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\n  },\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: \'All\',\\n    appId: \'all\',\\n    value: \'all\',\\n  },\\n  {\\n    name: \'Analyst\',\\n    appId: \'analyst\',\\n    value: \'analyst\',\\n  },\\n  {\\n    name: \'PartnerWorld\',\\n    appId: \'pw\',\\n    value: [\'pw\', \'pwp\'],\\n  },\\n  {\\n    name: \'Developer\',\\n    appId: \'dw\',\\n    value: [\'dw\', \'dwaspera\'],\\n  },\\n  {\\n    name: \'IBM Docs\',\\n    appId: \'ibmdocs\',\\n    label: \'Search Label\',\\n    value: [\'ibmdocs\', \'dw\'],\\n  },\\n];\\n\\nasync function customTypeaheadApiFunction(searchVal) {\\n  return fetch(\\n    `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`\\n  )\\n    .then((response) => response.json())\\n    .then((data) => {\\n      const searchResults = [\\n        data.hints,\\n        {\\n          title: \'Product pages\',\\n          items: data.products,\\n        },\\n      ];\\n      return searchResults;\\n    });\\n}\\n\\nexport const Default = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport const WithCustomTypeahead = (args) => {\\n  const {\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\\n    \'dds-search-with-typeahead-input\',\\n    async (e) => {\\n      const results = await customTypeaheadApiFunction(\\n        (e as CustomEvent).detail.value\\n      );\\n      document.dispatchEvent(\\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\\n      );\\n    }\\n  );\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nWithCustomTypeahead.story = {\\n  name: \'With custom typeahead\',\\n};\\n\\nexport const searchOpenOnload = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nsearchOpenOnload.story = {\\n  name: \'Search open onload\',\\n};\\n\\nexport const withPlatform = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"Platform\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithPlatform.story = {\\n  name: \'With platform\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          inPercy() ? \'\' : \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceHolder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withL1 = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithL1.story = {\\n  name: \'With L1\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          inPercy() ? \'\' : \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Products\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withAlternateLogoAndTooltip = (args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n    mastheadLogo,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithAlternateLogoAndTooltip.story = {\\n  name: \'With alternate logo and tooltip\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        mastheadLogo: select(\\n          \'masthead logo data (logoData)\',\\n          {\\n            defaultWithNoTooltip: null,\\n            alternateWithTooltip: \'alternateWithTooltip\',\\n          },\\n          \'alternateWithTooltip\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const WithScopedSearch = ({ parameters }) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nWithScopedSearch.story = {\\n  name: \'With scoped search\',\\n};\\n\\nexport default {\\n  title: \'Components/Masthead\',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          \'show the profile functionality (has-profile)\',\\n          [\'true\', \'false\'],\\n          \'true\'\\n        ),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\\n          \'search placeholder (searchPlaceholder)\',\\n          \'Search all of IBM\'\\n        ),\\n        selectedMenuItem: textNullable(\\n          \'selected menu item (selected-menu-item)\',\\n          \'Consulting & Services\'\\n        ),\\n        userStatus: select(\\n          \'The user authenticated status (user-status)\',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\n          textNullable(\\n            \'custom profile login url (customProfileLogin)\',\\n            \'https://www.example.com/\'\\n          ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: \'https://www.example.com/\',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n","locationsMap":{"default":{"startLoc":{"col":23,"line":99},"endLoc":{"col":1,"line":145},"startBody":{"col":23,"line":99},"endBody":{"col":1,"line":145}},"with-custom-typeahead":{"startLoc":{"col":35,"line":147},"endLoc":{"col":1,"line":208},"startBody":{"col":35,"line":147},"endBody":{"col":1,"line":208}},"search-open-onload":{"startLoc":{"col":32,"line":214},"endLoc":{"col":1,"line":262},"startBody":{"col":32,"line":214},"endBody":{"col":1,"line":262}},"with-platform":{"startLoc":{"col":28,"line":268},"endLoc":{"col":1,"line":308},"startBody":{"col":28,"line":268},"endBody":{"col":1,"line":308}},"with-l-1":{"startLoc":{"col":22,"line":350},"endLoc":{"col":1,"line":389},"startBody":{"col":22,"line":350},"endBody":{"col":1,"line":389}},"with-alternate-logo-and-tooltip":{"startLoc":{"col":43,"line":431},"endLoc":{"col":1,"line":476},"startBody":{"col":43,"line":431},"endBody":{"col":1,"line":476}},"with-scoped-search":{"startLoc":{"col":32,"line":527},"endLoc":{"col":1,"line":576},"startBody":{"col":32,"line":527},"endBody":{"col":1,"line":576}}}},\n    ...readme.parameters,\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Consulting & Services\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN &&\n          textNullable(\n            \'custom profile login url (customProfileLogin)\',\n            \'https://www.example.com/\'\n          ),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock =\n        inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: \'https://www.example.com/\',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: "(args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...Default.parameters };\nWithCustomTypeahead.parameters = { storySource: { source: "(args) => {\\n  const {\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\\n    \'dds-search-with-typeahead-input\',\\n    async (e) => {\\n      const results = await customTypeaheadApiFunction(\\n        (e as CustomEvent).detail.value\\n      );\\n      document.dispatchEvent(\\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\\n      );\\n    }\\n  );\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...WithCustomTypeahead.parameters };\nsearchOpenOnload.parameters = { storySource: { source: "(args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            activate-search=\\"true\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...searchOpenOnload.parameters };\nwithPlatform.parameters = { storySource: { source: "(args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"Platform\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withPlatform.parameters };\nwithL1.parameters = { storySource: { source: "(args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withL1.parameters };\nwithAlternateLogoAndTooltip.parameters = { storySource: { source: "(args) => {\\n  const {\\n    selectedMenuItem,\\n    userStatus,\\n    navLinks,\\n    hasProfile,\\n    hasSearch,\\n    searchPlaceholder,\\n    mastheadLogo,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\'\\n              ? logoData\\n              : null}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withAlternateLogoAndTooltip.parameters };\nWithScopedSearch.parameters = { storySource: { source: "({ parameters }) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...WithScopedSearch.parameters };',locationsMap:{default:{startLoc:{col:23,line:115},endLoc:{col:1,line:161},startBody:{col:23,line:115},endBody:{col:1,line:161}},"with-custom-typeahead":{startLoc:{col:35,line:163},endLoc:{col:1,line:224},startBody:{col:35,line:163},endBody:{col:1,line:224}},"search-open-onload":{startLoc:{col:32,line:230},endLoc:{col:1,line:278},startBody:{col:32,line:230},endBody:{col:1,line:278}},"with-platform":{startLoc:{col:28,line:284},endLoc:{col:1,line:324},startBody:{col:28,line:284},endBody:{col:1,line:324}},"with-l-1":{startLoc:{col:22,line:366},endLoc:{col:1,line:405},startBody:{col:22,line:366},endBody:{col:1,line:405}},"with-alternate-logo-and-tooltip":{startLoc:{col:43,line:447},endLoc:{col:1,line:492},startBody:{col:43,line:447},endBody:{col:1,line:492}},"with-scoped-search":{startLoc:{col:32,line:543},endLoc:{col:1,line:592},startBody:{col:32,line:543},endBody:{col:1,line:592}}}}},Me="storySource",Ie={source:'/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from \'lit-element\';\nimport { boolean, select } from \'@storybook/addon-knobs\';\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\nimport ifNonNull from \'../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js\';\nimport inPercy from \'@percy-io/in-percy\';\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\nimport DDSLeftNav from \'../left-nav\';\nimport \'../masthead-container\';\nimport styles from \'./masthead.stories.scss\';\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\nimport { UNAUTHENTICATED_STATUS } from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\nimport {\n  authenticatedProfileItems,\n  unauthenticatedProfileItems,\n} from \'./profile-items\';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\nimport readme from \'./README.stories.mdx\';\n\nconst userStatuses = {\n  authenticated: \'test.user@ibm.com\',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: \'IBM Cloud\',\n  url: \'https://www.ibm.com/cloud\',\n};\n\nconst urlObject = {\n  \'en-US\': {\n    url: \'https://www.example.com/us-en\',\n  },\n  \'fr-FR\': {\n    url: \'https://www.example.com/fr-fr/sample\',\n  },\n  \'es-MX\': {\n    url: \'https://www.example.com/ibm/es-mx/sample\',\n  },\n};\n\nconst scopeParameters = [\n  {\n    name: \'All\',\n    appId: \'all\',\n    value: \'all\',\n  },\n  {\n    name: \'Analyst\',\n    appId: \'analyst\',\n    value: \'analyst\',\n  },\n  {\n    name: \'PartnerWorld\',\n    appId: \'pw\',\n    value: [\'pw\', \'pwp\'],\n  },\n  {\n    name: \'Developer\',\n    appId: \'dw\',\n    value: [\'dw\', \'dwaspera\'],\n  },\n  {\n    name: \'IBM Docs\',\n    appId: \'ibmdocs\',\n    label: \'Search Label\',\n    value: [\'ibmdocs\', \'dw\'],\n  },\n];\n\nasync function customTypeaheadApiFunction(searchVal) {\n  return fetch(\n    `https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      const searchResults = [\n        data.hints,\n        {\n          title: \'Product pages\',\n          items: data.products,\n        },\n      ];\n      return searchResults;\n    });\n}\n\nexport const Default = (args) => {\n  const {\n    customProfileLogin,\n    platform,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-container>\n        `}\n  `;\n};\n\nexport const WithCustomTypeahead = (args) => {\n  const {\n    customProfileLogin,\n    navLinks,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  document.documentElement.addEventListener(\n    \'dds-search-with-typeahead-input\',\n    async (e) => {\n      const results = await customTypeaheadApiFunction(\n        (e as CustomEvent).detail.value\n      );\n      document.dispatchEvent(\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\n      );\n    }\n  );\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}></dds-masthead-container>\n        `}\n  `;\n};\n\nWithCustomTypeahead.story = {\n  name: \'With custom typeahead\',\n};\n\nexport const searchOpenOnload = (args) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            activate-search="true"\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            activate-search="true"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-container>\n        `}\n  `;\n};\n\nsearchOpenOnload.story = {\n  name: \'Search open onload\',\n};\n\nexport const withPlatform = (args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="Platform"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"></dds-masthead-container>\n        `}\n  `;\n};\n\nwithPlatform.story = {\n  name: \'With platform\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          inPercy() ? \'\' : \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Consulting & Services\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceHolder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withL1 = (args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            user-status="${ifNonNull(userStatus)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"></dds-masthead-container>\n        `}\n  `;\n};\n\nwithL1.story = {\n  name: \'With L1\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          inPercy() ? \'\' : \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Products\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withAlternateLogoAndTooltip = (args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n    mastheadLogo,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\'\n              ? logoData\n              : null}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\'\n              ? logoData\n              : null}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"></dds-masthead-container>\n        `}\n  `;\n};\n\nwithAlternateLogoAndTooltip.story = {\n  name: \'With alternate logo and tooltip\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Consulting & Services\'\n        ),\n        mastheadLogo: select(\n          \'masthead logo data (logoData)\',\n          {\n            defaultWithNoTooltip: null,\n            alternateWithTooltip: \'alternateWithTooltip\',\n          },\n          \'alternateWithTooltip\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const WithScopedSearch = ({ parameters }) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\n        `}\n  `;\n};\n\nWithScopedSearch.story = {\n  name: \'With scoped search\',\n};\n\nexport default {\n  title: \'Components/Masthead\',\n  decorators: [\n    (story) => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\n          const leftNav = document.querySelector(\'dds-left-nav\');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        hasProfile: select(\n          \'show the profile functionality (has-profile)\',\n          [\'true\', \'false\'],\n          \'true\'\n        ),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\n          \'search placeholder (searchPlaceholder)\',\n          \'Search all of IBM\'\n        ),\n        selectedMenuItem: textNullable(\n          \'selected menu item (selected-menu-item)\',\n          \'Consulting & Services\'\n        ),\n        userStatus: select(\n          \'The user authenticated status (user-status)\',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN &&\n          textNullable(\n            \'custom profile login url (customProfileLogin)\',\n            \'https://www.example.com/\'\n          ),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock =\n        inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: \'https://www.example.com/\',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n',locationsMap:{default:{startLoc:{col:23,line:99},endLoc:{col:1,line:145},startBody:{col:23,line:99},endBody:{col:1,line:145}},"with-custom-typeahead":{startLoc:{col:35,line:147},endLoc:{col:1,line:208},startBody:{col:35,line:147},endBody:{col:1,line:208}},"search-open-onload":{startLoc:{col:32,line:214},endLoc:{col:1,line:262},startBody:{col:32,line:214},endBody:{col:1,line:262}},"with-platform":{startLoc:{col:28,line:268},endLoc:{col:1,line:308},startBody:{col:28,line:268},endBody:{col:1,line:308}},"with-l-1":{startLoc:{col:22,line:350},endLoc:{col:1,line:389},startBody:{col:22,line:350},endBody:{col:1,line:389}},"with-alternate-logo-and-tooltip":{startLoc:{col:43,line:431},endLoc:{col:1,line:476},startBody:{col:43,line:431},endBody:{col:1,line:476}},"with-scoped-search":{startLoc:{col:32,line:527},endLoc:{col:1,line:576},startBody:{col:32,line:527},endBody:{col:1,line:576}}}},(Me=function(e){var n=function(e,n){if("object"!==R(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==R(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===R(n)?n:String(n)}(Me))in Le?Object.defineProperty(Le,Me,{value:Ie,enumerable:!0,configurable:!0,writable:!0}):Le[Me]=Ie,Le),E.a.parameters),{},{knobs:{escapeHTML:!1,MastheadComposite:function(){return{hasProfile:Object(S.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(S.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(O.a)("search placeholder (searchPlaceholder)","Search all of IBM"),selectedMenuItem:Object(O.a)("selected menu item (selected-menu-item)","Consulting & Services"),userStatus:Object(S.select)("The user authenticated status (user-status)",me,me.unauthenticated),customProfileLogin:x.b&&Object(O.a)("custom profile login url (customProfileLogin)","https://www.example.com/")}}},props:(Se=j()()||new URLSearchParams(window.location.search).has("mock"),{MastheadComposite:{navLinks:Se?_.e:void 0},Other:{useMock:Se}}),propsSet:{default:{MastheadComposite:{platform:null,hasProfile:"true",hasSearch:!0,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:me.unauthenticated,customProfileLogin:"https://www.example.com/",navLinks:_.e}}}})},Pe.parameters=ue({storySource:{source:'(args) => {\n  const {\n    customProfileLogin,\n    platform,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-container>\n        `}\n  `;\n}'}},Pe.parameters),we.parameters=ue({storySource:{source:'(args) => {\n  const {\n    customProfileLogin,\n    navLinks,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  document.documentElement.addEventListener(\n    \'dds-search-with-typeahead-input\',\n    async (e) => {\n      const results = await customTypeaheadApiFunction(\n        (e as CustomEvent).detail.value\n      );\n      document.dispatchEvent(\n        new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results })\n      );\n    }\n  );\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}></dds-masthead-container>\n        `}\n  `;\n}'}},we.parameters),ke.parameters=ue({storySource:{source:'(args) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            activate-search="true"\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            activate-search="true"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"></dds-masthead-container>\n        `}\n  `;\n}'}},ke.parameters),$e.parameters=ue({storySource:{source:'(args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="Platform"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"></dds-masthead-container>\n        `}\n  `;\n}'}},$e.parameters),ye.parameters=ue({storySource:{source:'(args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            user-status="${ifNonNull(userStatus)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"></dds-masthead-container>\n        `}\n  `;\n}'}},ye.parameters),ve.parameters=ue({storySource:{source:'(args) => {\n  const {\n    selectedMenuItem,\n    userStatus,\n    navLinks,\n    hasProfile,\n    hasSearch,\n    searchPlaceholder,\n    mastheadLogo,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\'\n              ? logoData\n              : null}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\'\n              ? logoData\n              : null}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"></dds-masthead-container>\n        `}\n  `;\n}'}},ve.parameters),je.parameters=ue({storySource:{source:'({ parameters }) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\n        `}\n  `;\n}'}},je.parameters)},"./src/components/masthead/__stories__/profile-items.ts":function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return o}));t("../../node_modules/core-js/modules/web.url.js"),t("../../node_modules/core-js/modules/es.object.to-string.js"),t("../../node_modules/core-js/modules/es.string.iterator.js"),t("../../node_modules/core-js/modules/es.array.iterator.js"),t("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),t("../../node_modules/core-js/modules/es.regexp.to-string.js"),t("../../node_modules/core-js/modules/es.date.to-string.js");var a=new URLSearchParams;a.append("response_type","token"),a.append("client_id","v18loginprod"),a.append("state",window.location.href),a.append("redirect_uri","https://myibm.ibm.com/OIDCHandler.html"),a.append("scope","openid");var s=[{title:"My IBM",url:"https://myibm.ibm.com/?lnk=mmi"},{title:"Profile",url:"https://myibm.ibm.com/profile/?lnk=mmi"},{title:"Billing",url:"https://myibm.ibm.com/billing/?lnk=mmi"},{title:"Log out",url:"https://myibm.ibm.com/pkmslogout?filename=accountRedir.html"}],o=[{id:"signin",title:"Log in",url:"https://idaas.iam.ibm.com/idaas/oidc/endpoint/default/authorize?".concat(a.toString())}]},"./src/components/masthead/__stories__/scoped-search-masthead.stories.ts":function(e,n,t){"use strict";t.r(n),t.d(n,"Default",(function(){return T}));t("../../node_modules/core-js/modules/es.symbol.iterator.js"),t("../../node_modules/core-js/modules/es.array.slice.js"),t("../../node_modules/core-js/modules/es.object.freeze.js"),t("../../node_modules/core-js/modules/es.object.keys.js"),t("../../node_modules/core-js/modules/es.symbol.js"),t("../../node_modules/core-js/modules/es.array.filter.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),t("../../node_modules/core-js/modules/es.array.for-each.js"),t("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),t("../../node_modules/core-js/modules/es.object.define-properties.js"),t("../../node_modules/core-js/modules/es.object.define-property.js"),t("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),t("../../node_modules/core-js/modules/es.date.to-primitive.js"),t("../../node_modules/core-js/modules/es.symbol.description.js"),t("../../node_modules/core-js/modules/es.object.to-string.js"),t("../../node_modules/core-js/modules/es.number.constructor.js"),t("../../node_modules/core-js/modules/web.url.js"),t("../../node_modules/core-js/modules/es.string.iterator.js"),t("../../node_modules/core-js/modules/es.array.iterator.js"),t("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),t("../../node_modules/core-js/modules/es.string.search.js"),t("../../node_modules/core-js/modules/es.regexp.exec.js");var a,s,o,l=t("../../node_modules/lit-element/lit-element.js"),r=t("./node_modules/@storybook/addon-knobs/dist/index.js"),i=t("../../node_modules/carbon-components/es/globals/js/misc/on.js"),c=t("./src/internal/vendor/@carbon/web-components/globals/directives/if-non-null.js"),u=t("../../node_modules/@percy-io/in-percy/src/index.js"),h=t.n(u),m=t("./.storybook/knob-text-nullable.ts"),d=(t("./src/components/masthead/masthead-container.ts"),t("./src/components/masthead/__stories__/masthead.stories.scss")),p=t("./src/components/masthead/__stories__/links.ts"),f=t("./src/internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI.js"),b=t("./src/components/masthead/__stories__/profile-items.ts"),N=t("./src/globals/internal/feature-flags.ts"),g=t("./src/components/masthead/__stories__/README.stories.mdx");function P(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}var k,$,y;function v(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function S(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?v(Object(t),!0).forEach((function(n){L(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):v(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function L(e,n,t){return(n=function(e){var n=function(e,n){if("object"!==w(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==w(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===w(n)?n:String(n)}(n))in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var M,I,j,O,C={authenticated:"test.user@ibm.com",unauthenticated:f.b},_="https://www.ibm.com/cloud",D=[{name:"All",value:"all"},{name:"Analyst",value:"analyst"},{name:"PartnerWorld",value:"pw"},{name:"Developer",value:"dw"}],T=function(e){var n,t,r=null!==(n=null==e?void 0:e.MastheadComposite)&&void 0!==n?n:{},i=r.customProfileLogin,u=r.platform,h=r.selectedMenuItem,m=r.userStatus,p=r.searchPlaceholder,f=r.hasProfile,N=r.hasSearch,g=r.navLinks,w=(null!==(t=null==e?void 0:e.Other)&&void 0!==t?t:{}).useMock;return Object(l.d)(k||(k=a||(a=P(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),d.a,w?Object(l.d)($||($=s||(s=P(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            ?has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            .scopeParameters=',"></dds-masthead-composite>\n        "]))),Object(c.a)(u),Object(c.a)(_),Object(c.a)(h),Object(c.a)(m),Object(c.a)(p),Object(c.a)(b.a),f,N,g,Object(c.a)(b.b),i,D):Object(l.d)(y||(y=o||(o=P(['\n          <dds-masthead-container\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            ?has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            .scopeParameters=',"></dds-masthead-container>\n        "]))),Object(c.a)(u),Object(c.a)(_),Object(c.a)(h),Object(c.a)(m),Object(c.a)(p),g,f,N,i,D))};n.default={title:"Components/Masthead with scoped search",decorators:[function(e){return window._hPageShow||(window._hPageShow=Object(i.a)(window,"pageshow",(function(){var e=document.querySelector("dds-left-nav");e&&(e.expanded=!1)}))),e()}],parameters:S(S((I={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\\\nimport {\\\\n  authenticatedProfileItems,\\\\n  unauthenticatedProfileItems,\\\\n} from './profile-items';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\\\nimport readme from './README.stories.mdx';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: 'test.user@ibm.com',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst scopeParameters = [\\\\n  {\\\\n    name: 'All',\\\\n    value: 'all',\\\\n  },\\\\n  {\\\\n    name: 'Analyst',\\\\n    value: 'analyst',\\\\n  },\\\\n  {\\\\n    name: 'PartnerWorld',\\\\n    value: 'pw',\\\\n  },\\\\n  {\\\\n    name: 'Developer',\\\\n    value: 'dw',\\\\n  },\\\\n];\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Masthead with scoped search',\\\\n  decorators: [\\\\n    (story) => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          'show the profile functionality (has-profile)',\\\\n          ['true', 'false'],\\\\n          'true'\\\\n        ),\\\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\\\n        searchPlaceholder: textNullable(\\\\n          'search placeholder (searchPlaceholder)',\\\\n          'Search all of IBM'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          'selected menu item (selected-menu-item)',\\\\n          'Consulting & Services'\\\\n        ),\\\\n        userStatus: select(\\\\n          'The user authenticated status (user-status)',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\\\n          textNullable(\\\\n            'custom profile login url (customProfileLogin)',\\\\n            'https://www.example.com/'\\\\n          ),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock =\\\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: 'true',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: 'Search all of IBM',\\\\n          selectedMenuItem: 'Services & Consulting',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: 'https://www.example.com/',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":109},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":109}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from './profile-items';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\nimport readme from './README.stories.mdx';\\n\\nconst userStatuses = {\\n  authenticated: 'test.user@ibm.com',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: 'All',\\n    value: 'all',\\n  },\\n  {\\n    name: 'Analyst',\\n    value: 'analyst',\\n  },\\n  {\\n    name: 'PartnerWorld',\\n    value: 'pw',\\n  },\\n  {\\n    name: 'Developer',\\n    value: 'dw',\\n  },\\n];\\n\\nexport const Default = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Masthead with scoped search',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\\\nimport {\\\\n  authenticatedProfileItems,\\\\n  unauthenticatedProfileItems,\\\\n} from './profile-items';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\\\nimport readme from './README.stories.mdx';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: 'test.user@ibm.com',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst scopeParameters = [\\\\n  {\\\\n    name: 'All',\\\\n    value: 'all',\\\\n  },\\\\n  {\\\\n    name: 'Analyst',\\\\n    value: 'analyst',\\\\n  },\\\\n  {\\\\n    name: 'PartnerWorld',\\\\n    value: 'pw',\\\\n  },\\\\n  {\\\\n    name: 'Developer',\\\\n    value: 'dw',\\\\n  },\\\\n];\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(\\\\n              unauthenticatedProfileItems\\\\n            )}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Masthead with scoped search',\\\\n  decorators: [\\\\n    (story) => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select(\\\\n          'show the profile functionality (has-profile)',\\\\n          ['true', 'false'],\\\\n          'true'\\\\n        ),\\\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\\\n        searchPlaceholder: textNullable(\\\\n          'search placeholder (searchPlaceholder)',\\\\n          'Search all of IBM'\\\\n        ),\\\\n        selectedMenuItem: textNullable(\\\\n          'selected menu item (selected-menu-item)',\\\\n          'Consulting & Services'\\\\n        ),\\\\n        userStatus: select(\\\\n          'The user authenticated status (user-status)',\\\\n          userStatuses,\\\\n          userStatuses.unauthenticated\\\\n        ),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\\\n          textNullable(\\\\n            'custom profile login url (customProfileLogin)',\\\\n            'https://www.example.com/'\\\\n          ),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock =\\\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: 'true',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: 'Search all of IBM',\\\\n          selectedMenuItem: 'Services & Consulting',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: 'https://www.example.com/',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":60},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":109},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":60},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":109}}}},\\n    ...readme.parameters,\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          'show the profile functionality (has-profile)',\\n          ['true', 'false'],\\n          'true'\\n        ),\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\n        searchPlaceholder: textNullable(\\n          'search placeholder (searchPlaceholder)',\\n          'Search all of IBM'\\n        ),\\n        selectedMenuItem: textNullable(\\n          'selected menu item (selected-menu-item)',\\n          'Consulting & Services'\\n        ),\\n        userStatus: select(\\n          'The user authenticated status (user-status)',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\n          textNullable(\\n            'custom profile login url (customProfileLogin)',\\n            'https://www.example.com/'\\n          ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: 'true',\\n          hasSearch: true,\\n          searchPlaceholder: 'Search all of IBM',\\n          selectedMenuItem: 'Services & Consulting',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: 'https://www.example.com/',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":68},\"endLoc\":{\"col\":1,\"line\":117},\"startBody\":{\"col\":23,\"line\":68},\"endBody\":{\"col\":1,\"line\":117}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from './profile-items';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\nimport readme from './README.stories.mdx';\\n\\nconst userStatuses = {\\n  authenticated: 'test.user@ibm.com',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: 'All',\\n    value: 'all',\\n  },\\n  {\\n    name: 'Analyst',\\n    value: 'analyst',\\n  },\\n  {\\n    name: 'PartnerWorld',\\n    value: 'pw',\\n  },\\n  {\\n    name: 'Developer',\\n    value: 'dw',\\n  },\\n];\\n\\nexport const Default = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Masthead with scoped search',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          'show the profile functionality (has-profile)',\\n          ['true', 'false'],\\n          'true'\\n        ),\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\n        searchPlaceholder: textNullable(\\n          'search placeholder (searchPlaceholder)',\\n          'Search all of IBM'\\n        ),\\n        selectedMenuItem: textNullable(\\n          'selected menu item (selected-menu-item)',\\n          'Consulting & Services'\\n        ),\\n        userStatus: select(\\n          'The user authenticated status (user-status)',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\n          textNullable(\\n            'custom profile login url (customProfileLogin)',\\n            'https://www.example.com/'\\n          ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: 'true',\\n          hasSearch: true,\\n          searchPlaceholder: 'Search all of IBM',\\n          selectedMenuItem: 'Services & Consulting',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: 'https://www.example.com/',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":60},\"endLoc\":{\"col\":1,\"line\":109},\"startBody\":{\"col\":23,\"line\":60},\"endBody\":{\"col\":1,\"line\":109}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\nimport {\n  authenticatedProfileItems,\n  unauthenticatedProfileItems,\n} from './profile-items';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\nimport readme from './README.stories.mdx';\n\nconst userStatuses = {\n  authenticated: 'test.user@ibm.com',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst scopeParameters = [\n  {\n    name: 'All',\n    value: 'all',\n  },\n  {\n    name: 'Analyst',\n    value: 'analyst',\n  },\n  {\n    name: 'PartnerWorld',\n    value: 'pw',\n  },\n  {\n    name: 'Developer',\n    value: 'dw',\n  },\n];\n\nexport const Default = (args) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(\n              unauthenticatedProfileItems\n            )}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Masthead with scoped search',\n  decorators: [\n    (story) => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\"storySource\":{\"source\":\"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\nimport {\\n  authenticatedProfileItems,\\n  unauthenticatedProfileItems,\\n} from './profile-items';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\nimport readme from './README.stories.mdx';\\n\\nconst userStatuses = {\\n  authenticated: 'test.user@ibm.com',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: 'All',\\n    value: 'all',\\n  },\\n  {\\n    name: 'Analyst',\\n    value: 'analyst',\\n  },\\n  {\\n    name: 'PartnerWorld',\\n    value: 'pw',\\n  },\\n  {\\n    name: 'Developer',\\n    value: 'dw',\\n  },\\n];\\n\\nexport const Default = (args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Masthead with scoped search',\\n  decorators: [\\n    (story) => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select(\\n          'show the profile functionality (has-profile)',\\n          ['true', 'false'],\\n          'true'\\n        ),\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\n        searchPlaceholder: textNullable(\\n          'search placeholder (searchPlaceholder)',\\n          'Search all of IBM'\\n        ),\\n        selectedMenuItem: textNullable(\\n          'selected menu item (selected-menu-item)',\\n          'Consulting & Services'\\n        ),\\n        userStatus: select(\\n          'The user authenticated status (user-status)',\\n          userStatuses,\\n          userStatuses.unauthenticated\\n        ),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN &&\\n          textNullable(\\n            'custom profile login url (customProfileLogin)',\\n            'https://www.example.com/'\\n          ),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock =\\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: 'true',\\n          hasSearch: true,\\n          searchPlaceholder: 'Search all of IBM',\\n          selectedMenuItem: 'Services & Consulting',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: 'https://www.example.com/',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\",\"locationsMap\":{\"default\":{\"startLoc\":{\"col\":23,\"line\":60},\"endLoc\":{\"col\":1,\"line\":109},\"startBody\":{\"col\":23,\"line\":60},\"endBody\":{\"col\":1,\"line\":109}}}},\n    ...readme.parameters,\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        hasProfile: select(\n          'show the profile functionality (has-profile)',\n          ['true', 'false'],\n          'true'\n        ),\n        hasSearch: boolean('show the search functionality (has-search)', true),\n        searchPlaceholder: textNullable(\n          'search placeholder (searchPlaceholder)',\n          'Search all of IBM'\n        ),\n        selectedMenuItem: textNullable(\n          'selected menu item (selected-menu-item)',\n          'Consulting & Services'\n        ),\n        userStatus: select(\n          'The user authenticated status (user-status)',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN &&\n          textNullable(\n            'custom profile login url (customProfileLogin)',\n            'https://www.example.com/'\n          ),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock =\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: 'true',\n          hasSearch: true,\n          searchPlaceholder: 'Search all of IBM',\n          selectedMenuItem: 'Services & Consulting',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: 'https://www.example.com/',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(\\n              unauthenticatedProfileItems\\n            )}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\\n        `}\\n  `;\\n}\" }, ...Default.parameters };",locationsMap:{default:{startLoc:{col:23,line:76},endLoc:{col:1,line:125},startBody:{col:23,line:76},endBody:{col:1,line:125}}}}},j="storySource",O={source:"/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from '../../../internal/vendor/@carbon/web-components/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\nimport {\n  authenticatedProfileItems,\n  unauthenticatedProfileItems,\n} from './profile-items';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\nimport readme from './README.stories.mdx';\n\nconst userStatuses = {\n  authenticated: 'test.user@ibm.com',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst scopeParameters = [\n  {\n    name: 'All',\n    value: 'all',\n  },\n  {\n    name: 'Analyst',\n    value: 'analyst',\n  },\n  {\n    name: 'PartnerWorld',\n    value: 'pw',\n  },\n  {\n    name: 'Developer',\n    value: 'dw',\n  },\n];\n\nexport const Default = (args) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(\n              unauthenticatedProfileItems\n            )}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Masthead with scoped search',\n  decorators: [\n    (story) => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\n    ...readme.parameters,\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        hasProfile: select(\n          'show the profile functionality (has-profile)',\n          ['true', 'false'],\n          'true'\n        ),\n        hasSearch: boolean('show the search functionality (has-search)', true),\n        searchPlaceholder: textNullable(\n          'search placeholder (searchPlaceholder)',\n          'Search all of IBM'\n        ),\n        selectedMenuItem: textNullable(\n          'selected menu item (selected-menu-item)',\n          'Consulting & Services'\n        ),\n        userStatus: select(\n          'The user authenticated status (user-status)',\n          userStatuses,\n          userStatuses.unauthenticated\n        ),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN &&\n          textNullable(\n            'custom profile login url (customProfileLogin)',\n            'https://www.example.com/'\n          ),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock =\n        inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: 'true',\n          hasSearch: true,\n          searchPlaceholder: 'Search all of IBM',\n          selectedMenuItem: 'Services & Consulting',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: 'https://www.example.com/',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n",locationsMap:{default:{startLoc:{col:23,line:60},endLoc:{col:1,line:109},startBody:{col:23,line:60},endBody:{col:1,line:109}}}},(j=function(e){var n=function(e,n){if("object"!==w(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==w(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===w(n)?n:String(n)}(j))in I?Object.defineProperty(I,j,{value:O,enumerable:!0,configurable:!0,writable:!0}):I[j]=O,I),g.a.parameters),{},{percy:{skip:!0},knobs:{escapeHTML:!1,MastheadComposite:function(){return{hasProfile:Object(r.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(r.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(m.a)("search placeholder (searchPlaceholder)","Search all of IBM"),selectedMenuItem:Object(m.a)("selected menu item (selected-menu-item)","Consulting & Services"),userStatus:Object(r.select)("The user authenticated status (user-status)",C,C.unauthenticated),customProfileLogin:N.b&&Object(m.a)("custom profile login url (customProfileLogin)","https://www.example.com/")}}},props:(M=h()()||new URLSearchParams(window.location.search).has("mock"),{MastheadComposite:{navLinks:M?p.e:void 0},Other:{useMock:M}}),propsSet:{default:{MastheadComposite:{platform:null,hasProfile:"true",hasSearch:!0,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:C.unauthenticated,customProfileLogin:"https://www.example.com/",navLinks:p.e}}}})},T.parameters=S({storySource:{source:'(args) => {\n  const {\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(\n              unauthenticatedProfileItems\n            )}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}></dds-masthead-container>\n        `}\n  `;\n}'}},T.parameters)}}]);