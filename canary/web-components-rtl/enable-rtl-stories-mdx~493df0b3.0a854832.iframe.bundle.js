(window.webpackJsonp=window.webpackJsonp||[]).push([[468],{"../../node_modules/@storybook/addon-docs/blocks.js":function(e,o,n){"use strict";var s=n("../../node_modules/util-deprecate/browser.js"),t=n.n(s),r=n("../../node_modules/ts-dedent/esm/index.js"),c=n("../../node_modules/@storybook/addon-docs/dist/esm/blocks/index.js");n.d(o,"a",(function(){return c.Description})),n.d(o,"b",(function(){return c.Meta})),n.d(o,"c",(function(){return c.Props}));t()((()=>{}),r.a`
    Importing from '@storybook/addon-docs/blocks' is deprecated, import directly from '@storybook/addon-docs' instead:
    
    https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-scoped-blocks-imports
`)()},"../../node_modules/@storybook/addon-docs/dist/esm/index.js":function(e,o,n){"use strict";var s=n("../../node_modules/@storybook/addon-docs/dist/esm/blocks/index.js");n.d(o,"a",(function(){return s.AddContext}))},"./docs/enable-rtl.stories.mdx":function(e,o,n){"use strict";n.r(o),n.d(o,"__page",(function(){return b}));n("../../node_modules/core-js/modules/es.object.keys.js"),n("../../node_modules/core-js/modules/es.array.index-of.js"),n("../../node_modules/core-js/modules/es.symbol.js"),n("../../node_modules/core-js/modules/es.object.assign.js"),n("../../node_modules/core-js/modules/es.function.bind.js"),n("../../node_modules/core-js/modules/es.object.define-property.js"),n("../../node_modules/core-js/modules/es.array.filter.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),n("../../node_modules/core-js/modules/es.array.for-each.js"),n("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),n("../../node_modules/core-js/modules/es.object.define-properties.js"),n("../../node_modules/react/index.js");var s=n("../../node_modules/@mdx-js/react/dist/esm.js"),t=n("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),r=n("../../node_modules/@storybook/addon-docs/blocks.js"),c=["components"];function d(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);o&&(s=s.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?d(Object(n),!0).forEach((function(o){l(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function l(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function i(){return i=Object.assign?Object.assign.bind():function(e){for(var o=1;o<arguments.length;o++){var n=arguments[o];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},i.apply(this,arguments)}function m(e,o){if(null==e)return{};var n,s,t=function(e,o){if(null==e)return{};var n,s,t={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],o.indexOf(n)>=0||(t[n]=e[n]);return t}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var u={};function p(e){var o=e.components,n=m(e,c);return Object(s.b)("wrapper",i({},u,n,{components:o,mdxType:"MDXLayout"}),Object(s.b)(r.b,{title:"Overview/Enable right-to-left (RTL)",mdxType:"Meta"}),Object(s.b)(r.a,{markdown:"\x3c!-- START doctoc generated TOC please keep comment here to allow auto update --\x3e\n\x3c!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --\x3e\n## Table of contents\n\n- [Using RTL version of CSS](#using-rtl-version-of-css)\n\n\x3c!-- END doctoc generated TOC please keep comment here to allow auto update --\x3e\n\n## Using RTL version of CSS\n\n`@carbon/ibmdotcom-web-components` ships both LTR/RTL versions of CSS modules in \n`lit-element`'s [`css` tagged template](https://lit-element.polymer-project.org/guide/styles#add-styles). \nThey have `.css.js` and `.rtl.css.js` extensions, respectively. The Web \nComponents modules loads the LTR versions by default, but you can let those \nmodules load the RTL versions with a technique called \"dependency injection\".\n\n[Webpack `NormalModuleReplacementPlugin`](https://webpack.js.org/plugins/normal-module-replacement-plugin/) \nis an available Webpack plugin that allows dependency injection. The example below lets the Web \nComponents modules load `.rtl.css.js` whenever our Web Components module tries \nto load `.css.js`:\n\n```javascript\nconst reCssBundle = /\\.css\\.js$/i;\n\n...\n\nmodule.exports = {\n  ...\n  plugins: [\n    ...\n    new webpack.NormalModuleReplacementPlugin(reCssBundle, resource => {\n      resource.request = resource.request.replace(reCssBundle, '.rtl.css.js');\n    }),\n  ],\n  ...\n};\n```\n\n> ðŸ’¡ Check our\n> [CodeSandbox](https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/usage/webpack-rtl)\n> example implementation.\n\n[![Edit @carbon/ibmdotcom-web-components](https://codesandbox.io/static/img/play-codesandbox.svg)](https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/usage/webpack-rtl)\n\nWhile we recommend using a module bundler for creating a fully optimized RTL version \nfor your application (as shown in the example above), \nyou can use our pre-built CDN version for evaluation purposes (which comes with the dotcom shell). The pre-built \nversion can be found at `https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v1/latest/rtl/ibmdotcom-web-components-dotcom-shell.rtl.min.js`.\n\n> ðŸ’¡ Check our\n> [CodeSandbox](https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/usage/dotcom-shell-cdn-with-rtl)\n> example implementation.\n\n[![Edit @carbon/ibmdotcom-web-components](https://codesandbox.io/static/img/play-codesandbox.svg)](https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/usage/dotcom-shell-cdn-with-rtl)\n",mdxType:"Description"}))}p.isMDXComponent=!0;var b=function(){throw new Error("Docs-only story")};b.parameters={docsOnly:!0};var j={title:"Overview/Enable right-to-left (RTL)",includeStories:["__page"]},y={};j.parameters=j.parameters||{},j.parameters.docs=a(a({},j.parameters.docs||{}),{},{page:function(){return Object(s.b)(t.a,{mdxStoryNameToKey:y,mdxComponentAnnotations:j},Object(s.b)(p,null))}});o.default=j}}]);