/*! For license information please see main~449cf3c9.23d32cc7c3b70ecc2ae8.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{2242:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Pictogram",(function(){return Pictogram})),__webpack_require__.d(__webpack_exports__,"Static",(function(){return Static})),__webpack_require__.d(__webpack_exports__,"Logo",(function(){return Logo}));__webpack_require__(71),__webpack_require__(450),__webpack_require__(1009),__webpack_require__(324);var dist=__webpack_require__(7),_20=__webpack_require__(14),lit_element=__webpack_require__(1),if_non_null=__webpack_require__(2),fpo_4x3_1312x984_003=__webpack_require__(223),logo_microsoft_2x1=__webpack_require__(1067),defs=__webpack_require__(134),esm=(__webpack_require__(19),__webpack_require__(15),__webpack_require__(0)),blocks=__webpack_require__(3),contributing_license=__webpack_require__(16),storybook_cdn=__webpack_require__(12);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _extends(){return _extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)("h1",{id:"card"},"Card"),Object(esm.mdx)("blockquote",null,Object(esm.mdx)("p",{parentName:"blockquote"},"ðŸ’¡ Check our\n",Object(esm.mdx)("a",_extends({parentName:"p"},{href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/card",target:"_blank",rel:"nofollow noopener noreferrer"}),"CodeSandbox"),"\nexample implementation.")),Object(esm.mdx)("p",null,Object(esm.mdx)("a",_extends({parentName:"p"},{href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/card",target:"_blank",rel:"nofollow noopener noreferrer"}),Object(esm.mdx)("img",_extends({parentName:"a"},{src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"})))),Object(esm.mdx)("h2",{id:"getting-started"},"Getting started"),Object(esm.mdx)("p",null,"Here's a quick example to get you started."),Object(esm.mdx)("h3",{id:"js-via-import"},"JS (via import)"),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"import '@carbon/ibmdotcom-web-components/es/components/card/index.js';\n")),Object(esm.mdx)(blocks.Description,{markdown:"".concat(Object(storybook_cdn.c)({components:["card"]})),mdxType:"Description"}),Object(esm.mdx)(blocks.Description,{markdown:"".concat(Object(storybook_cdn.a)()),mdxType:"Description"}),Object(esm.mdx)("h3",{id:"html"},"HTML"),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-html"}),'<dds-card href="https://example.com">\n  <dds-card-eyebrow>Eyebrow text</dds-card-eyebrow>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  <dds-card-footer slot="footer">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(esm.mdx)("h2",{id:"card-with-pictogram"},"Card with pictogram"),Object(esm.mdx)("p",null,"You can browse the ",Object(esm.mdx)("a",_extends({parentName:"p"},{href:"https://www.carbondesignsystem.com/guidelines/pictograms/library/",target:"_blank",rel:"nofollow noopener noreferrer"}),"Carbon Pictogram library")," to find a pictogram that fits your design.\nYou can also check out the repo ",Object(esm.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/carbon-design-system/carbon/tree/main/packages/pictograms",target:"_blank",rel:"nofollow noopener noreferrer"}),"here")),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-html"}),'<dds-card pictogram-placement="${pictogramPlacement}" href="https://example.com">\n  <dds-card-eyebrow>Eyebrow text</dds-card-eyebrow>\n  <dds-card-heading>Lorem ipsum dolor</dds-card-heading>\n  <p>Copy to be shown on hover if the pictogram placement is bottom</p>\n  <svg\n    slot="pictogram"\n    focusable="false"\n    preserveAspectRatio="xMidYMid meet"\n    xmlns="http://www.w3.org/2000/svg"\n    stroke="currentColor"\n    data-autoid="dds--card__pictogram"\n    aria-label="Pictogram description"\n    width="48"\n    height="48"\n    viewBox="0 0 48 48"\n    role="img"\n    class="bx--card__pictogram"\n  >\n    <path\n      fill="none"\n      stroke-linejoin="round"\n      stroke-miterlimit="10"\n      stroke-width=".72"\n      d="M37,32 H11c-1.1,0-2-0.9-2-2V13c0-1.1,0.9-2,2-2h26c1.1,0,2,0.9,2,2v17C39,31.1,38.1,32,37,32z M17,37h14 M24,32v5 M9,27h30"\n    ></path>\n  </svg>\n</dds-card>\n')),Object(esm.mdx)("h2",{id:"card---static"},"Card - static"),Object(esm.mdx)("p",null,"When there is no URL being passed to the ",Object(esm.mdx)("inlineCode",{parentName:"p"},"DDSCard"),"'s href attribute, the static variation will be rendered,\nwhere the card is no longer clickable and optional ",Object(esm.mdx)("inlineCode",{parentName:"p"},"Tag")," elements can also be added."),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-html"}),'<dds-card>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  ${copy ? html`\n  <p>${copy}</p>\n  ` : ``}\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type="purple">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com" icon-placement="right">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(esm.mdx)("h2",{id:"card---logo"},"Card - logo"),Object(esm.mdx)("p",null,"If you need to use a Logo image for the Card component, use the Logo variant to ensure the Card\nproperly accomodates to the Logo image."),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-html"}),'<dds-card border logo href="https://example.com">\n  <dds-image-logo\n    slot="image"\n    alt="Image logo alt text"\n    default-src="https://fpoimg.com/320x160?text=2:1&bg_color=ee5396&text_color=161616"\n  ></dds-image-logo>\n  <dds-card-eyebrow>Microsoft</dds-card-eyebrow>\n  <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type="purple">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com"></dds-card-footer>\n</dds-card>\n')),Object(esm.mdx)("h2",{id:"light-theme"},"Light theme"),Object(esm.mdx)("p",null,"An optional light theme is available under ",Object(esm.mdx)("inlineCode",{parentName:"p"},"color-scheme"),"."),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-html"}),'<dds-card color-scheme="light"></dds-card>\n')),Object(esm.mdx)("h2",{id:"card-with-image"},"Card with image"),Object(esm.mdx)("p",null,"To add image to the ",Object(esm.mdx)("inlineCode",{parentName:"p"},"dds-card"),", import the ",Object(esm.mdx)("inlineCode",{parentName:"p"},"image")," component and place ",Object(esm.mdx)("inlineCode",{parentName:"p"},"dds-image")," within ",Object(esm.mdx)("inlineCode",{parentName:"p"},"dds-card"),":"),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"import '@carbon/ibmdotcom-web-components/es/components/image/index.js';\n")),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-html"}),'<dds-card>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  <dds-image slot="image" alt="alt text" default-src="../image.png"></dds-image>\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type="purple">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com" icon-placement="right">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(esm.mdx)("h2",{id:"props"},"Props"),Object(esm.mdx)(blocks.Props,{of:"dds-card",mdxType:"Props"}),Object(esm.mdx)("h2",{id:"stable-selectors"},"Stable selectors"),Object(esm.mdx)("p",null,"See ",Object(esm.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components#stable-selectors-for-analytics-and-integratione2e-testing-in-web-components",target:"_blank",rel:"nofollow noopener noreferrer"}),"our README")," to see how Web Components selector and ",Object(esm.mdx)("inlineCode",{parentName:"p"},"data-autoid")," should be used."),Object(esm.mdx)("table",null,Object(esm.mdx)("thead",{parentName:"table"},Object(esm.mdx)("tr",{parentName:"thead"},Object(esm.mdx)("th",_extends({parentName:"tr"},{align:null}),"Web Components selector"),Object(esm.mdx)("th",_extends({parentName:"tr"},{align:null}),"Compatibility selector"),Object(esm.mdx)("th",_extends({parentName:"tr"},{align:null}),"Description"))),Object(esm.mdx)("tbody",{parentName:"table"},Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"<dds-card>")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},'data-autoid="dds--card"')),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"Component")))),Object(esm.mdx)(blocks.Description,{markdown:contributing_license.a,mdxType:"Description"}))}MDXContent.isMDXComponent=!0;var componentMeta={includeStories:[]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=_objectSpread(_objectSpread({},componentMeta.parameters.docs||{}),{},{page:function(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});var README_stories=componentMeta,knob_text_nullable=__webpack_require__(11);let _t,_t2,_t3,_t4,_t5,_t6,_t7,_t8,_t9,_t10,_t11,_t12,_t13,_t14,_t15,_t16,_t17,_t18,_t19,_t20,_=t=>t;function card_stories_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function card_stories_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?card_stories_ownKeys(Object(source),!0).forEach((function(key){card_stories_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):card_stories_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function card_stories_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_require__(10).withSource;var addSourceDecorator=__webpack_require__(10).addSource,__SOURCE_PREFIX__=(__webpack_require__(10).withSource,addSourceDecorator=__webpack_require__(10).addSource,"/home/runner/work/carbon-for-ibm-dotcom/carbon-for-ibm-dotcom/packages/web-components/src/components/card/__stories__"),__STORY__="/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport '../../image/image';\nimport '../../tag-group/tag-group';\nimport 'carbon-web-components/es/components/tag/tag';\nimport '../index';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\nimport { html } from 'lit-element';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null';\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\nimport { PICTOGRAM_PLACEMENT } from '../defs';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nconst tagGroupContent = html`\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type=\"purple\">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n`;\n\nexport const Default = ({ parameters }) => {\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = parameters?.props?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifNonNull(href || undefined)}\n    >\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n};\n\nconst pictogramPlacements = {\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\n};\n\nDefault.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => ({\n        image: boolean('Add image:', false, groupId),\n        eyebrow: textNullable('Eyebrow:', 'Industry', groupId),\n        heading: textNullable('Heading:', 'Aerospace and defence', groupId),\n        copy: textNullable('Body copy:', '', groupId),\n        alt: 'Image alt text',\n        defaultSrc: imgXlg4x3,\n        tagGroup: boolean('Add tags:', false, groupId),\n        href: 'https://example.com',\n        footer: textNullable('CTA:', 'Learn more', groupId),\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n          footer: 'Learn more',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Pictogram = ({ parameters }) => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = parameters?.props?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement=\"${pictogramPlacement}\"\n      href=${ifNonNull(href || undefined)}\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n    >\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <svg\n        slot=\"pictogram\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-autoid=\"dds--card__pictogram\"\n        aria-label=\"Pictogram description\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 32 32\"\n        role=\"img\"\n        class=\"bx--card__pictogram\"\n      >\n        <path\n          id=\"desktop_1_\"\n          d=\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\"\n        />\n      </svg>\n    </dds-card>\n  `;\n};\n\nPictogram.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      PictogramCard: ({ groupId }) => {\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, groupId);\n        const copy = textNullable(\n          'Body copy:',\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          groupId\n        );\n        return {\n          pictogramPlacement,\n          heading: textNullable('Heading:', 'Aerospace and defence', groupId),\n          copy,\n          href: 'https://example.com',\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        PictogramCard: {\n          pictogramPlacement: 'top',\n          heading: 'Aerospace and defence',\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          href: 'https://example.com',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Static = ({ parameters }) => {\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = parameters?.props?.Card ?? {};\n  return html`\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href=\"https://www.example.com\">\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n};\n\nStatic.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => {\n        const image = boolean('Add image:', false, groupId);\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', groupId);\n        const heading = textNullable('Heading:', 'Free trial', groupId);\n        const copy = textNullable(\n          'Body copy:',\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\n            'All trial registrants are restricted to one free trial per computer per user.',\n          groupId\n        );\n        const tagGroup = boolean('Add tags:', false, groupId);\n        const cta = boolean('Add CTA:', false, groupId);\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', groupId) : '';\n        const outlinedCard = boolean('Outlined card:', true, groupId);\n        return {\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          image,\n          eyebrow,\n          heading,\n          copy,\n          tagGroup,\n          cta,\n          ctaCopy,\n          outlinedCard,\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          cta: false,\n          ctaCopy: 'Sign up for the trial',\n          outlinedCard: 'true',\n        },\n      },\n    },\n  },\n};\n\nexport const Logo = ({ parameters }) => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = parameters?.props?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\n      <dds-image-logo slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image-logo>\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      ${heading\n        ? html`\n            <dds-card-heading>${heading}</dds-card-heading>\n          `\n        : ``}\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n};\n\nLogo.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => ({\n        alt: 'Image alt text',\n        defaultSrc: logoMicrosoft2x1,\n        tagGroup: boolean('Add tags', true, groupId),\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', groupId),\n        heading: textNullable('Card Heading (optional):', '', groupId),\n        copy: textNullable(\n          'Card body copy:',\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          groupId\n        ),\n        href: 'https://example.com',\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Microsoft',\n          heading: '',\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Components/Card',\n  decorators: [\n    story => html`\n      <div class=\"bx--grid\">\n        <div class=\"bx--row\">\n          <div class=\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\">\n            ${story()}\n          </div>\n        </div>\n      </div>\n    `,\n  ],\n  parameters: {\n    ...readme.parameters,\n    hasStoryPadding: true,\n  },\n};\n",__ADDS_MAP__={"components-card--default":{startLoc:{col:23,line:35},endLoc:{col:1,line:66},startBody:{col:23,line:35},endBody:{col:1,line:66}},"components-card--pictogram":{startLoc:{col:25,line:109},endLoc:{col:1,line:152},startBody:{col:25,line:109},endBody:{col:1,line:152}},"components-card--static":{startLoc:{col:22,line:190},endLoc:{col:1,line:224},startBody:{col:22,line:190},endBody:{col:1,line:224}},"components-card--logo":{startLoc:{col:20,line:277},endLoc:{col:1,line:306},startBody:{col:20,line:277},endBody:{col:1,line:306}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};const tagGroupContent=Object(lit_element.d)(_t||(_t=_`
  <dds-tag-group>
    <bx-tag>
      Most popular
    </bx-tag>
    <bx-tag type="purple">
      Enterprise
    </bx-tag>
  </dds-tag-group>
`)),Default=addSourceDecorator(addSourceDecorator((({parameters:parameters})=>{var _parameters$props$Car,_parameters$props;const{image:image,href:href,alt:alt,defaultSrc:defaultSrc,heading:heading,eyebrow:eyebrow,tagGroup:tagGroup,copy:copy,footer:footer,cardStyles:cardStyles}=null!==(_parameters$props$Car=null==parameters||null===(_parameters$props=parameters.props)||void 0===_parameters$props?void 0:_parameters$props.Card)&&void 0!==_parameters$props$Car?_parameters$props$Car:{};return Object(lit_element.d)(_t2||(_t2=_`
    <dds-card
      color-scheme=${0}
      ?border=${0}
      href=${0}
    >
      ${0}
      <dds-card-eyebrow>${0}</dds-card-eyebrow>
      <dds-card-heading>${0}</dds-card-heading>
      ${0}
      ${0}
      <dds-card-footer>
        ${0}${0}
      </dds-card-footer>
    </dds-card>
  `),"Inverse card"===cardStyles?"inverse":"Outlined card"===cardStyles?"light":"","Outlined card"===cardStyles,Object(if_non_null.a)(href||void 0),image?Object(lit_element.d)(_t3||(_t3=_`
            <dds-image slot="image" alt="${0}" default-src="${0}"></dds-image>
          `),Object(if_non_null.a)(alt),Object(if_non_null.a)(defaultSrc)):"",eyebrow,heading,copy?Object(lit_element.d)(_t4||(_t4=_`
            <p>${0}</p>
          `),copy):"",tagGroup?Object(lit_element.d)(_t5||(_t5=_`
            ${0}
          `),tagGroupContent):"",footer,Object(_20.a)({slot:"icon"}))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),pictogramPlacements={[defs.a.TOP]:defs.a.TOP,[defs.a.BOTTOM]:defs.a.BOTTOM};Default.story={parameters:card_stories_objectSpread(card_stories_objectSpread({},README_stories.parameters),{},{knobs:{Card:({groupId:groupId})=>({image:Object(dist.boolean)("Add image:",!1,groupId),eyebrow:Object(knob_text_nullable.a)("Eyebrow:","Industry",groupId),heading:Object(knob_text_nullable.a)("Heading:","Aerospace and defence",groupId),copy:Object(knob_text_nullable.a)("Body copy:","",groupId),alt:"Image alt text",defaultSrc:fpo_4x3_1312x984_003.a,tagGroup:Object(dist.boolean)("Add tags:",!1,groupId),href:"https://example.com",footer:Object(knob_text_nullable.a)("CTA:","Learn more",groupId),cardStyles:Object(dist.select)("Card style:",["Outlined card","Inverse card","none"],"none",groupId)})},propsSet:{default:{Card:{image:!1,eyebrow:"Industry",heading:"Aerospace and defence",copy:"",alt:"Image alt text",defaultSrc:fpo_4x3_1312x984_003.a,tagGroup:!1,href:"https://example.com",footer:"Learn more",cardStyles:"none"}}}})};const Pictogram=addSourceDecorator(addSourceDecorator((({parameters:parameters})=>{var _parameters$props$Pic,_parameters$props2;const{href:href,heading:heading,copy:copy,tagGroup:tagGroup,pictogramPlacement:pictogramPlacement,cardStyles:cardStyles}=null!==(_parameters$props$Pic=null==parameters||null===(_parameters$props2=parameters.props)||void 0===_parameters$props2?void 0:_parameters$props2.PictogramCard)&&void 0!==_parameters$props$Pic?_parameters$props$Pic:{};return Object(lit_element.d)(_t6||(_t6=_`
    <dds-card
      pictogram-placement="${0}"
      href=${0}
      color-scheme=${0}
      ?border=${0}
    >
      <dds-card-heading>${0}</dds-card-heading>
      ${0}
      ${0}
      <svg
        slot="pictogram"
        focusable="false"
        preserveAspectRatio="xMidYMid meet"
        xmlns="http://www.w3.org/2000/svg"
        data-autoid="dds--card__pictogram"
        aria-label="Pictogram description"
        width="48"
        height="48"
        viewBox="0 0 32 32"
        role="img"
        class="bx--card__pictogram"
      >
        <path
          id="desktop_1_"
          d="M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26
          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,
          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,
          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z"
        />
      </svg>
    </dds-card>
  `),pictogramPlacement,Object(if_non_null.a)(href||void 0),"Inverse card"===cardStyles?"inverse":"Outlined card"===cardStyles?"light":"","Outlined card"===cardStyles,heading,copy?Object(lit_element.d)(_t7||(_t7=_`
            <p>${0}</p>
          `),copy):"",tagGroup?Object(lit_element.d)(_t8||(_t8=_`
            ${0}
          `),tagGroupContent):"")}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__});Pictogram.story={parameters:card_stories_objectSpread(card_stories_objectSpread({},README_stories.parameters),{},{knobs:{PictogramCard:({groupId:groupId})=>{const pictogramPlacement=Object(dist.select)("Pictogram position:",pictogramPlacements,pictogramPlacements.top,groupId),copy=Object(knob_text_nullable.a)("Body copy:","Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.",groupId);return{pictogramPlacement:pictogramPlacement,heading:Object(knob_text_nullable.a)("Heading:","Aerospace and defence",groupId),copy:copy,href:"https://example.com",cardStyles:Object(dist.select)("Card style:",["Outlined card","Inverse card","none"],"none",groupId)}}},propsSet:{default:{PictogramCard:{pictogramPlacement:"top",heading:"Aerospace and defence",copy:"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.",href:"https://example.com",cardStyles:"none"}}}})};const Static=addSourceDecorator(addSourceDecorator((({parameters:parameters})=>{var _parameters$props$Car2,_parameters$props3;const{image:image,alt:alt,defaultSrc:defaultSrc,outlinedCard:outlinedCard,eyebrow:eyebrow,heading:heading,copy:copy,tagGroup:tagGroup,cta:cta,ctaCopy:ctaCopy}=null!==(_parameters$props$Car2=null==parameters||null===(_parameters$props3=parameters.props)||void 0===_parameters$props3?void 0:_parameters$props3.Card)&&void 0!==_parameters$props$Car2?_parameters$props$Car2:{};return Object(lit_element.d)(_t9||(_t9=_`
    <dds-card color-scheme=${0} ?border=${0}>
      ${0}
      ${0}
      <dds-card-heading>${0}</dds-card-heading>
      ${0}
      ${0}
      ${0}
    </dds-card>
  `),outlinedCard?"light":"",outlinedCard,image?Object(lit_element.d)(_t10||(_t10=_`
            <dds-image slot="image" alt="${0}" default-src="${0}"></dds-image>
          `),Object(if_non_null.a)(alt),Object(if_non_null.a)(defaultSrc)):"",eyebrow?Object(lit_element.d)(_t11||(_t11=_`
            <dds-card-eyebrow>${0}</dds-card-eyebrow>
          `),eyebrow):"",heading,copy?Object(lit_element.d)(_t12||(_t12=_`
            <p>${0}</p>
          `),copy):"",tagGroup?Object(lit_element.d)(_t13||(_t13=_`
            ${0}
          `),tagGroupContent):"",cta?Object(lit_element.d)(_t14||(_t14=_`
            <dds-card-footer href="https://www.example.com">
              ${0}${0}
            </dds-card-footer>
          `),ctaCopy,Object(_20.a)({slot:"icon"})):"")}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__});Static.story={parameters:card_stories_objectSpread(card_stories_objectSpread({},README_stories.parameters),{},{knobs:{Card:({groupId:groupId})=>{const image=Object(dist.boolean)("Add image:",!1,groupId),eyebrow=Object(knob_text_nullable.a)("Eyebrow:","SPSS Statistics",groupId),heading=Object(knob_text_nullable.a)("Heading:","Free trial",groupId),copy=Object(knob_text_nullable.a)("Body copy:","Enjoy full SPSS Statistics capabilities including all add-ons. All trial registrants are restricted to one free trial per computer per user.",groupId),tagGroup=Object(dist.boolean)("Add tags:",!1,groupId),cta=Object(dist.boolean)("Add CTA:",!1,groupId),ctaCopy=cta?Object(knob_text_nullable.a)("CTA copy:","Sign up for the trial",groupId):"",outlinedCard=Object(dist.boolean)("Outlined card:",!0,groupId);return{alt:"Image alt text",defaultSrc:fpo_4x3_1312x984_003.a,image:image,eyebrow:eyebrow,heading:heading,copy:copy,tagGroup:tagGroup,cta:cta,ctaCopy:ctaCopy,outlinedCard:outlinedCard}}},propsSet:{default:{Card:{image:!1,eyebrow:"Industry",heading:"Aerospace and defence",copy:"",alt:"Image alt text",defaultSrc:fpo_4x3_1312x984_003.a,tagGroup:!1,cta:!1,ctaCopy:"Sign up for the trial",outlinedCard:"true"}}}})};const Logo=addSourceDecorator(addSourceDecorator((({parameters:parameters})=>{var _parameters$props$Car3,_parameters$props4;const{alt:alt,defaultSrc:defaultSrc,eyebrow:eyebrow,heading:heading,href:href,copy:copy,tagGroup:tagGroup}=null!==(_parameters$props$Car3=null==parameters||null===(_parameters$props4=parameters.props)||void 0===_parameters$props4?void 0:_parameters$props4.Card)&&void 0!==_parameters$props$Car3?_parameters$props$Car3:{};return Object(lit_element.d)(_t15||(_t15=_`
    <dds-card border logo href=${0}>
      <dds-image-logo slot="image" alt="${0}" default-src="${0}"></dds-image-logo>
      ${0}
      ${0}
      ${0}
      ${0}

      <dds-card-footer></dds-card-footer>
    </dds-card>
  `),Object(if_non_null.a)(href||void 0),Object(if_non_null.a)(alt),Object(if_non_null.a)(defaultSrc),eyebrow?Object(lit_element.d)(_t16||(_t16=_`
            <dds-card-eyebrow>${0}</dds-card-eyebrow>
          `),eyebrow):"",heading?Object(lit_element.d)(_t17||(_t17=_`
            <dds-card-heading>${0}</dds-card-heading>
          `),heading):"",copy?Object(lit_element.d)(_t18||(_t18=_`
            <p>${0}</p>
          `),copy):"",tagGroup?Object(lit_element.d)(_t19||(_t19=_`
            ${0}
          `),tagGroupContent):"")}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/card.stories.ts",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__});Logo.story={parameters:card_stories_objectSpread(card_stories_objectSpread({},README_stories.parameters),{},{knobs:{Card:({groupId:groupId})=>({alt:"Image alt text",defaultSrc:logo_microsoft_2x1.a,tagGroup:Object(dist.boolean)("Add tags",!0,groupId),eyebrow:Object(knob_text_nullable.a)("Card Eyebrow:","Microsoft",groupId),heading:Object(knob_text_nullable.a)("Card Heading (optional):","",groupId),copy:Object(knob_text_nullable.a)("Card body copy:","Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",groupId),href:"https://example.com"})},propsSet:{default:{Card:{image:!1,eyebrow:"Microsoft",heading:"",copy:"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",alt:"Image alt text",defaultSrc:fpo_4x3_1312x984_003.a,tagGroup:!1,href:"https://example.com"}}}})};__webpack_exports__.default={title:"Components/Card",decorators:[story=>Object(lit_element.d)(_t20||(_t20=_`
      <div class="bx--grid">
        <div class="bx--row">
          <div class="bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter">
            ${0}
          </div>
        </div>
      </div>
    `),story())],parameters:card_stories_objectSpread(card_stories_objectSpread({storySource:{source:"\n\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/home/runner/work/carbon-for-ibm-dotcom/carbon-for-ibm-dotcom/packages/web-components/src/components/card/__stories__\";\n// @ts-ignore\nvar __STORY__ = \"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2021\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport 'carbon-web-components/es/components/tag/tag';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\\nimport { html } from 'lit-element';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <bx-tag>\\n      Most popular\\n    </bx-tag>\\n    <bx-tag type=\\\"purple\\\">\\n      Enterprise\\n    </bx-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = ({ parameters }) => {\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = parameters?.props?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifNonNull(href || undefined)}\\n    >\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: ({ groupId }) => ({\\n        image: boolean('Add image:', false, groupId),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', groupId),\\n        heading: textNullable('Heading:', 'Aerospace and defence', groupId),\\n        copy: textNullable('Body copy:', '', groupId),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, groupId),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', groupId),\\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = ({ parameters }) => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = parameters?.props?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifNonNull(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n    >\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"bx--card__pictogram\\\"\\n      >\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\"\\n        />\\n      </svg>\\n    </dds-card>\\n  `;\\n};\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: ({ groupId }) => {\\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, groupId);\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          groupId\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable('Heading:', 'Aerospace and defence', groupId),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = ({ parameters }) => {\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = parameters?.props?.Card ?? {};\\n  return html`\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: ({ groupId }) => {\\n        const image = boolean('Add image:', false, groupId);\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', groupId);\\n        const heading = textNullable('Heading:', 'Free trial', groupId);\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          groupId\\n        );\\n        const tagGroup = boolean('Add tags:', false, groupId);\\n        const cta = boolean('Add CTA:', false, groupId);\\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', groupId) : '';\\n        const outlinedCard = boolean('Outlined card:', true, groupId);\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = ({ parameters }) => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = parameters?.props?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\n      <dds-image-logo slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      ${heading\\n        ? html`\\n            <dds-card-heading>${heading}</dds-card-heading>\\n          `\\n        : ``}\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: ({ groupId }) => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, groupId),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', groupId),\\n        heading: textNullable('Card Heading (optional):', '', groupId),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          groupId\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    story => html`\\n      <div class=\\\"bx--grid\\\">\\n        <div class=\\\"bx--row\\\">\\n          <div class=\\\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"components-card--default\":{\"startLoc\":{\"col\":23,\"line\":35},\"endLoc\":{\"col\":1,\"line\":66},\"startBody\":{\"col\":23,\"line\":35},\"endBody\":{\"col\":1,\"line\":66}},\"components-card--pictogram\":{\"startLoc\":{\"col\":25,\"line\":109},\"endLoc\":{\"col\":1,\"line\":152},\"startBody\":{\"col\":25,\"line\":109},\"endBody\":{\"col\":1,\"line\":152}},\"components-card--static\":{\"startLoc\":{\"col\":22,\"line\":190},\"endLoc\":{\"col\":1,\"line\":224},\"startBody\":{\"col\":22,\"line\":190},\"endBody\":{\"col\":1,\"line\":224}},\"components-card--logo\":{\"startLoc\":{\"col\":20,\"line\":277},\"endLoc\":{\"col\":1,\"line\":306},\"startBody\":{\"col\":20,\"line\":277},\"endBody\":{\"col\":1,\"line\":306}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/card.stories.ts\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport '../../image/image';\nimport '../../tag-group/tag-group';\nimport 'carbon-web-components/es/components/tag/tag';\nimport '../index';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\nimport { html } from 'lit-element';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null';\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\nimport { PICTOGRAM_PLACEMENT } from '../defs';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nconst tagGroupContent = html`\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type=\"purple\">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n`;\n\nexport const Default = addSourceDecorator(({ parameters }) => {\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = parameters?.props?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifNonNull(href || undefined)}\n    >\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nconst pictogramPlacements = {\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\n};\n\nDefault.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => ({\n        image: boolean('Add image:', false, groupId),\n        eyebrow: textNullable('Eyebrow:', 'Industry', groupId),\n        heading: textNullable('Heading:', 'Aerospace and defence', groupId),\n        copy: textNullable('Body copy:', '', groupId),\n        alt: 'Image alt text',\n        defaultSrc: imgXlg4x3,\n        tagGroup: boolean('Add tags:', false, groupId),\n        href: 'https://example.com',\n        footer: textNullable('CTA:', 'Learn more', groupId),\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n          footer: 'Learn more',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Pictogram = addSourceDecorator(({ parameters }) => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = parameters?.props?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement=\"${pictogramPlacement}\"\n      href=${ifNonNull(href || undefined)}\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n    >\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <svg\n        slot=\"pictogram\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-autoid=\"dds--card__pictogram\"\n        aria-label=\"Pictogram description\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 32 32\"\n        role=\"img\"\n        class=\"bx--card__pictogram\"\n      >\n        <path\n          id=\"desktop_1_\"\n          d=\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\"\n        />\n      </svg>\n    </dds-card>\n  `;\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nPictogram.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      PictogramCard: ({ groupId }) => {\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, groupId);\n        const copy = textNullable(\n          'Body copy:',\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          groupId\n        );\n        return {\n          pictogramPlacement,\n          heading: textNullable('Heading:', 'Aerospace and defence', groupId),\n          copy,\n          href: 'https://example.com',\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        PictogramCard: {\n          pictogramPlacement: 'top',\n          heading: 'Aerospace and defence',\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          href: 'https://example.com',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Static = addSourceDecorator(({ parameters }) => {\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = parameters?.props?.Card ?? {};\n  return html`\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href=\"https://www.example.com\">\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\n\nStatic.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => {\n        const image = boolean('Add image:', false, groupId);\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', groupId);\n        const heading = textNullable('Heading:', 'Free trial', groupId);\n        const copy = textNullable(\n          'Body copy:',\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\n            'All trial registrants are restricted to one free trial per computer per user.',\n          groupId\n        );\n        const tagGroup = boolean('Add tags:', false, groupId);\n        const cta = boolean('Add CTA:', false, groupId);\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', groupId) : '';\n        const outlinedCard = boolean('Outlined card:', true, groupId);\n        return {\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          image,\n          eyebrow,\n          heading,\n          copy,\n          tagGroup,\n          cta,\n          ctaCopy,\n          outlinedCard,\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          cta: false,\n          ctaCopy: 'Sign up for the trial',\n          outlinedCard: 'true',\n        },\n      },\n    },\n  },\n};\n\nexport const Logo = addSourceDecorator(({ parameters }) => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = parameters?.props?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\n      <dds-image-logo slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image-logo>\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      ${heading\n        ? html`\n            <dds-card-heading>${heading}</dds-card-heading>\n          `\n        : ``}\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\n\nLogo.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => ({\n        alt: 'Image alt text',\n        defaultSrc: logoMicrosoft2x1,\n        tagGroup: boolean('Add tags', true, groupId),\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', groupId),\n        heading: textNullable('Card Heading (optional):', '', groupId),\n        copy: textNullable(\n          'Card body copy:',\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          groupId\n        ),\n        href: 'https://example.com',\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Microsoft',\n          heading: '',\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Components/Card',\n  decorators: [\n    story => html`\n      <div class=\"bx--grid\">\n        <div class=\"bx--row\">\n          <div class=\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\">\n            ${story()}\n          </div>\n        </div>\n      </div>\n    `,\n  ],\n  parameters: {\"storySource\":{\"source\":\"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2021\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport 'carbon-web-components/es/components/tag/tag';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\\nimport { html } from 'lit-element';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <bx-tag>\\n      Most popular\\n    </bx-tag>\\n    <bx-tag type=\\\"purple\\\">\\n      Enterprise\\n    </bx-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = ({ parameters }) => {\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = parameters?.props?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifNonNull(href || undefined)}\\n    >\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: ({ groupId }) => ({\\n        image: boolean('Add image:', false, groupId),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', groupId),\\n        heading: textNullable('Heading:', 'Aerospace and defence', groupId),\\n        copy: textNullable('Body copy:', '', groupId),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, groupId),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', groupId),\\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = ({ parameters }) => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = parameters?.props?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifNonNull(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n    >\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"bx--card__pictogram\\\"\\n      >\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\"\\n        />\\n      </svg>\\n    </dds-card>\\n  `;\\n};\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: ({ groupId }) => {\\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, groupId);\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          groupId\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable('Heading:', 'Aerospace and defence', groupId),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = ({ parameters }) => {\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = parameters?.props?.Card ?? {};\\n  return html`\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: ({ groupId }) => {\\n        const image = boolean('Add image:', false, groupId);\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', groupId);\\n        const heading = textNullable('Heading:', 'Free trial', groupId);\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          groupId\\n        );\\n        const tagGroup = boolean('Add tags:', false, groupId);\\n        const cta = boolean('Add CTA:', false, groupId);\\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', groupId) : '';\\n        const outlinedCard = boolean('Outlined card:', true, groupId);\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = ({ parameters }) => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = parameters?.props?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\n      <dds-image-logo slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      ${heading\\n        ? html`\\n            <dds-card-heading>${heading}</dds-card-heading>\\n          `\\n        : ``}\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: ({ groupId }) => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, groupId),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', groupId),\\n        heading: textNullable('Card Heading (optional):', '', groupId),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          groupId\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    story => html`\\n      <div class=\\\"bx--grid\\\">\\n        <div class=\\\"bx--row\\\">\\n          <div class=\\\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\",\"locationsMap\":{\"components-card--default\":{\"startLoc\":{\"col\":23,\"line\":35},\"endLoc\":{\"col\":1,\"line\":66},\"startBody\":{\"col\":23,\"line\":35},\"endBody\":{\"col\":1,\"line\":66}},\"components-card--pictogram\":{\"startLoc\":{\"col\":25,\"line\":109},\"endLoc\":{\"col\":1,\"line\":152},\"startBody\":{\"col\":25,\"line\":109},\"endBody\":{\"col\":1,\"line\":152}},\"components-card--static\":{\"startLoc\":{\"col\":22,\"line\":190},\"endLoc\":{\"col\":1,\"line\":224},\"startBody\":{\"col\":22,\"line\":190},\"endBody\":{\"col\":1,\"line\":224}},\"components-card--logo\":{\"startLoc\":{\"col\":20,\"line\":277},\"endLoc\":{\"col\":1,\"line\":306},\"startBody\":{\"col\":20,\"line\":277},\"endBody\":{\"col\":1,\"line\":306}}}},\n    ...readme.parameters,\n    hasStoryPadding: true,\n  },\n};\n",locationsMap:{"components-card--default":{startLoc:{col:23,line:57},endLoc:{col:139,line:88},startBody:{col:23,line:57},endBody:{col:139,line:88}},"components-card--pictogram":{startLoc:{col:25,line:131},endLoc:{col:139,line:174},startBody:{col:25,line:131},endBody:{col:139,line:174}},"components-card--static":{startLoc:{col:22,line:212},endLoc:{col:139,line:246},startBody:{col:22,line:212},endBody:{col:139,line:246}},"components-card--logo":{startLoc:{col:20,line:299},endLoc:{col:139,line:328},startBody:{col:20,line:299},endBody:{col:139,line:328}}}},storySource:{source:"/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport '../../image/image';\nimport '../../tag-group/tag-group';\nimport 'carbon-web-components/es/components/tag/tag';\nimport '../index';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\nimport { html } from 'lit-element';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null';\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\nimport { PICTOGRAM_PLACEMENT } from '../defs';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nconst tagGroupContent = html`\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type=\"purple\">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n`;\n\nexport const Default = ({ parameters }) => {\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = parameters?.props?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifNonNull(href || undefined)}\n    >\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n};\n\nconst pictogramPlacements = {\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\n};\n\nDefault.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => ({\n        image: boolean('Add image:', false, groupId),\n        eyebrow: textNullable('Eyebrow:', 'Industry', groupId),\n        heading: textNullable('Heading:', 'Aerospace and defence', groupId),\n        copy: textNullable('Body copy:', '', groupId),\n        alt: 'Image alt text',\n        defaultSrc: imgXlg4x3,\n        tagGroup: boolean('Add tags:', false, groupId),\n        href: 'https://example.com',\n        footer: textNullable('CTA:', 'Learn more', groupId),\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n          footer: 'Learn more',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Pictogram = ({ parameters }) => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = parameters?.props?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement=\"${pictogramPlacement}\"\n      href=${ifNonNull(href || undefined)}\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n    >\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <svg\n        slot=\"pictogram\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-autoid=\"dds--card__pictogram\"\n        aria-label=\"Pictogram description\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 32 32\"\n        role=\"img\"\n        class=\"bx--card__pictogram\"\n      >\n        <path\n          id=\"desktop_1_\"\n          d=\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\"\n        />\n      </svg>\n    </dds-card>\n  `;\n};\n\nPictogram.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      PictogramCard: ({ groupId }) => {\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, groupId);\n        const copy = textNullable(\n          'Body copy:',\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          groupId\n        );\n        return {\n          pictogramPlacement,\n          heading: textNullable('Heading:', 'Aerospace and defence', groupId),\n          copy,\n          href: 'https://example.com',\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', groupId),\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        PictogramCard: {\n          pictogramPlacement: 'top',\n          heading: 'Aerospace and defence',\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          href: 'https://example.com',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Static = ({ parameters }) => {\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = parameters?.props?.Card ?? {};\n  return html`\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href=\"https://www.example.com\">\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n};\n\nStatic.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => {\n        const image = boolean('Add image:', false, groupId);\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', groupId);\n        const heading = textNullable('Heading:', 'Free trial', groupId);\n        const copy = textNullable(\n          'Body copy:',\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\n            'All trial registrants are restricted to one free trial per computer per user.',\n          groupId\n        );\n        const tagGroup = boolean('Add tags:', false, groupId);\n        const cta = boolean('Add CTA:', false, groupId);\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', groupId) : '';\n        const outlinedCard = boolean('Outlined card:', true, groupId);\n        return {\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          image,\n          eyebrow,\n          heading,\n          copy,\n          tagGroup,\n          cta,\n          ctaCopy,\n          outlinedCard,\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          cta: false,\n          ctaCopy: 'Sign up for the trial',\n          outlinedCard: 'true',\n        },\n      },\n    },\n  },\n};\n\nexport const Logo = ({ parameters }) => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = parameters?.props?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\n      <dds-image-logo slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image-logo>\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      ${heading\n        ? html`\n            <dds-card-heading>${heading}</dds-card-heading>\n          `\n        : ``}\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n};\n\nLogo.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: ({ groupId }) => ({\n        alt: 'Image alt text',\n        defaultSrc: logoMicrosoft2x1,\n        tagGroup: boolean('Add tags', true, groupId),\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', groupId),\n        heading: textNullable('Card Heading (optional):', '', groupId),\n        copy: textNullable(\n          'Card body copy:',\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          groupId\n        ),\n        href: 'https://example.com',\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Microsoft',\n          heading: '',\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Components/Card',\n  decorators: [\n    story => html`\n      <div class=\"bx--grid\">\n        <div class=\"bx--row\">\n          <div class=\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\">\n            ${story()}\n          </div>\n        </div>\n      </div>\n    `,\n  ],\n  parameters: {\n    ...readme.parameters,\n    hasStoryPadding: true,\n  },\n};\n",locationsMap:{"components-card--default":{startLoc:{col:23,line:35},endLoc:{col:1,line:66},startBody:{col:23,line:35},endBody:{col:1,line:66}},"components-card--pictogram":{startLoc:{col:25,line:109},endLoc:{col:1,line:152},startBody:{col:25,line:109},endBody:{col:1,line:152}},"components-card--static":{startLoc:{col:22,line:190},endLoc:{col:1,line:224},startBody:{col:22,line:190},endBody:{col:1,line:224}},"components-card--logo":{startLoc:{col:20,line:277},endLoc:{col:1,line:306},startBody:{col:20,line:277},endBody:{col:1,line:306}}}}},README_stories.parameters),{},{hasStoryPadding:!0})}}}]);