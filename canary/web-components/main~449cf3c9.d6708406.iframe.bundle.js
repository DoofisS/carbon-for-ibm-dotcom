(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"./src/components/card/__stories__/card.stories.ts":function(n,e,t){"use strict";t.r(e),t.d(e,"Default",(function(){return wn})),t.d(e,"Pictogram",(function(){return Sn})),t.d(e,"Static",(function(){return Nn})),t.d(e,"Logo",(function(){return vn}));t("../../node_modules/core-js/modules/es.object.keys.js"),t("../../node_modules/core-js/modules/es.symbol.js"),t("../../node_modules/core-js/modules/es.array.filter.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),t("../../node_modules/core-js/modules/es.array.for-each.js"),t("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),t("../../node_modules/core-js/modules/es.object.define-properties.js"),t("../../node_modules/core-js/modules/es.object.define-property.js"),t("../../node_modules/core-js/modules/es.array.slice.js"),t("../../node_modules/core-js/modules/es.object.freeze.js"),t("./src/components/image/image.ts"),t("./src/components/tag-group/tag-group.ts"),t("../../node_modules/carbon-web-components/es/components/tag/tag.js"),t("./src/components/card/index.ts");var a=t("../../node_modules/@storybook/addon-knobs/dist/index.js"),o=t("../../node_modules/carbon-web-components/es/icons/arrow--right/20.js"),r=t("../../node_modules/lit-element/lit-element.js"),d=t("../../node_modules/carbon-web-components/es/globals/directives/if-non-null.js"),l=t("../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg"),c=t("../storybook-images/assets/logos/logo-microsoft--2x1.png"),s=t("./src/components/card/defs.ts"),i=(t("../../node_modules/core-js/modules/es.array.index-of.js"),t("../../node_modules/core-js/modules/es.object.assign.js"),t("../../node_modules/core-js/modules/es.function.bind.js"),t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),m=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),g=t("../../docs/contributing-license.md"),u=t("./src/globals/internal/storybook-cdn.ts"),b=["components"];function f(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function h(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?f(Object(t),!0).forEach((function(e){y(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function y(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function x(){return x=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},x.apply(this,arguments)}function C(n,e){if(null==n)return{};var t,a,o=function(n,e){if(null==n)return{};var t,a,o={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var w={};function $(n){var e=n.components,t=C(n,b);return Object(i.b)("wrapper",x({},w,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"card"},"Card"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"ðŸ’¡ Check our\n",Object(i.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/card",target:"_blank",rel:"nofollow noopener noreferrer"},"CodeSandbox"),"\nexample implementation.")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/card",target:"_blank",rel:"nofollow noopener noreferrer"},Object(i.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(i.b)("h2",{id:"getting-started"},"Getting started"),Object(i.b)("p",null,"Here's a quick example to get you started."),Object(i.b)("h3",{id:"js-via-import"},"JS (via import)"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/card/index.js';\n")),Object(i.b)(p.a,{markdown:"".concat(Object(u.c)({components:["card"]})),mdxType:"Description"}),Object(i.b)(p.a,{markdown:"".concat(Object(u.a)()),mdxType:"Description"}),Object(i.b)("h3",{id:"html"},"HTML"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'<dds-card href="https://example.com">\n  <dds-card-eyebrow>Eyebrow text</dds-card-eyebrow>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  <dds-card-footer slot="footer">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(i.b)("h2",{id:"card-with-pictogram"},"Card with pictogram"),Object(i.b)("p",null,"You can browse the ",Object(i.b)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/guidelines/pictograms/library/",target:"_blank",rel:"nofollow noopener noreferrer"},"Carbon Pictogram library")," to find a pictogram that fits your design.\nYou can also check out the repo ",Object(i.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon/tree/main/packages/pictograms",target:"_blank",rel:"nofollow noopener noreferrer"},"here")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'<dds-card pictogram-placement="${pictogramPlacement}" href="https://example.com">\n  <dds-card-eyebrow>Eyebrow text</dds-card-eyebrow>\n  <dds-card-heading>Lorem ipsum dolor</dds-card-heading>\n  <p>Copy to be shown on hover if the pictogram placement is bottom</p>\n  <svg\n    slot="pictogram"\n    focusable="false"\n    preserveAspectRatio="xMidYMid meet"\n    xmlns="http://www.w3.org/2000/svg"\n    stroke="currentColor"\n    data-autoid="dds--card__pictogram"\n    aria-label="Pictogram description"\n    width="48"\n    height="48"\n    viewBox="0 0 48 48"\n    role="img"\n    class="bx--card__pictogram"\n  >\n    <path\n      fill="none"\n      stroke-linejoin="round"\n      stroke-miterlimit="10"\n      stroke-width=".72"\n      d="M37,32 H11c-1.1,0-2-0.9-2-2V13c0-1.1,0.9-2,2-2h26c1.1,0,2,0.9,2,2v17C39,31.1,38.1,32,37,32z M17,37h14 M24,32v5 M9,27h30"\n    ></path>\n  </svg>\n</dds-card>\n')),Object(i.b)("h2",{id:"card---static"},"Card - static"),Object(i.b)("p",null,"When there is no URL being passed to the ",Object(i.b)("inlineCode",{parentName:"p"},"DDSCard"),"'s href attribute, the static variation will be rendered,\nwhere the card is no longer clickable and optional ",Object(i.b)("inlineCode",{parentName:"p"},"Tag")," elements can also be added."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'<dds-card>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  ${copy ? html`\n  <p>${copy}</p>\n  ` : ``}\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type="purple">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com" icon-placement="right">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(i.b)("h2",{id:"card---logo"},"Card - logo"),Object(i.b)("p",null,"If you need to use a Logo image for the Card component, use the Logo variant to ensure the Card\nproperly accomodates to the Logo image."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'<dds-card border logo href="https://example.com">\n  <dds-image-logo\n    slot="image"\n    alt="Image logo alt text"\n    default-src="https://fpoimg.com/320x160?text=2:1&bg_color=ee5396&text_color=161616"\n  ></dds-image-logo>\n  <dds-card-eyebrow>Microsoft</dds-card-eyebrow>\n  <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type="purple">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com"></dds-card-footer>\n</dds-card>\n')),Object(i.b)("h2",{id:"light-theme"},"Light theme"),Object(i.b)("p",null,"An optional light theme is available under ",Object(i.b)("inlineCode",{parentName:"p"},"color-scheme"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'<dds-card color-scheme="light"></dds-card>\n')),Object(i.b)("h2",{id:"card-with-image"},"Card with image"),Object(i.b)("p",null,"To add image to the ",Object(i.b)("inlineCode",{parentName:"p"},"dds-card"),", import the ",Object(i.b)("inlineCode",{parentName:"p"},"image")," component and place ",Object(i.b)("inlineCode",{parentName:"p"},"dds-image")," within ",Object(i.b)("inlineCode",{parentName:"p"},"dds-card"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/image/index.js';\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'<dds-card>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  <dds-image slot="image" alt="alt text" default-src="../image.png"></dds-image>\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type="purple">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com" icon-placement="right">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(i.b)("h2",{id:"props"},"Props"),Object(i.b)(p.c,{of:"dds-card",mdxType:"Props"}),Object(i.b)("h2",{id:"stable-selectors"},"Stable selectors"),Object(i.b)("p",null,"See ",Object(i.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components#stable-selectors-for-analytics-and-integratione2e-testing-in-web-components",target:"_blank",rel:"nofollow noopener noreferrer"},"our README")," to see how Web Components selector and ",Object(i.b)("inlineCode",{parentName:"p"},"data-autoid")," should be used."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Web Components selector"),Object(i.b)("th",{parentName:"tr",align:null},"Compatibility selector"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"<dds-card>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},'data-autoid="dds--card"')),Object(i.b)("td",{parentName:"tr",align:null},"Component")))),Object(i.b)(p.a,{markdown:g.a,mdxType:"Description"}))}$.isMDXComponent=!0;var S={includeStories:[]},N={};S.parameters=S.parameters||{},S.parameters.docs=h(h({},S.parameters.docs||{}),{},{page:function(){return Object(i.b)(m.a,{mdxStoryNameToKey:N,mdxComponentAnnotations:S},Object(i.b)($,null))}});var v,O,P,A,j,M,G,T,I,_,E,L,k,q,B,D,H,R,V,U,X,z=S,Y=t("./.storybook/knob-text-nullable.ts");function F(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function J(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}var W,K,Q,Z,nn,en,tn,an,on,rn,dn,ln,cn,sn,mn,pn,gn,un,bn,fn;function hn(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function yn(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?hn(Object(t),!0).forEach((function(e){xn(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):hn(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function xn(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var Cn=Object(r.d)(W||(W=v||(v=J(['\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type="purple">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n'])))),wn=function(n){var e,t=null!==(e=null==n?void 0:n.Card)&&void 0!==e?e:{},a=t.image,l=t.href,c=t.alt,s=t.defaultSrc,i=t.heading,m=t.eyebrow,p=t.tagGroup,g=t.copy,u=t.footer,b=t.cardStyles;return Object(r.d)(K||(K=O||(O=J(["\n    <dds-card\n      color-scheme=","\n      ?border=","\n      href=","\n    >\n      ","\n      <dds-card-eyebrow>","</dds-card-eyebrow>\n      <dds-card-heading>","</dds-card-heading>\n      ","\n      ","\n      <dds-card-footer>\n        ","","\n      </dds-card-footer>\n    </dds-card>\n  "]))),"Inverse card"===b?"inverse":"Outlined card"===b?"light":"","Outlined card"===b,Object(d.a)(l||void 0),a?Object(r.d)(Q||(Q=P||(P=J(['\n            <dds-image slot="image" alt="','" default-src="','"></dds-image>\n          ']))),Object(d.a)(c),Object(d.a)(s)):"",m,i,g?Object(r.d)(Z||(Z=A||(A=J(["\n            <p>","</p>\n          "]))),g):"",p?Object(r.d)(nn||(nn=j||(j=J(["\n            ","\n          "]))),Cn):"",u,Object(o.a)({slot:"icon"}))},$n=(F(M={},s.a.TOP,s.a.TOP),F(M,s.a.BOTTOM,s.a.BOTTOM),M);wn.story={parameters:yn(yn({},z.parameters),{},{knobs:{Card:function(){return{image:Object(a.boolean)("Add image:",!1,"Default"),eyebrow:Object(Y.a)("Eyebrow:","Industry","Default"),heading:Object(Y.a)("Heading:","Aerospace and defence","Default"),copy:Object(Y.a)("Body copy:","","Default"),alt:"Image alt text",defaultSrc:l.a,tagGroup:Object(a.boolean)("Add tags:",!1,"Default"),href:"https://example.com",footer:Object(Y.a)("CTA:","Learn more","Default"),cardStyles:Object(a.select)("Card style:",["Outlined card","Inverse card","none"],"none","Default")}}},propsSet:{default:{Card:{image:!1,eyebrow:"Industry",heading:"Aerospace and defence",copy:"",alt:"Image alt text",defaultSrc:l.a,tagGroup:!1,href:"https://example.com",footer:"Learn more",cardStyles:"none"}}}})};var Sn=function(n){var e,t=null!==(e=null==n?void 0:n.PictogramCard)&&void 0!==e?e:{},a=t.href,o=t.heading,l=t.copy,c=t.tagGroup,s=t.pictogramPlacement,i=t.cardStyles;return Object(r.d)(en||(en=G||(G=J(['\n    <dds-card\n      pictogram-placement="','"\n      href=',"\n      color-scheme=","\n      ?border=","\n    >\n      <dds-card-heading>","</dds-card-heading>\n      ","\n      ",'\n      <svg\n        slot="pictogram"\n        focusable="false"\n        preserveAspectRatio="xMidYMid meet"\n        xmlns="http://www.w3.org/2000/svg"\n        data-autoid="dds--card__pictogram"\n        aria-label="Pictogram description"\n        width="48"\n        height="48"\n        viewBox="0 0 32 32"\n        role="img"\n        class="bx--card__pictogram"\n      >\n        <path\n          id="desktop_1_"\n          d="M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z"\n        />\n      </svg>\n    </dds-card>\n  ']))),s,Object(d.a)(a||void 0),"Inverse card"===i?"inverse":"Outlined card"===i?"light":"","Outlined card"===i,o,l?Object(r.d)(tn||(tn=T||(T=J(["\n            <p>","</p>\n          "]))),l):"",c?Object(r.d)(an||(an=I||(I=J(["\n            ","\n          "]))),Cn):"")};Sn.story={parameters:yn(yn({},z.parameters),{},{knobs:{PictogramCard:function(){var n=Object(a.select)("Pictogram position:",$n,$n.top,"pictogram"),e=Object(Y.a)("Body copy:","Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.","pictogram");return{pictogramPlacement:n,heading:Object(Y.a)("Heading:","Aerospace and defence","pictogram"),copy:e,href:"https://example.com",cardStyles:Object(a.select)("Card style:",["Outlined card","Inverse card","none"],"none","pictogram")}}},propsSet:{default:{PictogramCard:{pictogramPlacement:"top",heading:"Aerospace and defence",copy:"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.",href:"https://example.com",cardStyles:"none"}}}})};var Nn=function(n){var e,t=null!==(e=null==n?void 0:n.Card)&&void 0!==e?e:{},a=t.image,l=t.alt,c=t.defaultSrc,s=t.outlinedCard,i=t.eyebrow,m=t.heading,p=t.copy,g=t.tagGroup,u=t.cta,b=t.ctaCopy;return Object(r.d)(on||(on=_||(_=J(["\n    <dds-card color-scheme="," ?border=",">\n      ","\n      ","\n      <dds-card-heading>","</dds-card-heading>\n      ","\n      ","\n      ","\n    </dds-card>\n  "]))),s?"light":"",s,a?Object(r.d)(rn||(rn=E||(E=J(['\n            <dds-image slot="image" alt="','" default-src="','"></dds-image>\n          ']))),Object(d.a)(l),Object(d.a)(c)):"",i?Object(r.d)(dn||(dn=L||(L=J(["\n            <dds-card-eyebrow>","</dds-card-eyebrow>\n          "]))),i):"",m,p?Object(r.d)(ln||(ln=k||(k=J(["\n            <p>","</p>\n          "]))),p):"",g?Object(r.d)(cn||(cn=q||(q=J(["\n            ","\n          "]))),Cn):"",u?Object(r.d)(sn||(sn=B||(B=J(['\n            <dds-card-footer href="https://www.example.com">\n              ',"","\n            </dds-card-footer>\n          "]))),b,Object(o.a)({slot:"icon"})):"")};Nn.story={parameters:yn(yn({},z.parameters),{},{knobs:{Card:function(){var n=Object(a.boolean)("Add image:",!1,"static"),e=Object(Y.a)("Eyebrow:","SPSS Statistics","static"),t=Object(Y.a)("Heading:","Free trial","static"),o=Object(Y.a)("Body copy:","Enjoy full SPSS Statistics capabilities including all add-ons. All trial registrants are restricted to one free trial per computer per user.","static"),r=Object(a.boolean)("Add tags:",!1,"static"),d=Object(a.boolean)("Add CTA:",!1,"static"),c=d?Object(Y.a)("CTA copy:","Sign up for the trial","static"):"",s=Object(a.boolean)("Outlined card:",!0,"static");return{alt:"Image alt text",defaultSrc:l.a,image:n,eyebrow:e,heading:t,copy:o,tagGroup:r,cta:d,ctaCopy:c,outlinedCard:s}}},propsSet:{default:{Card:{image:!1,eyebrow:"Industry",heading:"Aerospace and defence",copy:"",alt:"Image alt text",defaultSrc:l.a,tagGroup:!1,cta:!1,ctaCopy:"Sign up for the trial",outlinedCard:"true"}}}})};var vn=function(n){var e,t=null!==(e=null==n?void 0:n.Card)&&void 0!==e?e:{},a=t.alt,o=t.defaultSrc,l=t.eyebrow,c=t.heading,s=t.href,i=t.copy,m=t.tagGroup;return Object(r.d)(mn||(mn=D||(D=J(["\n    <dds-card border logo href=",'>\n      <dds-image-logo slot="image" alt="','" default-src="','"></dds-image-logo>\n      ',"\n      ","\n      ","\n      ","\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  "]))),Object(d.a)(s||void 0),Object(d.a)(a),Object(d.a)(o),l?Object(r.d)(pn||(pn=H||(H=J(["\n            <dds-card-eyebrow>","</dds-card-eyebrow>\n          "]))),l):"",c?Object(r.d)(gn||(gn=R||(R=J(["\n            <dds-card-heading>","</dds-card-heading>\n          "]))),c):"",i?Object(r.d)(un||(un=V||(V=J(["\n            <p>","</p>\n          "]))),i):"",m?Object(r.d)(bn||(bn=U||(U=J(["\n            ","\n          "]))),Cn):"")};vn.story={parameters:yn(yn({},z.parameters),{},{knobs:{Card:function(){return{alt:"Image alt text",defaultSrc:c.a,tagGroup:Object(a.boolean)("Add tags",!0,"logo"),eyebrow:Object(Y.a)("Card Eyebrow:","Microsoft","logo"),heading:Object(Y.a)("Card Heading (optional):","","logo"),copy:Object(Y.a)("Card body copy:","Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","logo"),href:"https://example.com"}}},propsSet:{default:{Card:{image:!1,eyebrow:"Microsoft",heading:"",copy:"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",alt:"Image alt text",defaultSrc:l.a,tagGroup:!1,href:"https://example.com"}}}})};e.default={title:"Components/Card",decorators:[function(n){return Object(r.d)(fn||(fn=X||(X=J(['\n      <div class="bx--grid">\n        <div class="bx--row">\n          <div class="bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter">\n            ',"\n          </div>\n        </div>\n      </div>\n    "]))),n())}],parameters:yn(yn(F({storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport '../../image/image';\\\\nimport '../../tag-group/tag-group';\\\\nimport 'carbon-web-components/es/components/tag/tag.js';\\\\nimport '../index';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\\\\nimport { html } from 'lit-element';\\\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\nconst tagGroupContent = html`\\\\n  <dds-tag-group>\\\\n    <bx-tag>\\\\n      Most popular\\\\n    </bx-tag>\\\\n    <bx-tag type=\\\\\\\"purple\\\\\\\">\\\\n      Enterprise\\\\n    </bx-tag>\\\\n  </dds-tag-group>\\\\n`;\\\\n\\\\nexport const Default = args => {\\\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\\\\n  \\\\n  return html`\\\\n    <dds-card\\\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}\\\\n      href=${ifNonNull(href || undefined)}\\\\n    >\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image slot=\\\\\\\"image\\\\\\\" alt=\\\\\\\"${ifNonNull(alt)}\\\\\\\" default-src=\\\\\\\"${ifNonNull(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n      <dds-card-footer>\\\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\\\n      </dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nconst pictogramPlacements = {\\\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\\\n};\\\\n\\\\nDefault.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        image: boolean('Add image:', false, 'Default'),\\\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\\\n        copy: textNullable('Body copy:', '', 'Default'),\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: imgXlg4x3,\\\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\\\n        href: 'https://example.com',\\\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\\\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'Default'),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n          footer: 'Learn more',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Pictogram = args => {\\\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\\\\n  return html`\\\\n    <dds-card\\\\n      pictogram-placement=\\\\\\\"${pictogramPlacement}\\\\\\\"\\\\n      href=${ifNonNull(href || undefined)}\\\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}\\\\n    >\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n      <svg\\\\n        slot=\\\\\\\"pictogram\\\\\\\"\\\\n        focusable=\\\\\\\"false\\\\\\\"\\\\n        preserveAspectRatio=\\\\\\\"xMidYMid meet\\\\\\\"\\\\n        xmlns=\\\\\\\"http://www.w3.org/2000/svg\\\\\\\"\\\\n        data-autoid=\\\\\\\"dds--card__pictogram\\\\\\\"\\\\n        aria-label=\\\\\\\"Pictogram description\\\\\\\"\\\\n        width=\\\\\\\"48\\\\\\\"\\\\n        height=\\\\\\\"48\\\\\\\"\\\\n        viewBox=\\\\\\\"0 0 32 32\\\\\\\"\\\\n        role=\\\\\\\"img\\\\\\\"\\\\n        class=\\\\\\\"bx--card__pictogram\\\\\\\"\\\\n      >\\\\n        <path\\\\n          id=\\\\\\\"desktop_1_\\\\\\\"\\\\n          d=\\\\\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\\\\\"\\\\n        />\\\\n      </svg>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nPictogram.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      PictogramCard: () => {\\\\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, 'pictogram');\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          'pictogram'\\\\n        );\\\\n        return {\\\\n          pictogramPlacement,\\\\n          heading: textNullable('Heading:', 'Aerospace and defence', 'pictogram'),\\\\n          copy,\\\\n          href: 'https://example.com',\\\\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'pictogram'),\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        PictogramCard: {\\\\n          pictogramPlacement: 'top',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          href: 'https://example.com',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Static = args => {\\\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image slot=\\\\\\\"image\\\\\\\" alt=\\\\\\\"${ifNonNull(alt)}\\\\\\\" default-src=\\\\\\\"${ifNonNull(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      ${eyebrow\\\\n        ? html`\\\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n          `\\\\n        : ``}\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n      ${cta\\\\n        ? html`\\\\n            <dds-card-footer href=\\\\\\\"https://www.example.com\\\\\\\">\\\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\\\n            </dds-card-footer>\\\\n          `\\\\n        : ``}\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nStatic.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => {\\\\n        const image = boolean('Add image:', false, 'static');\\\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\\\n            'All trial registrants are restricted to one free trial per computer per user.',\\\\n          'static'\\\\n        );\\\\n        const tagGroup = boolean('Add tags:', false, 'static');\\\\n        const cta = boolean('Add CTA:', false, 'static');\\\\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', 'static') : '';\\\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\\\n        return {\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          image,\\\\n          eyebrow,\\\\n          heading,\\\\n          copy,\\\\n          tagGroup,\\\\n          cta,\\\\n          ctaCopy,\\\\n          outlinedCard,\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          cta: false,\\\\n          ctaCopy: 'Sign up for the trial',\\\\n          outlinedCard: 'true',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Logo = args => {\\\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\\\n      <dds-image-logo slot=\\\\\\\"image\\\\\\\" alt=\\\\\\\"${ifNonNull(alt)}\\\\\\\" default-src=\\\\\\\"${ifNonNull(defaultSrc)}\\\\\\\"></dds-image-logo>\\\\n      ${eyebrow\\\\n        ? html`\\\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n          `\\\\n        : ``}\\\\n      ${heading\\\\n        ? html`\\\\n            <dds-card-heading>${heading}</dds-card-heading>\\\\n          `\\\\n        : ``}\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n\\\\n      <dds-card-footer></dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nLogo.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: logoMicrosoft2x1,\\\\n        tagGroup: boolean('Add tags', true, 'logo'),\\\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\\\n        copy: textNullable(\\\\n          'Card body copy:',\\\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          'logo'\\\\n        ),\\\\n        href: 'https://example.com',\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Microsoft',\\\\n          heading: '',\\\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Card',\\\\n  decorators: [\\\\n    story => html`\\\\n      <div class=\\\\\\\"bx--grid\\\\\\\">\\\\n        <div class=\\\\\\\"bx--row\\\\\\\">\\\\n          <div class=\\\\\\\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\\\\\\\">\\\\n            ${story()}\\\\n          </div>\\\\n        </div>\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    hasStoryPadding: true,\\\\n  },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":35},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":66},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":35},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":66}},\\\"Pictogram\\\":{\\\"startLoc\\\":{\\\"col\\\":25,\\\"line\\\":109},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":152},\\\"startBody\\\":{\\\"col\\\":25,\\\"line\\\":109},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":152}},\\\"Static\\\":{\\\"startLoc\\\":{\\\"col\\\":22,\\\"line\\\":190},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":224},\\\"startBody\\\":{\\\"col\\\":22,\\\"line\\\":190},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":224}},\\\"Logo\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":277},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":306},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":277},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":306}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport 'carbon-web-components/es/components/tag/tag.js';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\\nimport { html } from 'lit-element';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <bx-tag>\\n      Most popular\\n    </bx-tag>\\n    <bx-tag type=\\\"purple\\\">\\n      Enterprise\\n    </bx-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = args => {\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifNonNull(href || undefined)}\\n    >\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};;\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        image: boolean('Add image:', false, 'Default'),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\n        copy: textNullable('Body copy:', '', 'Default'),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'Default'),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = args => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifNonNull(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n    >\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"bx--card__pictogram\\\"\\n      >\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\"\\n        />\\n      </svg>\\n    </dds-card>\\n  `;\\n};;\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: () => {\\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, 'pictogram');\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          'pictogram'\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable('Heading:', 'Aerospace and defence', 'pictogram'),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'pictogram'),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = args => {\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\\n  return html`\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};;\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => {\\n        const image = boolean('Add image:', false, 'static');\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          'static'\\n        );\\n        const tagGroup = boolean('Add tags:', false, 'static');\\n        const cta = boolean('Add CTA:', false, 'static');\\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', 'static') : '';\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = args => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\n      <dds-image-logo slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      ${heading\\n        ? html`\\n            <dds-card-heading>${heading}</dds-card-heading>\\n          `\\n        : ``}\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, 'logo'),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          'logo'\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    story => html`\\n      <div class=\\\"bx--grid\\\">\\n        <div class=\\\"bx--row\\\">\\n          <div class=\\\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport '../../image/image';\\\\nimport '../../tag-group/tag-group';\\\\nimport 'carbon-web-components/es/components/tag/tag.js';\\\\nimport '../index';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\\\\nimport { html } from 'lit-element';\\\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\nconst tagGroupContent = html`\\\\n  <dds-tag-group>\\\\n    <bx-tag>\\\\n      Most popular\\\\n    </bx-tag>\\\\n    <bx-tag type=\\\\\\\"purple\\\\\\\">\\\\n      Enterprise\\\\n    </bx-tag>\\\\n  </dds-tag-group>\\\\n`;\\\\n\\\\nexport const Default = args => {\\\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\\\\n  \\\\n  return html`\\\\n    <dds-card\\\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}\\\\n      href=${ifNonNull(href || undefined)}\\\\n    >\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image slot=\\\\\\\"image\\\\\\\" alt=\\\\\\\"${ifNonNull(alt)}\\\\\\\" default-src=\\\\\\\"${ifNonNull(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n      <dds-card-footer>\\\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\\\n      </dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nconst pictogramPlacements = {\\\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\\\n};\\\\n\\\\nDefault.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        image: boolean('Add image:', false, 'Default'),\\\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\\\n        copy: textNullable('Body copy:', '', 'Default'),\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: imgXlg4x3,\\\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\\\n        href: 'https://example.com',\\\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\\\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'Default'),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n          footer: 'Learn more',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Pictogram = args => {\\\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\\\\n  return html`\\\\n    <dds-card\\\\n      pictogram-placement=\\\\\\\"${pictogramPlacement}\\\\\\\"\\\\n      href=${ifNonNull(href || undefined)}\\\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}\\\\n    >\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n      <svg\\\\n        slot=\\\\\\\"pictogram\\\\\\\"\\\\n        focusable=\\\\\\\"false\\\\\\\"\\\\n        preserveAspectRatio=\\\\\\\"xMidYMid meet\\\\\\\"\\\\n        xmlns=\\\\\\\"http://www.w3.org/2000/svg\\\\\\\"\\\\n        data-autoid=\\\\\\\"dds--card__pictogram\\\\\\\"\\\\n        aria-label=\\\\\\\"Pictogram description\\\\\\\"\\\\n        width=\\\\\\\"48\\\\\\\"\\\\n        height=\\\\\\\"48\\\\\\\"\\\\n        viewBox=\\\\\\\"0 0 32 32\\\\\\\"\\\\n        role=\\\\\\\"img\\\\\\\"\\\\n        class=\\\\\\\"bx--card__pictogram\\\\\\\"\\\\n      >\\\\n        <path\\\\n          id=\\\\\\\"desktop_1_\\\\\\\"\\\\n          d=\\\\\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\\\\\"\\\\n        />\\\\n      </svg>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nPictogram.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      PictogramCard: () => {\\\\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, 'pictogram');\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          'pictogram'\\\\n        );\\\\n        return {\\\\n          pictogramPlacement,\\\\n          heading: textNullable('Heading:', 'Aerospace and defence', 'pictogram'),\\\\n          copy,\\\\n          href: 'https://example.com',\\\\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'pictogram'),\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        PictogramCard: {\\\\n          pictogramPlacement: 'top',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          href: 'https://example.com',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Static = args => {\\\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image slot=\\\\\\\"image\\\\\\\" alt=\\\\\\\"${ifNonNull(alt)}\\\\\\\" default-src=\\\\\\\"${ifNonNull(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      ${eyebrow\\\\n        ? html`\\\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n          `\\\\n        : ``}\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n      ${cta\\\\n        ? html`\\\\n            <dds-card-footer href=\\\\\\\"https://www.example.com\\\\\\\">\\\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\\\n            </dds-card-footer>\\\\n          `\\\\n        : ``}\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nStatic.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => {\\\\n        const image = boolean('Add image:', false, 'static');\\\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\\\n            'All trial registrants are restricted to one free trial per computer per user.',\\\\n          'static'\\\\n        );\\\\n        const tagGroup = boolean('Add tags:', false, 'static');\\\\n        const cta = boolean('Add CTA:', false, 'static');\\\\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', 'static') : '';\\\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\\\n        return {\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          image,\\\\n          eyebrow,\\\\n          heading,\\\\n          copy,\\\\n          tagGroup,\\\\n          cta,\\\\n          ctaCopy,\\\\n          outlinedCard,\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          cta: false,\\\\n          ctaCopy: 'Sign up for the trial',\\\\n          outlinedCard: 'true',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Logo = args => {\\\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\\\n      <dds-image-logo slot=\\\\\\\"image\\\\\\\" alt=\\\\\\\"${ifNonNull(alt)}\\\\\\\" default-src=\\\\\\\"${ifNonNull(defaultSrc)}\\\\\\\"></dds-image-logo>\\\\n      ${eyebrow\\\\n        ? html`\\\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n          `\\\\n        : ``}\\\\n      ${heading\\\\n        ? html`\\\\n            <dds-card-heading>${heading}</dds-card-heading>\\\\n          `\\\\n        : ``}\\\\n      ${copy\\\\n        ? html`\\\\n            <p>${copy}</p>\\\\n          `\\\\n        : ``}\\\\n      ${tagGroup\\\\n        ? html`\\\\n            ${tagGroupContent}\\\\n          `\\\\n        : ``}\\\\n\\\\n      <dds-card-footer></dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nLogo.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: logoMicrosoft2x1,\\\\n        tagGroup: boolean('Add tags', true, 'logo'),\\\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\\\n        copy: textNullable(\\\\n          'Card body copy:',\\\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          'logo'\\\\n        ),\\\\n        href: 'https://example.com',\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Microsoft',\\\\n          heading: '',\\\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Card',\\\\n  decorators: [\\\\n    story => html`\\\\n      <div class=\\\\\\\"bx--grid\\\\\\\">\\\\n        <div class=\\\\\\\"bx--row\\\\\\\">\\\\n          <div class=\\\\\\\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\\\\\\\">\\\\n            ${story()}\\\\n          </div>\\\\n        </div>\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    hasStoryPadding: true,\\\\n  },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":35},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":66},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":35},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":66}},\\\"pictogram\\\":{\\\"startLoc\\\":{\\\"col\\\":25,\\\"line\\\":109},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":152},\\\"startBody\\\":{\\\"col\\\":25,\\\"line\\\":109},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":152}},\\\"static\\\":{\\\"startLoc\\\":{\\\"col\\\":22,\\\"line\\\":190},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":224},\\\"startBody\\\":{\\\"col\\\":22,\\\"line\\\":190},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":224}},\\\"logo\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":277},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":306},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":277},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":306}}}},\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":43},\"endLoc\":{\"col\":1,\"line\":74},\"startBody\":{\"col\":23,\"line\":43},\"endBody\":{\"col\":1,\"line\":74}},\"Pictogram\":{\"startLoc\":{\"col\":25,\"line\":117},\"endLoc\":{\"col\":1,\"line\":160},\"startBody\":{\"col\":25,\"line\":117},\"endBody\":{\"col\":1,\"line\":160}},\"Static\":{\"startLoc\":{\"col\":22,\"line\":198},\"endLoc\":{\"col\":1,\"line\":232},\"startBody\":{\"col\":22,\"line\":198},\"endBody\":{\"col\":1,\"line\":232}},\"Logo\":{\"startLoc\":{\"col\":20,\"line\":285},\"endLoc\":{\"col\":1,\"line\":314},\"startBody\":{\"col\":20,\"line\":285},\"endBody\":{\"col\":1,\"line\":314}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport 'carbon-web-components/es/components/tag/tag.js';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\\nimport { html } from 'lit-element';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <bx-tag>\\n      Most popular\\n    </bx-tag>\\n    <bx-tag type=\\\"purple\\\">\\n      Enterprise\\n    </bx-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = args => {\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifNonNull(href || undefined)}\\n    >\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        image: boolean('Add image:', false, 'Default'),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\n        copy: textNullable('Body copy:', '', 'Default'),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'Default'),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = args => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifNonNull(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n    >\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"bx--card__pictogram\\\"\\n      >\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\"\\n        />\\n      </svg>\\n    </dds-card>\\n  `;\\n};\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: () => {\\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, 'pictogram');\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          'pictogram'\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable('Heading:', 'Aerospace and defence', 'pictogram'),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'pictogram'),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = args => {\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\\n  return html`\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => {\\n        const image = boolean('Add image:', false, 'static');\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          'static'\\n        );\\n        const tagGroup = boolean('Add tags:', false, 'static');\\n        const cta = boolean('Add CTA:', false, 'static');\\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', 'static') : '';\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = args => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\n      <dds-image-logo slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      ${heading\\n        ? html`\\n            <dds-card-heading>${heading}</dds-card-heading>\\n          `\\n        : ``}\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, 'logo'),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          'logo'\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    story => html`\\n      <div class=\\\"bx--grid\\\">\\n        <div class=\\\"bx--row\\\">\\n          <div class=\\\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":35},\"endLoc\":{\"col\":1,\"line\":66},\"startBody\":{\"col\":23,\"line\":35},\"endBody\":{\"col\":1,\"line\":66}},\"Pictogram\":{\"startLoc\":{\"col\":25,\"line\":109},\"endLoc\":{\"col\":1,\"line\":152},\"startBody\":{\"col\":25,\"line\":109},\"endBody\":{\"col\":1,\"line\":152}},\"Static\":{\"startLoc\":{\"col\":22,\"line\":190},\"endLoc\":{\"col\":1,\"line\":224},\"startBody\":{\"col\":22,\"line\":190},\"endBody\":{\"col\":1,\"line\":224}},\"Logo\":{\"startLoc\":{\"col\":20,\"line\":277},\"endLoc\":{\"col\":1,\"line\":306},\"startBody\":{\"col\":20,\"line\":277},\"endBody\":{\"col\":1,\"line\":306}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport '../../image/image';\nimport '../../tag-group/tag-group';\nimport 'carbon-web-components/es/components/tag/tag.js';\nimport '../index';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\nimport { html } from 'lit-element';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\nimport { PICTOGRAM_PLACEMENT } from '../defs';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nconst tagGroupContent = html`\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type=\"purple\">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n`;\n\nexport const Default = args => {\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifNonNull(href || undefined)}\n    >\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n};;;\n\nconst pictogramPlacements = {\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\n};\n\nDefault.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        image: boolean('Add image:', false, 'Default'),\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\n        copy: textNullable('Body copy:', '', 'Default'),\n        alt: 'Image alt text',\n        defaultSrc: imgXlg4x3,\n        tagGroup: boolean('Add tags:', false, 'Default'),\n        href: 'https://example.com',\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'Default'),\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n          footer: 'Learn more',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Pictogram = args => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement=\"${pictogramPlacement}\"\n      href=${ifNonNull(href || undefined)}\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n    >\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <svg\n        slot=\"pictogram\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-autoid=\"dds--card__pictogram\"\n        aria-label=\"Pictogram description\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 32 32\"\n        role=\"img\"\n        class=\"bx--card__pictogram\"\n      >\n        <path\n          id=\"desktop_1_\"\n          d=\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\"\n        />\n      </svg>\n    </dds-card>\n  `;\n};;;\n\nPictogram.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      PictogramCard: () => {\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, 'pictogram');\n        const copy = textNullable(\n          'Body copy:',\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          'pictogram'\n        );\n        return {\n          pictogramPlacement,\n          heading: textNullable('Heading:', 'Aerospace and defence', 'pictogram'),\n          copy,\n          href: 'https://example.com',\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'pictogram'),\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        PictogramCard: {\n          pictogramPlacement: 'top',\n          heading: 'Aerospace and defence',\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          href: 'https://example.com',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Static = args => {\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\n  return html`\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href=\"https://www.example.com\">\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n};;;\n\nStatic.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => {\n        const image = boolean('Add image:', false, 'static');\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\n        const heading = textNullable('Heading:', 'Free trial', 'static');\n        const copy = textNullable(\n          'Body copy:',\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\n            'All trial registrants are restricted to one free trial per computer per user.',\n          'static'\n        );\n        const tagGroup = boolean('Add tags:', false, 'static');\n        const cta = boolean('Add CTA:', false, 'static');\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', 'static') : '';\n        const outlinedCard = boolean('Outlined card:', true, 'static');\n        return {\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          image,\n          eyebrow,\n          heading,\n          copy,\n          tagGroup,\n          cta,\n          ctaCopy,\n          outlinedCard,\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          cta: false,\n          ctaCopy: 'Sign up for the trial',\n          outlinedCard: 'true',\n        },\n      },\n    },\n  },\n};\n\nexport const Logo = args => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\n      <dds-image-logo slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image-logo>\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      ${heading\n        ? html`\n            <dds-card-heading>${heading}</dds-card-heading>\n          `\n        : ``}\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n};\n\nLogo.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        alt: 'Image alt text',\n        defaultSrc: logoMicrosoft2x1,\n        tagGroup: boolean('Add tags', true, 'logo'),\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\n        copy: textNullable(\n          'Card body copy:',\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          'logo'\n        ),\n        href: 'https://example.com',\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Microsoft',\n          heading: '',\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Components/Card',\n  decorators: [\n    story => html`\n      <div class=\"bx--grid\">\n        <div class=\"bx--row\">\n          <div class=\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\">\n            ${story()}\n          </div>\n        </div>\n      </div>\n    `,\n  ],\n  parameters: {\"storySource\":{\"source\":\"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport 'carbon-web-components/es/components/tag/tag.js';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\\nimport { html } from 'lit-element';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <bx-tag>\\n      Most popular\\n    </bx-tag>\\n    <bx-tag type=\\\"purple\\\">\\n      Enterprise\\n    </bx-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = args => {\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifNonNull(href || undefined)}\\n    >\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        image: boolean('Add image:', false, 'Default'),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\n        copy: textNullable('Body copy:', '', 'Default'),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'Default'),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = args => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifNonNull(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n    >\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"bx--card__pictogram\\\"\\n      >\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\"\\n        />\\n      </svg>\\n    </dds-card>\\n  `;\\n};\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: () => {\\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, 'pictogram');\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          'pictogram'\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable('Heading:', 'Aerospace and defence', 'pictogram'),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'pictogram'),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = args => {\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\\n  return html`\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => {\\n        const image = boolean('Add image:', false, 'static');\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          'static'\\n        );\\n        const tagGroup = boolean('Add tags:', false, 'static');\\n        const cta = boolean('Add CTA:', false, 'static');\\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', 'static') : '';\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = args => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\n      <dds-image-logo slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      ${heading\\n        ? html`\\n            <dds-card-heading>${heading}</dds-card-heading>\\n          `\\n        : ``}\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, 'logo'),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          'logo'\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    story => html`\\n      <div class=\\\"bx--grid\\\">\\n        <div class=\\\"bx--row\\\">\\n          <div class=\\\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\",\"locationsMap\":{\"default\":{\"startLoc\":{\"col\":23,\"line\":35},\"endLoc\":{\"col\":1,\"line\":66},\"startBody\":{\"col\":23,\"line\":35},\"endBody\":{\"col\":1,\"line\":66}},\"pictogram\":{\"startLoc\":{\"col\":25,\"line\":109},\"endLoc\":{\"col\":1,\"line\":152},\"startBody\":{\"col\":25,\"line\":109},\"endBody\":{\"col\":1,\"line\":152}},\"static\":{\"startLoc\":{\"col\":22,\"line\":190},\"endLoc\":{\"col\":1,\"line\":224},\"startBody\":{\"col\":22,\"line\":190},\"endBody\":{\"col\":1,\"line\":224}},\"logo\":{\"startLoc\":{\"col\":20,\"line\":277},\"endLoc\":{\"col\":1,\"line\":306},\"startBody\":{\"col\":20,\"line\":277},\"endBody\":{\"col\":1,\"line\":306}}}},\n    ...readme.parameters,\n    hasStoryPadding: true,\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: \"args => {\\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifNonNull(href || undefined)}\\n    >\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n}\" }, ...Default.parameters };\nPictogram.parameters = { storySource: { source: \"args => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifNonNull(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n    >\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"bx--card__pictogram\\\"\\n      >\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\"\\n        />\\n      </svg>\\n    </dds-card>\\n  `;\\n}\" }, ...Pictogram.parameters };\nStatic.parameters = { storySource: { source: \"args => {\\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\\n  return html`\\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n}\" }, ...Static.parameters };\nLogo.parameters = { storySource: { source: \"args => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\\n      <dds-image-logo slot=\\\"image\\\" alt=\\\"${ifNonNull(alt)}\\\" default-src=\\\"${ifNonNull(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow\\n        ? html`\\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n          `\\n        : ``}\\n      ${heading\\n        ? html`\\n            <dds-card-heading>${heading}</dds-card-heading>\\n          `\\n        : ``}\\n      ${copy\\n        ? html`\\n            <p>${copy}</p>\\n          `\\n        : ``}\\n      ${tagGroup\\n        ? html`\\n            ${tagGroupContent}\\n          `\\n        : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n}\" }, ...Logo.parameters };",locationsMap:{default:{startLoc:{col:23,line:51},endLoc:{col:1,line:82},startBody:{col:23,line:51},endBody:{col:1,line:82}},pictogram:{startLoc:{col:25,line:125},endLoc:{col:1,line:168},startBody:{col:25,line:125},endBody:{col:1,line:168}},static:{startLoc:{col:22,line:206},endLoc:{col:1,line:240},startBody:{col:22,line:206},endBody:{col:1,line:240}},logo:{startLoc:{col:20,line:293},endLoc:{col:1,line:322},startBody:{col:20,line:293},endBody:{col:1,line:322}}}}},"storySource",{source:"/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport '../../image/image';\nimport '../../tag-group/tag-group';\nimport 'carbon-web-components/es/components/tag/tag.js';\nimport '../index';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport ArrowRight20 from 'carbon-web-components/es/icons/arrow--right/20';\nimport { html } from 'lit-element';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\nimport { PICTOGRAM_PLACEMENT } from '../defs';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nconst tagGroupContent = html`\n  <dds-tag-group>\n    <bx-tag>\n      Most popular\n    </bx-tag>\n    <bx-tag type=\"purple\">\n      Enterprise\n    </bx-tag>\n  </dds-tag-group>\n`;\n\nexport const Default = args => {\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifNonNull(href || undefined)}\n    >\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n};\n\nconst pictogramPlacements = {\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\n};\n\nDefault.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        image: boolean('Add image:', false, 'Default'),\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\n        copy: textNullable('Body copy:', '', 'Default'),\n        alt: 'Image alt text',\n        defaultSrc: imgXlg4x3,\n        tagGroup: boolean('Add tags:', false, 'Default'),\n        href: 'https://example.com',\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\n        cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'Default'),\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n          footer: 'Learn more',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Pictogram = args => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement=\"${pictogramPlacement}\"\n      href=${ifNonNull(href || undefined)}\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n    >\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <svg\n        slot=\"pictogram\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-autoid=\"dds--card__pictogram\"\n        aria-label=\"Pictogram description\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 32 32\"\n        role=\"img\"\n        class=\"bx--card__pictogram\"\n      >\n        <path\n          id=\"desktop_1_\"\n          d=\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\"\n        />\n      </svg>\n    </dds-card>\n  `;\n};\n\nPictogram.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      PictogramCard: () => {\n        const pictogramPlacement = select('Pictogram position:', pictogramPlacements, pictogramPlacements.top, 'pictogram');\n        const copy = textNullable(\n          'Body copy:',\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          'pictogram'\n        );\n        return {\n          pictogramPlacement,\n          heading: textNullable('Heading:', 'Aerospace and defence', 'pictogram'),\n          copy,\n          href: 'https://example.com',\n          cardStyles: select('Card style:', ['Outlined card', 'Inverse card', 'none'], 'none', 'pictogram'),\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        PictogramCard: {\n          pictogramPlacement: 'top',\n          heading: 'Aerospace and defence',\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          href: 'https://example.com',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Static = args => {\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\n  return html`\n    <dds-card color-scheme=${outlinedCard ? 'light' : ''} ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href=\"https://www.example.com\">\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n};\n\nStatic.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => {\n        const image = boolean('Add image:', false, 'static');\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\n        const heading = textNullable('Heading:', 'Free trial', 'static');\n        const copy = textNullable(\n          'Body copy:',\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\n            'All trial registrants are restricted to one free trial per computer per user.',\n          'static'\n        );\n        const tagGroup = boolean('Add tags:', false, 'static');\n        const cta = boolean('Add CTA:', false, 'static');\n        const ctaCopy = cta ? textNullable('CTA copy:', 'Sign up for the trial', 'static') : '';\n        const outlinedCard = boolean('Outlined card:', true, 'static');\n        return {\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          image,\n          eyebrow,\n          heading,\n          copy,\n          tagGroup,\n          cta,\n          ctaCopy,\n          outlinedCard,\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          cta: false,\n          ctaCopy: 'Sign up for the trial',\n          outlinedCard: 'true',\n        },\n      },\n    },\n  },\n};\n\nexport const Logo = args => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\n      <dds-image-logo slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image-logo>\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      ${heading\n        ? html`\n            <dds-card-heading>${heading}</dds-card-heading>\n          `\n        : ``}\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n};\n\nLogo.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        alt: 'Image alt text',\n        defaultSrc: logoMicrosoft2x1,\n        tagGroup: boolean('Add tags', true, 'logo'),\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\n        copy: textNullable(\n          'Card body copy:',\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          'logo'\n        ),\n        href: 'https://example.com',\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Microsoft',\n          heading: '',\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Components/Card',\n  decorators: [\n    story => html`\n      <div class=\"bx--grid\">\n        <div class=\"bx--row\">\n          <div class=\"bx--col-sm-4 bx--col-md-3 bx--col-lg-6 bx--col-xlg-4 bx--no-gutter\">\n            ${story()}\n          </div>\n        </div>\n      </div>\n    `,\n  ],\n  parameters: {\n    ...readme.parameters,\n    hasStoryPadding: true,\n  },\n};\n",locationsMap:{default:{startLoc:{col:23,line:35},endLoc:{col:1,line:66},startBody:{col:23,line:35},endBody:{col:1,line:66}},pictogram:{startLoc:{col:25,line:109},endLoc:{col:1,line:152},startBody:{col:25,line:109},endBody:{col:1,line:152}},static:{startLoc:{col:22,line:190},endLoc:{col:1,line:224},startBody:{col:22,line:190},endBody:{col:1,line:224}},logo:{startLoc:{col:20,line:277},endLoc:{col:1,line:306},startBody:{col:20,line:277},endBody:{col:1,line:306}}}}),z.parameters),{},{hasStoryPadding:!0})};wn.parameters=yn({storySource:{source:"args => {\n  const { image, href, alt, defaultSrc, heading, eyebrow, tagGroup, copy, footer, cardStyles } = args?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card' ? 'inverse' : cardStyles === 'Outlined card' ? 'light' : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifNonNull(href || undefined)}\n    >\n      ${image\n        ? html`\n            <dds-image slot=\"image\" alt=\"${ifNonNull(alt)}\" default-src=\"${ifNonNull(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n}"}},wn.parameters),Sn.parameters=yn({storySource:{source:'args => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } = args?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement="${pictogramPlacement}"\n      href=${ifNonNull(href || undefined)}\n      color-scheme=${cardStyles === \'Inverse card\' ? \'inverse\' : cardStyles === \'Outlined card\' ? \'light\' : \'\'}\n      ?border=${cardStyles === \'Outlined card\'}\n    >\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      <svg\n        slot="pictogram"\n        focusable="false"\n        preserveAspectRatio="xMidYMid meet"\n        xmlns="http://www.w3.org/2000/svg"\n        data-autoid="dds--card__pictogram"\n        aria-label="Pictogram description"\n        width="48"\n        height="48"\n        viewBox="0 0 32 32"\n        role="img"\n        class="bx--card__pictogram"\n      >\n        <path\n          id="desktop_1_"\n          d="M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z"\n        />\n      </svg>\n    </dds-card>\n  `;\n}'}},Sn.parameters),Nn.parameters=yn({storySource:{source:'args => {\n  const { image, alt, defaultSrc, outlinedCard, eyebrow, heading, copy, tagGroup, cta, ctaCopy } = args?.Card ?? {};\n  return html`\n    <dds-card color-scheme=${outlinedCard ? \'light\' : \'\'} ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image slot="image" alt="${ifNonNull(alt)}" default-src="${ifNonNull(defaultSrc)}"></dds-image>\n          `\n        : ``}\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href="https://www.example.com">\n              ${ctaCopy}${ArrowRight20({ slot: \'icon\' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n}'}},Nn.parameters),vn.parameters=yn({storySource:{source:'args => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } = args?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifNonNull(href || undefined)}>\n      <dds-image-logo slot="image" alt="${ifNonNull(alt)}" default-src="${ifNonNull(defaultSrc)}"></dds-image-logo>\n      ${eyebrow\n        ? html`\n            <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n          `\n        : ``}\n      ${heading\n        ? html`\n            <dds-card-heading>${heading}</dds-card-heading>\n          `\n        : ``}\n      ${copy\n        ? html`\n            <p>${copy}</p>\n          `\n        : ``}\n      ${tagGroup\n        ? html`\n            ${tagGroupContent}\n          `\n        : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n}'}},vn.parameters)}}]);