(window.webpackJsonp=window.webpackJsonp||[]).push([[475],{"../../node_modules/@storybook/addon-docs/blocks.js":function(e,n,t){"use strict";var o=t("../../node_modules/util-deprecate/browser.js"),r=t.n(o),s=t("../../node_modules/ts-dedent/esm/index.js"),a=t("../../node_modules/@storybook/addon-docs/dist/esm/blocks/index.js");t.d(n,"a",(function(){return a.Description})),t.d(n,"b",(function(){return a.Meta})),t.d(n,"c",(function(){return a.Props}));r()((()=>{}),s.a`
    Importing from '@storybook/addon-docs/blocks' is deprecated, import directly from '@storybook/addon-docs' instead:
    
    https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-scoped-blocks-imports
`)()},"../../node_modules/@storybook/addon-docs/dist/esm/index.js":function(e,n,t){"use strict";var o=t("../../node_modules/@storybook/addon-docs/dist/esm/blocks/index.js");t.d(n,"a",(function(){return o.AddContext}))},"../../node_modules/carbon-components/es/globals/js/settings.js":function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var o={prefix:"bx",selectorTabbable:"\n    a[href], area[href], input:not([disabled]):not([tabindex='-1']),\n    button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),\n    textarea:not([disabled]):not([tabindex='-1']),\n    iframe, object, embed, *[tabindex]:not([tabindex='-1']), *[contenteditable=true]\n  ",selectorFocusable:"\n    a[href], area[href], input:not([disabled]),\n    button:not([disabled]),select:not([disabled]),\n    textarea:not([disabled]),\n    iframe, object, embed, *[tabindex], *[contenteditable=true]\n  "}},"../../node_modules/core-js/internals/date-to-primitive.js":function(e,n,t){"use strict";var o=t("../../node_modules/core-js/internals/an-object.js"),r=t("../../node_modules/core-js/internals/ordinary-to-primitive.js"),s=TypeError;e.exports=function(e){if(o(this),"string"===e||"default"===e)e="string";else if("number"!==e)throw s("Incorrect hint");return r(this,e)}},"../../node_modules/core-js/modules/es.date.to-primitive.js":function(e,n,t){var o=t("../../node_modules/core-js/internals/has-own-property.js"),r=t("../../node_modules/core-js/internals/define-built-in.js"),s=t("../../node_modules/core-js/internals/date-to-primitive.js"),a=t("../../node_modules/core-js/internals/well-known-symbol.js")("toPrimitive"),i=Date.prototype;o(i,a)||r(i,a,s)},"./.storybook/knob-text-nullable.ts":function(e,n,t){"use strict";var o=t("../../node_modules/@storybook/addon-knobs/dist/index.js");n.a=function(e,n,t){var r=Object(o.text)(e,n,t);return""===r?null:r}},"./docs/markdown-contents.md":function(e,n,t){"use strict";n.a='\x3c!-- START doctoc generated TOC please keep comment here to allow auto update --\x3e\n\x3c!-- DON\'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --\x3e\n## Table of contents\n\n- [Markdown contents](#markdown-contents)\n  - [Using `<dds-content-*-copy>`](#using-dds-content--copy)\n  - [Rendering markdown on server](#rendering-markdown-on-server)\n  - [Use raw HTML](#use-raw-html)\n\n\x3c!-- END doctoc generated TOC please keep comment here to allow auto update --\x3e\n\n## Markdown contents\n\nIn most cases, `<dds-content-*>` is used with its "copy" content. There are several ways to specify the copy content.\n\n### Using `<dds-content-*-copy>`\n\n`<dds-content-*-copy>` are Web Components that automatically renders the given markdown content to HTML. It takes either `content` property (_not_ attribute) or child text node as the markdown content. The markdown content will be converted to HTML with sanitization.\n\nGiven the nature of child text node, some extra caution is required to use child text node as the markdown content:\n\n- After-initialization change of markdown content via child text node is not supported.\n- Don\'t put any extra whitespace, e.g. line feeds, between the start/end tag and the markdown content.\n- HTML-escape the content as needed.\n\n### Rendering markdown on server\n\nWhile `<dds-content-*-copy>` provides an easy way to use markdown for `<dds-content-*>`, it requires markdown parser and HTML sanitizer has to be downloaded and run in browser. To reduce the cost of downloading and running, especially if the target network and device environment is limiting, rendering markdown on server is often helpful.\n\nFor example, a Handlebars helper that works with the Carbon for IBM.com [`markdownToHtml` utility](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/v1.12.0/packages/utilities/src/utilities/markdownToHtml/markdownToHtml.js) can be defined to convert generated HTML from markdown content:\n\n```javascript\nconst Handlebars = require(\'handlebars\');\nconst { default: markdownToHtml } = require(\'@carbon/ibmdotcom-utilities/lib/utilities/markdownToHtml/markdownToHtml\');\n\n...\n\nHandlebars.registerHelper(\'markdown\', options => {\n  return new Handlebars.SafeString(markdownToHtml(options.fn(this)));\n});\n```\n\nSuch Handlebars helper can be used like:\n\n```handlebars\n<div class="bx--content-item__copy">\n  {{{{markdown}}}}\nLorem ipsum *dolor* sit amet, consectetur adipiscing elit. Aenean et ultricies est.\nMauris iaculis eget dolor nec hendrerit. Phasellus at elit sollicitudin, sodales\nnulla quis, *consequat* libero. Here are\nsome common categories:\n\n- [list item](https://www.ibm.com)\n  - list item 1a\n1. list item 2\n  1. list item 2a\n  {{{{/markdown}}}}\n</div>\n```\n\n> ðŸ’¡ Make sure loading the Sass code for the corresponding CSS class for the "copy" content. For example, one for `bx--content-item__copy` class is defined in `@carbon/ibmdotcom-styles/scss/internal/content-item/content-item`.\n\n> ðŸ’¡ Check our\n> [CodeSandbox](https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/usage/markdown-handlebars)\n> example implementation.\n\n[![Edit @carbon/ibmdotcom-web-components](https://codesandbox.io/static/img/play-codesandbox.svg)](https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/usage/markdown-handlebars)\n\n### Use raw HTML\n\nAnother way to define the "copy" content is using raw HTML:\n\n```html\n<div class="bx--content-item__copy">\n  <p>\n    Lorem ipsum <em>dolor</em> sit amet, consectetur adipiscing elit. Aenean et ultricies est. Mauris iaculis eget dolor nec\n    hendrerit. Phasellus at elit sollicitudin, sodales nulla quis, <em>consequat</em> libero. Here are some common categories:\n  </p>\n  <ul class="bx--list--unordered">\n    <li class="bx--list__item">\n      <a href="https://www.ibm.com" class="bx--link">list item</a>\n      <ol class="bx--list--ordered">\n        <li class="bx--list__item">list item 1a</li>\n      </ol>\n    </li>\n  </ul>\n  <ol class="bx--list--ordered">\n    <li class="bx--list__item">\n      list item 2\n      <ul class="bx--list--unordered">\n        <li class="bx--list__item">list item 2a</li>\n      </ul>\n    </li>\n  </ol>\n</div>\n```\n\n> ðŸ’¡ Make sure loading the Sass code for the corresponding CSS class for the "copy" content. For example, one for `bx--content-item__copy` class is defined in `@carbon/ibmdotcom-styles/scss/internal/content-item/content-item`.\n'},"./src/components/tag-link/__stories__/tag-link.stories.ts":function(e,n,t){"use strict";t.r(n),t.d(n,"Default",(function(){return M}));t("../../node_modules/core-js/modules/es.object.keys.js"),t("../../node_modules/core-js/modules/es.symbol.js"),t("../../node_modules/core-js/modules/es.array.filter.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),t("../../node_modules/core-js/modules/es.array.for-each.js"),t("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),t("../../node_modules/core-js/modules/es.object.define-properties.js"),t("../../node_modules/core-js/modules/es.object.define-property.js"),t("../../node_modules/core-js/modules/es.array.slice.js"),t("../../node_modules/core-js/modules/es.object.freeze.js");var o=t("../../node_modules/lit-element/lit-element.js"),r=t("../../node_modules/carbon-web-components/es/globals/directives/if-non-null.js"),s=(t("../../node_modules/core-js/modules/es.array.index-of.js"),t("../../node_modules/core-js/modules/es.object.assign.js"),t("../../node_modules/core-js/modules/es.function.bind.js"),t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),a=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),i=t("../../node_modules/@storybook/addon-docs/blocks.js"),l=t("../../docs/contributing-license.md"),c=(t("./docs/markdown-contents.md"),t("./src/globals/internal/storybook-cdn.ts")),d=["components"];function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){u(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function b(){return b=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},b.apply(this,arguments)}function f(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var h={};function g(e){var n=e.components,t=f(e,d);return Object(s.b)("wrapper",b({},h,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",null,"Tag Link"),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"ðŸ’¡ Check our\n",Object(s.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/tag-link"},"CodeSandbox"),"\nexample implementation.")),Object(s.b)("p",null,Object(s.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/tag-link"},Object(s.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(s.b)("h2",null,"Getting started"),Object(s.b)("p",null,"Here's a quick example to get you started."),Object(s.b)("h3",null,"JS (via import)"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/tag-link/index.js';\n")),Object(s.b)(i.a,{markdown:"".concat(Object(c.c)({components:["tag-link"]})),mdxType:"Description"}),Object(s.b)(i.a,{markdown:"".concat(Object(c.a)()),mdxType:"Description"}),Object(s.b)("h3",null,"HTML"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-html"},'<dds-tag-link href="https://example.com">\n  Brand: Watson\n</dds-tag-link>\n')),Object(s.b)("h2",null,"Props"),Object(s.b)(i.c,{of:"dds-tag-link",mdxType:"Props"}),Object(s.b)("h2",null,"Stable selectors"),Object(s.b)("p",null,"See ",Object(s.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components#stable-selectors-for-analytics-and-integratione2e-testing-in-web-components"},"our README")," to see how Web Components selector and ",Object(s.b)("inlineCode",{parentName:"p"},"data-autoid")," should be used."),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},"Web Components selector"),Object(s.b)("th",{parentName:"tr",align:null},"Compatibility selector"),Object(s.b)("th",{parentName:"tr",align:null},"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("inlineCode",{parentName:"td"},"<dds-tag-link>")),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("inlineCode",{parentName:"td"},'data-autoid="dds--tag-link"')),Object(s.b)("td",{parentName:"tr",align:null},"Component")))),Object(s.b)(i.a,{markdown:l.a,mdxType:"Description"}))}g.isMDXComponent=!0;var y={includeStories:[]},k={};y.parameters=y.parameters||{},y.parameters.docs=p(p({},y.parameters.docs||{}),{},{page:function(){return Object(s.b)(a.a,{mdxStoryNameToKey:k,mdxComponentAnnotations:y},Object(s.b)(g,null))}});var j,x,O=y,w=(t("./src/components/tag-link/tag-link.ts"),t("./.storybook/knob-text-nullable.ts"));function T(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var v,N;function _(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function L(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?_(Object(t),!0).forEach((function(n){S(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):_(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function S(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var C,E,D,M=function(e){var n,t=null!==(n=null==e?void 0:e.TagLink)&&void 0!==n?n:{},s=t.copy,a=t.href;return Object(o.d)(v||(v=j||(j=T(["\n    <dds-tag-link href=",">\n      ","\n    </dds-tag-link>\n  "]))),Object(r.a)(a||void 0),s)};n.default={title:"Components/Tag link",decorators:[function(e){return Object(o.d)(N||(N=x||(x=T(['\n      <div class="bx--grid">\n        ',"\n      </div>\n    "]))),e())}],parameters:L(L((C={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\\\nimport readme from \'./README.stories.mdx\';\\\\nimport \'../tag-link\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\n\\\\nexport const Default = args => {\\\\n  const { copy, href } = args?.TagLink ?? {};\\\\n  return html`\\\\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\\\\n      ${copy}\\\\n    </dds-tag-link>\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Tag link\',\\\\n  decorators: [\\\\n    story => html`\\\\n      <div class=\\\\\\"bx--grid\\\\\\">\\\\n        ${story()}\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    hasStoryPadding: true,\\\\n    knobs: {\\\\n      TagLink: () => ({\\\\n        copy: textNullable(\'Tag Link (copy)\', \'Brand: Watson\'),\\\\n        href: textNullable(\'Tag Link (href)\', `https://example.com`),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        TagLink: {\\\\n          copy: \'Brand: Watson\',\\\\n          href: \'https://example.com\',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":16},\\"endLoc\\":{\\"col\\":1,\\"line\\":23},\\"startBody\\":{\\"col\\":23,\\"line\\":16},\\"endBody\\":{\\"col\\":1,\\"line\\":23}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\nimport readme from \'./README.stories.mdx\';\\nimport \'../tag-link\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\n\\nexport const Default = args => {\\n  const { copy, href } = args?.TagLink ?? {};\\n  return html`\\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\\n      ${copy}\\n    </dds-tag-link>\\n  `;\\n};\\n\\nexport default {\\n  title: \'Components/Tag link\',\\n  decorators: [\\n    story => html`\\n      <div class=\\"bx--grid\\">\\n        ${story()}\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\"storySource\\":{\\"source\\":\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\\\nimport readme from \'./README.stories.mdx\';\\\\nimport \'../tag-link\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\n\\\\nexport const Default = args => {\\\\n  const { copy, href } = args?.TagLink ?? {};\\\\n  return html`\\\\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\\\\n      ${copy}\\\\n    </dds-tag-link>\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Tag link\',\\\\n  decorators: [\\\\n    story => html`\\\\n      <div class=\\\\\\"bx--grid\\\\\\">\\\\n        ${story()}\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    hasStoryPadding: true,\\\\n    knobs: {\\\\n      TagLink: () => ({\\\\n        copy: textNullable(\'Tag Link (copy)\', \'Brand: Watson\'),\\\\n        href: textNullable(\'Tag Link (href)\', `https://example.com`),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        TagLink: {\\\\n          copy: \'Brand: Watson\',\\\\n          href: \'https://example.com\',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\",\\"locationsMap\\":{\\"default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":16},\\"endLoc\\":{\\"col\\":1,\\"line\\":23},\\"startBody\\":{\\"col\\":23,\\"line\\":16},\\"endBody\\":{\\"col\\":1,\\"line\\":23}}}},\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n    knobs: {\\n      TagLink: () => ({\\n        copy: textNullable(\'Tag Link (copy)\', \'Brand: Watson\'),\\n        href: textNullable(\'Tag Link (href)\', `https://example.com`),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        TagLink: {\\n          copy: \'Brand: Watson\',\\n          href: \'https://example.com\',\\n        },\\n      },\\n    },\\n  },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":24},"endLoc":{"col":1,"line":31},"startBody":{"col":23,"line":24},"endBody":{"col":1,"line":31}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\nimport readme from \'./README.stories.mdx\';\\nimport \'../tag-link\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\n\\nexport const Default = args => {\\n  const { copy, href } = args?.TagLink ?? {};\\n  return html`\\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\\n      ${copy}\\n    </dds-tag-link>\\n  `;\\n};\\n\\nexport default {\\n  title: \'Components/Tag link\',\\n  decorators: [\\n    story => html`\\n      <div class=\\"bx--grid\\">\\n        ${story()}\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n    knobs: {\\n      TagLink: () => ({\\n        copy: textNullable(\'Tag Link (copy)\', \'Brand: Watson\'),\\n        href: textNullable(\'Tag Link (href)\', `https://example.com`),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        TagLink: {\\n          copy: \'Brand: Watson\',\\n          href: \'https://example.com\',\\n        },\\n      },\\n    },\\n  },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":16},"endLoc":{"col":1,"line":23},"startBody":{"col":23,"line":16},"endBody":{"col":1,"line":23}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from \'lit-element\';\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\nimport readme from \'./README.stories.mdx\';\nimport \'../tag-link\';\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\n\nexport const Default = args => {\n  const { copy, href } = args?.TagLink ?? {};\n  return html`\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\n      ${copy}\n    </dds-tag-link>\n  `;\n};\n\nexport default {\n  title: \'Components/Tag link\',\n  decorators: [\n    story => html`\n      <div class="bx--grid">\n        ${story()}\n      </div>\n    `,\n  ],\n  parameters: {"storySource":{"source":"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\nimport readme from \'./README.stories.mdx\';\\nimport \'../tag-link\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\n\\nexport const Default = args => {\\n  const { copy, href } = args?.TagLink ?? {};\\n  return html`\\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\\n      ${copy}\\n    </dds-tag-link>\\n  `;\\n};\\n\\nexport default {\\n  title: \'Components/Tag link\',\\n  decorators: [\\n    story => html`\\n      <div class=\\"bx--grid\\">\\n        ${story()}\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n    knobs: {\\n      TagLink: () => ({\\n        copy: textNullable(\'Tag Link (copy)\', \'Brand: Watson\'),\\n        href: textNullable(\'Tag Link (href)\', `https://example.com`),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        TagLink: {\\n          copy: \'Brand: Watson\',\\n          href: \'https://example.com\',\\n        },\\n      },\\n    },\\n  },\\n};\\n","locationsMap":{"default":{"startLoc":{"col":23,"line":16},"endLoc":{"col":1,"line":23},"startBody":{"col":23,"line":16},"endBody":{"col":1,"line":23}}}},\n    ...readme.parameters,\n    hasStoryPadding: true,\n    knobs: {\n      TagLink: () => ({\n        copy: textNullable(\'Tag Link (copy)\', \'Brand: Watson\'),\n        href: textNullable(\'Tag Link (href)\', `https://example.com`),\n      }),\n    },\n    propsSet: {\n      default: {\n        TagLink: {\n          copy: \'Brand: Watson\',\n          href: \'https://example.com\',\n        },\n      },\n    },\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: "args => {\\n  const { copy, href } = args?.TagLink ?? {};\\n  return html`\\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\\n      ${copy}\\n    </dds-tag-link>\\n  `;\\n}" }, ...Default.parameters };',locationsMap:{default:{startLoc:{col:23,line:32},endLoc:{col:1,line:39},startBody:{col:23,line:32},endBody:{col:1,line:39}}}}},E="storySource",D={source:"/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\nimport readme from './README.stories.mdx';\nimport '../tag-link';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nexport const Default = args => {\n  const { copy, href } = args?.TagLink ?? {};\n  return html`\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\n      ${copy}\n    </dds-tag-link>\n  `;\n};\n\nexport default {\n  title: 'Components/Tag link',\n  decorators: [\n    story => html`\n      <div class=\"bx--grid\">\n        ${story()}\n      </div>\n    `,\n  ],\n  parameters: {\n    ...readme.parameters,\n    hasStoryPadding: true,\n    knobs: {\n      TagLink: () => ({\n        copy: textNullable('Tag Link (copy)', 'Brand: Watson'),\n        href: textNullable('Tag Link (href)', `https://example.com`),\n      }),\n    },\n    propsSet: {\n      default: {\n        TagLink: {\n          copy: 'Brand: Watson',\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n",locationsMap:{default:{startLoc:{col:23,line:16},endLoc:{col:1,line:23},startBody:{col:23,line:16},endBody:{col:1,line:23}}}},E in C?Object.defineProperty(C,E,{value:D,enumerable:!0,configurable:!0,writable:!0}):C[E]=D,C),O.parameters),{},{hasStoryPadding:!0,knobs:{TagLink:function(){return{copy:Object(w.a)("Tag Link (copy)","Brand: Watson"),href:Object(w.a)("Tag Link (href)","https://example.com")}}},propsSet:{default:{TagLink:{copy:"Brand: Watson",href:"https://example.com"}}}})};M.parameters=L({storySource:{source:"args => {\n  const { copy, href } = args?.TagLink ?? {};\n  return html`\n    <dds-tag-link href=${ifNonNull(href || undefined)}>\n      ${copy}\n    </dds-tag-link>\n  `;\n}"}},M.parameters)}}]);