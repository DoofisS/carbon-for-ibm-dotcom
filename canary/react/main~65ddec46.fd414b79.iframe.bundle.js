(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"./src/components/ContentItem/__stories__/ContentItem.stories.js":function(e,n,t){"use strict";t.r(n),t.d(n,"Default",(function(){return g}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),a=t.n(o),r=t("../../node_modules/@storybook/addon-knobs/dist/index.js"),s=t("./src/components/ContentItem/ContentItem.js"),i=t("../storybook-images/assets/720/fpo--16x9--720x405--003.jpg"),c=t.n(i),m=t("../../node_modules/react/index.js"),l=t.n(m),p=t("./src/components/ContentItem/README.stories.mdx");function d(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function y(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?d(Object(t),!0).forEach((function(n){a()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):d(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}n.default={title:"Components/Content item",parameters:y(y(a()({storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * Copyright IBM Corp. 2016, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { text, select } from '@storybook/addon-knobs';\\nimport ContentItem from '../ContentItem';\\nimport imgLg16x9 from '../../../../../storybook-images/assets/720/fpo--16x9--720x405--003.jpg';\\nimport React from 'react';\\nimport readme from '../README.stories.mdx';\\n\\nconst props = () => ({\\n  heading: text('Heading (heading):', 'Natural language understanding'),\\n  media: select('Media type:', ['none', 'image', 'video'], 'none'),\\n  copy: text(\\n    'Copy (copy):',\\n    'This area of NLP takes “real world” text and applies a symbolic ' +\\n      'system for a machine to interpret its meaning, using formal logic; structures ' +\\n      'that describe the various relationships between concepts (ontologies); and other semantic tools.'\\n  ),\\n  ctaStyle: select('CTA style', ['text', 'button'], 'text'),\\n  ctaCopy: text('CTA copy', 'Learn more about NLP'),\\n});\\n\\nexport default {\\n  title: 'Components/Content item',\\n  parameters: {\\n    ...readme.parameters,\\n    percy: {\\n      name: 'Components|Content item: Default',\\n    },\\n  },\\n};\\n\\nexport const Default = () => {\\n  const { heading, media, copy, ctaStyle, ctaCopy } = props() ?? {};\\n  return (\\n    <div className=\\\"bx--grid\\\">\\n      <div className=\\\"bx--row\\\">\\n        <div className=\\\"bx--col-sm-4 bx--col-lg-10 bx--offset-lg-4\\\">\\n          <ContentItem\\n            heading={heading}\\n            mediaType={media}\\n            mediaData={{\\n              heading: 'Image caption text',\\n              image: {\\n                defaultSrc: imgLg16x9,\\n                alt: 'Image alt text',\\n              },\\n              videoId: '1_9h94wo6b',\\n              showCaption: true,\\n            }}\\n            copy={copy}\\n            cta={{\\n              style: ctaStyle,\\n              type: 'local',\\n              copy: ctaCopy,\\n              href: 'https://www.example.com',\\n              buttons: [\\n                {\\n                  copy: 'Learn more about NLP',\\n                  href: 'https://example.com/',\\n                },\\n              ],\\n            }}\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":37},\"endLoc\":{\"col\":1,\"line\":73},\"startBody\":{\"col\":23,\"line\":37},\"endBody\":{\"col\":1,\"line\":73}}};\n    \n/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { text, select } from '@storybook/addon-knobs';\nimport ContentItem from '../ContentItem';\nimport imgLg16x9 from '../../../../../storybook-images/assets/720/fpo--16x9--720x405--003.jpg';\nimport React from 'react';\nimport readme from '../README.stories.mdx';\n\nconst props = () => ({\n  heading: text('Heading (heading):', 'Natural language understanding'),\n  media: select('Media type:', ['none', 'image', 'video'], 'none'),\n  copy: text(\n    'Copy (copy):',\n    'This area of NLP takes “real world” text and applies a symbolic ' +\n      'system for a machine to interpret its meaning, using formal logic; structures ' +\n      'that describe the various relationships between concepts (ontologies); and other semantic tools.'\n  ),\n  ctaStyle: select('CTA style', ['text', 'button'], 'text'),\n  ctaCopy: text('CTA copy', 'Learn more about NLP'),\n});\n\nexport default {\n  title: 'Components/Content item',\n  parameters: {\"storySource\":{\"source\":\"/**\\n * Copyright IBM Corp. 2016, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { text, select } from '@storybook/addon-knobs';\\nimport ContentItem from '../ContentItem';\\nimport imgLg16x9 from '../../../../../storybook-images/assets/720/fpo--16x9--720x405--003.jpg';\\nimport React from 'react';\\nimport readme from '../README.stories.mdx';\\n\\nconst props = () => ({\\n  heading: text('Heading (heading):', 'Natural language understanding'),\\n  media: select('Media type:', ['none', 'image', 'video'], 'none'),\\n  copy: text(\\n    'Copy (copy):',\\n    'This area of NLP takes “real world” text and applies a symbolic ' +\\n      'system for a machine to interpret its meaning, using formal logic; structures ' +\\n      'that describe the various relationships between concepts (ontologies); and other semantic tools.'\\n  ),\\n  ctaStyle: select('CTA style', ['text', 'button'], 'text'),\\n  ctaCopy: text('CTA copy', 'Learn more about NLP'),\\n});\\n\\nexport default {\\n  title: 'Components/Content item',\\n  parameters: {\\n    ...readme.parameters,\\n    percy: {\\n      name: 'Components|Content item: Default',\\n    },\\n  },\\n};\\n\\nexport const Default = () => {\\n  const { heading, media, copy, ctaStyle, ctaCopy } = props() ?? {};\\n  return (\\n    <div className=\\\"bx--grid\\\">\\n      <div className=\\\"bx--row\\\">\\n        <div className=\\\"bx--col-sm-4 bx--col-lg-10 bx--offset-lg-4\\\">\\n          <ContentItem\\n            heading={heading}\\n            mediaType={media}\\n            mediaData={{\\n              heading: 'Image caption text',\\n              image: {\\n                defaultSrc: imgLg16x9,\\n                alt: 'Image alt text',\\n              },\\n              videoId: '1_9h94wo6b',\\n              showCaption: true,\\n            }}\\n            copy={copy}\\n            cta={{\\n              style: ctaStyle,\\n              type: 'local',\\n              copy: ctaCopy,\\n              href: 'https://www.example.com',\\n              buttons: [\\n                {\\n                  copy: 'Learn more about NLP',\\n                  href: 'https://example.com/',\\n                },\\n              ],\\n            }}\\n          />\\n        </div>\\n      </div>\\n    </div>\\n  );\\n};\\n\",\"locationsMap\":{\"default\":{\"startLoc\":{\"col\":23,\"line\":37},\"endLoc\":{\"col\":1,\"line\":73},\"startBody\":{\"col\":23,\"line\":37},\"endBody\":{\"col\":1,\"line\":73}}}},\n    ...readme.parameters,\n    percy: {\n      name: 'Components|Content item: Default',\n    },\n  },\n};\n\nexport const Default = () => {\n  const { heading, media, copy, ctaStyle, ctaCopy } = props() ?? {};\n  return (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-sm-4 bx--col-lg-10 bx--offset-lg-4\">\n          <ContentItem\n            heading={heading}\n            mediaType={media}\n            mediaData={{\n              heading: 'Image caption text',\n              image: {\n                defaultSrc: imgLg16x9,\n                alt: 'Image alt text',\n              },\n              videoId: '1_9h94wo6b',\n              showCaption: true,\n            }}\n            copy={copy}\n            cta={{\n              style: ctaStyle,\n              type: 'local',\n              copy: ctaCopy,\n              href: 'https://www.example.com',\n              buttons: [\n                {\n                  copy: 'Learn more about NLP',\n                  href: 'https://example.com/',\n                },\n              ],\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n",locationsMap:{default:{startLoc:{col:23,line:45},endLoc:{col:1,line:81},startBody:{col:23,line:45},endBody:{col:1,line:81}}}}},"storySource",{source:"/**\n * Copyright IBM Corp. 2016, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { text, select } from '@storybook/addon-knobs';\nimport ContentItem from '../ContentItem';\nimport imgLg16x9 from '../../../../../storybook-images/assets/720/fpo--16x9--720x405--003.jpg';\nimport React from 'react';\nimport readme from '../README.stories.mdx';\n\nconst props = () => ({\n  heading: text('Heading (heading):', 'Natural language understanding'),\n  media: select('Media type:', ['none', 'image', 'video'], 'none'),\n  copy: text(\n    'Copy (copy):',\n    'This area of NLP takes “real world” text and applies a symbolic ' +\n      'system for a machine to interpret its meaning, using formal logic; structures ' +\n      'that describe the various relationships between concepts (ontologies); and other semantic tools.'\n  ),\n  ctaStyle: select('CTA style', ['text', 'button'], 'text'),\n  ctaCopy: text('CTA copy', 'Learn more about NLP'),\n});\n\nexport default {\n  title: 'Components/Content item',\n  parameters: {\n    ...readme.parameters,\n    percy: {\n      name: 'Components|Content item: Default',\n    },\n  },\n};\n\nexport const Default = () => {\n  const { heading, media, copy, ctaStyle, ctaCopy } = props() ?? {};\n  return (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-sm-4 bx--col-lg-10 bx--offset-lg-4\">\n          <ContentItem\n            heading={heading}\n            mediaType={media}\n            mediaData={{\n              heading: 'Image caption text',\n              image: {\n                defaultSrc: imgLg16x9,\n                alt: 'Image alt text',\n              },\n              videoId: '1_9h94wo6b',\n              showCaption: true,\n            }}\n            copy={copy}\n            cta={{\n              style: ctaStyle,\n              type: 'local',\n              copy: ctaCopy,\n              href: 'https://www.example.com',\n              buttons: [\n                {\n                  copy: 'Learn more about NLP',\n                  href: 'https://example.com/',\n                },\n              ],\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n",locationsMap:{default:{startLoc:{col:23,line:37},endLoc:{col:1,line:73},startBody:{col:23,line:37},endBody:{col:1,line:73}}}}),p.default.parameters),{},{percy:{name:"Components|Content item: Default"}})};var g=function(){var e,n=null!==(e={heading:Object(r.text)("Heading (heading):","Natural language understanding"),media:Object(r.select)("Media type:",["none","image","video"],"none"),copy:Object(r.text)("Copy (copy):","This area of NLP takes “real world” text and applies a symbolic system for a machine to interpret its meaning, using formal logic; structures that describe the various relationships between concepts (ontologies); and other semantic tools."),ctaStyle:Object(r.select)("CTA style",["text","button"],"text"),ctaCopy:Object(r.text)("CTA copy","Learn more about NLP")})&&void 0!==e?e:{},t=n.heading,o=n.media,a=n.copy,i=n.ctaStyle,m=n.ctaCopy;return l.a.createElement("div",{className:"bx--grid"},l.a.createElement("div",{className:"bx--row"},l.a.createElement("div",{className:"bx--col-sm-4 bx--col-lg-10 bx--offset-lg-4"},l.a.createElement(s.a,{heading:t,mediaType:o,mediaData:{heading:"Image caption text",image:{defaultSrc:c.a,alt:"Image alt text"},videoId:"1_9h94wo6b",showCaption:!0},copy:a,cta:{style:i,type:"local",copy:m,href:"https://www.example.com",buttons:[{copy:"Learn more about NLP",href:"https://example.com/"}]}}))))};g.parameters=y({storySource:{source:"() => {\n  const { heading, media, copy, ctaStyle, ctaCopy } = props() ?? {};\n  return (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-sm-4 bx--col-lg-10 bx--offset-lg-4\">\n          <ContentItem\n            heading={heading}\n            mediaType={media}\n            mediaData={{\n              heading: 'Image caption text',\n              image: {\n                defaultSrc: imgLg16x9,\n                alt: 'Image alt text',\n              },\n              videoId: '1_9h94wo6b',\n              showCaption: true,\n            }}\n            copy={copy}\n            cta={{\n              style: ctaStyle,\n              type: 'local',\n              copy: ctaCopy,\n              href: 'https://www.example.com',\n              buttons: [\n                {\n                  copy: 'Learn more about NLP',\n                  href: 'https://example.com/',\n                },\n              ],\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}"}},g.parameters),g.__docgenInfo={description:"",methods:[],displayName:"Default"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ContentItem/__stories__/ContentItem.stories.js"]={name:"Default",docgenInfo:g.__docgenInfo,path:"src/components/ContentItem/__stories__/ContentItem.stories.js"})}}]);