(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"./src/components/card/__stories__/card.stories.ts":function(n,e,t){"use strict";t.r(e),t.d(e,"Default",(function(){return Sn})),t.d(e,"Pictogram",(function(){return On})),t.d(e,"Static",(function(){return Pn})),t.d(e,"Logo",(function(){return jn}));t("../../node_modules/core-js/modules/es.symbol.iterator.js"),t("../../node_modules/core-js/modules/es.string.iterator.js"),t("../../node_modules/core-js/modules/es.array.iterator.js"),t("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),t("../../node_modules/core-js/modules/es.array.slice.js"),t("../../node_modules/core-js/modules/es.object.freeze.js"),t("../../node_modules/core-js/modules/es.object.keys.js"),t("../../node_modules/core-js/modules/es.symbol.js"),t("../../node_modules/core-js/modules/es.array.filter.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),t("../../node_modules/core-js/modules/es.array.for-each.js"),t("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),t("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),t("../../node_modules/core-js/modules/es.object.define-properties.js"),t("../../node_modules/core-js/modules/es.object.define-property.js"),t("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),t("../../node_modules/core-js/modules/es.date.to-primitive.js"),t("../../node_modules/core-js/modules/es.symbol.description.js"),t("../../node_modules/core-js/modules/es.object.to-string.js"),t("../../node_modules/core-js/modules/es.number.constructor.js"),t("./src/components/image/image.ts"),t("./src/components/tag-group/tag-group.ts"),t("./src/internal/vendor/@carbon/web-components/components/tag/tag.js"),t("./src/components/card/index.ts");var a=t("./node_modules/@storybook/addon-knobs/dist/index.js"),o=t("./src/internal/vendor/@carbon/web-components/icons/arrow--right/20.js"),r=t("../../node_modules/lit/index.js"),d=t("../../node_modules/lit/directives/if-defined.js"),c=t("../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg"),i=t("../storybook-images/assets/logos/logo-microsoft--2x1.png"),s=t("./src/components/card/defs.ts"),l=(t("../../node_modules/core-js/modules/es.array.index-of.js"),t("../../node_modules/core-js/modules/es.object.assign.js"),t("../../node_modules/core-js/modules/es.function.bind.js"),t("../../node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/esm.js")),m=t("./node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("./node_modules/@storybook/addon-docs/blocks.js"),g=t("../../docs/contributing-license.md"),u=t("./src/globals/internal/storybook-cdn.ts");function f(n){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},f(n)}var h=["components"];function b(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function y(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?b(Object(t),!0).forEach((function(e){x(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function x(n,e,t){return(e=function(n){var e=function(n,e){if("object"!==f(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var a=t.call(n,e||"default");if("object"!==f(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===f(e)?e:String(e)}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function C(){return C=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},C.apply(this,arguments)}function w(n,e){if(null==n)return{};var t,a,o=function(n,e){if(null==n)return{};var t,a,o={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var $={};function S(n){var e=n.components,t=w(n,h);return Object(l.b)("wrapper",C({},$,t,{components:e,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"card"},"Card"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"ðŸ’¡ Check our\n",Object(l.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/card",target:"_blank",rel:"nofollow noopener noreferrer"},"CodeSandbox"),"\nexample implementation.")),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/card",target:"_blank",rel:"nofollow noopener noreferrer"},Object(l.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(l.b)("h2",{id:"getting-started"},"Getting started"),Object(l.b)("p",null,"Here's a quick example to get you started."),Object(l.b)("h3",{id:"js-via-import"},"JS (via import)"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/card/index.js';\n")),Object(l.b)(p.a,{markdown:"".concat(Object(u.c)({components:["card"]})),mdxType:"Description"}),Object(l.b)(p.a,{markdown:"".concat(Object(u.a)()),mdxType:"Description"}),Object(l.b)("h3",{id:"html"},"HTML"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<dds-card href="https://example.com">\n  <dds-card-eyebrow>Eyebrow text</dds-card-eyebrow>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  <dds-card-footer slot="footer">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(l.b)("h2",{id:"card-with-pictogram"},"Card with pictogram"),Object(l.b)("p",null,"You can browse the ",Object(l.b)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/guidelines/pictograms/library/",target:"_blank",rel:"nofollow noopener noreferrer"},"Carbon Pictogram library")," to find a pictogram that fits your design.\nYou can also check out the repo ",Object(l.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon/tree/main/packages/pictograms",target:"_blank",rel:"nofollow noopener noreferrer"},"here")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<dds-card pictogram-placement="${pictogramPlacement}" href="https://example.com">\n  <dds-card-eyebrow>Eyebrow text</dds-card-eyebrow>\n  <dds-card-heading>Lorem ipsum dolor</dds-card-heading>\n  <p>Copy to be shown on hover if the pictogram placement is bottom</p>\n  <svg\n    slot="pictogram"\n    focusable="false"\n    preserveAspectRatio="xMidYMid meet"\n    xmlns="http://www.w3.org/2000/svg"\n    stroke="currentColor"\n    data-autoid="dds--card__pictogram"\n    aria-label="Pictogram description"\n    width="48"\n    height="48"\n    viewBox="0 0 48 48"\n    role="img"\n    class="cds--card__pictogram"\n  >\n    <path\n      fill="none"\n      stroke-linejoin="round"\n      stroke-miterlimit="10"\n      stroke-width=".72"\n      d="M37,32 H11c-1.1,0-2-0.9-2-2V13c0-1.1,0.9-2,2-2h26c1.1,0,2,0.9,2,2v17C39,31.1,38.1,32,37,32z M17,37h14 M24,32v5 M9,27h30"\n    ></path>\n  </svg>\n</dds-card>\n')),Object(l.b)("h2",{id:"card---static"},"Card - static"),Object(l.b)("p",null,"When there is no URL being passed to the ",Object(l.b)("inlineCode",{parentName:"p"},"DDSCard"),"'s href attribute, the static variation will be rendered,\nwhere the card is no longer clickable and optional ",Object(l.b)("inlineCode",{parentName:"p"},"Tag")," elements can also be added."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<dds-card>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  ${copy ? html`\n  <p>${copy}</p>\n  ` : ``}\n  <dds-tag-group>\n    <cds-tag>\n      Most popular\n    </cds-tag>\n    <cds-tag type="purple">\n      Enterprise\n    </cds-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com" icon-placement="right">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(l.b)("h2",{id:"card---logo"},"Card - logo"),Object(l.b)("p",null,"If you need to use a Logo image for the Card component, use the Logo variant to ensure the Card\nproperly accomodates to the Logo image."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<dds-card border logo href="https://example.com">\n  <dds-image-logo\n    slot="image"\n    alt="Image logo alt text"\n    default-src="https://fpoimg.com/320x160?text=2:1&bg_color=ee5396&text_color=161616"\n  ></dds-image-logo>\n  <dds-card-eyebrow>Microsoft</dds-card-eyebrow>\n  <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\n  <dds-tag-group>\n    <cds-tag>\n      Most popular\n    </cds-tag>\n    <cds-tag type="purple">\n      Enterprise\n    </cds-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com"></dds-card-footer>\n</dds-card>\n')),Object(l.b)("h2",{id:"light-theme"},"Light theme"),Object(l.b)("p",null,"An optional light theme is available under ",Object(l.b)("inlineCode",{parentName:"p"},"color-scheme"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<dds-card color-scheme="light"></dds-card>\n')),Object(l.b)("h2",{id:"card-with-image"},"Card with image"),Object(l.b)("p",null,"To add image to the ",Object(l.b)("inlineCode",{parentName:"p"},"dds-card"),", import the ",Object(l.b)("inlineCode",{parentName:"p"},"image")," component and place ",Object(l.b)("inlineCode",{parentName:"p"},"dds-image")," within ",Object(l.b)("inlineCode",{parentName:"p"},"dds-card"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/image/index.js';\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<dds-card>\n  <dds-card-heading>Lorem ipsum dolor sit amet</dds-card-heading>\n  <dds-image slot="image" alt="alt text" default-src="../image.png"></dds-image>\n  <dds-tag-group>\n    <cds-tag>\n      Most popular\n    </cds-tag>\n    <cds-tag type="purple">\n      Enterprise\n    </cds-tag>\n  </dds-tag-group>\n  <dds-card-footer href="https://example.com" icon-placement="right">\n    Card CTA text\n    <svg\n      slot="icon"\n      focusable="false"\n      preserveAspectRatio="xMidYMid meet"\n      xmlns="http://www.w3.org/2000/svg"\n      fill="currentColor"\n      aria-hidden="true"\n      width="20"\n      height="20"\n      viewBox="0 0 20 20"\n    >\n      <path d="M11.8 2.8L10.8 3.8 16.2 9.3 1 9.3 1 10.7 16.2 10.7 10.8 16.2 11.8 17.2 19 10z"></path>\n    </svg>\n  </dds-card-footer>\n</dds-card>\n')),Object(l.b)("h2",{id:"props"},"Props"),Object(l.b)(p.c,{of:"dds-card",mdxType:"Props"}),Object(l.b)("h2",{id:"stable-selectors"},"Stable selectors"),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components#stable-selectors-for-analytics-and-integratione2e-testing-in-web-components",target:"_blank",rel:"nofollow noopener noreferrer"},"our README")," to see how Web Components selector and ",Object(l.b)("inlineCode",{parentName:"p"},"data-autoid")," should be used."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Web Components selector"),Object(l.b)("th",{parentName:"tr",align:null},"Compatibility selector"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"<dds-card>")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},'data-autoid="dds--card"')),Object(l.b)("td",{parentName:"tr",align:null},"Component")))),Object(l.b)(p.a,{markdown:g.a,mdxType:"Description"}))}S.isMDXComponent=!0;var v={includeStories:[]},O={};v.parameters=v.parameters||{},v.parameters.docs=y(y({},v.parameters.docs||{}),{},{page:function(){return Object(l.b)(m.a,{mdxStoryNameToKey:O,mdxComponentAnnotations:v},Object(l.b)(S,null))}});var P,j,A,M,G,N,D,T,_,I,E,L,k,q,B,H,R,V,U,X,z,Y=v,F=t("./.storybook/knob-text-nullable.ts");function J(n,e,t){return(e=function(n){var e=function(n,e){if("object"!==K(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var a=t.call(n,e||"default");if("object"!==K(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===K(e)?e:String(e)}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function W(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}function K(n){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},K(n)}var Q,Z,nn,en,tn,an,on,rn,dn,cn,sn,ln,mn,pn,gn,un,fn,hn,bn,yn;function xn(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function Cn(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?xn(Object(t),!0).forEach((function(e){wn(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):xn(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function wn(n,e,t){return(e=function(n){var e=function(n,e){if("object"!==K(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var a=t.call(n,e||"default");if("object"!==K(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===K(e)?e:String(e)}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var $n=Object(r.c)(Q||(Q=P||(P=W(['\n  <dds-tag-group>\n    <cds-tag type="green"> Most popular </cds-tag>\n    <cds-tag type="purple"> Enterprise </cds-tag>\n  </dds-tag-group>\n'])))),Sn=function(n){var e,t=null!==(e=null==n?void 0:n.Card)&&void 0!==e?e:{},a=t.image,c=t.href,i=t.alt,s=t.defaultSrc,l=t.heading,m=t.eyebrow,p=t.tagGroup,g=t.copy,u=t.footer,f=t.cardStyles;return Object(r.c)(Z||(Z=j||(j=W(["\n    <dds-card\n      color-scheme=","\n      ?border=","\n      href=",">\n      ","\n      <dds-card-eyebrow>","</dds-card-eyebrow>\n      <dds-card-heading>","</dds-card-heading>\n      ","\n      ","\n      <dds-card-footer>\n        ","","\n      </dds-card-footer>\n    </dds-card>\n  "]))),"Inverse card"===f?"inverse":"Outlined card"===f?"light":"","Outlined card"===f,Object(d.a)(c||void 0),a?Object(r.c)(nn||(nn=A||(A=W(['\n            <dds-image\n              slot="image"\n              alt="','"\n              default-src="','"></dds-image>\n          ']))),Object(d.a)(i),Object(d.a)(s)):"",m,l,g?Object(r.c)(en||(en=M||(M=W([" <p>","</p> "]))),g):"",p?Object(r.c)(tn||(tn=G||(G=W([" "," "]))),$n):"",u,Object(o.a)({slot:"icon"}))},vn=(J(N={},s.a.TOP,s.a.TOP),J(N,s.a.BOTTOM,s.a.BOTTOM),N);Sn.story={parameters:Cn(Cn({},Y.parameters),{},{knobs:{Card:function(){return{image:Object(a.boolean)("Add image:",!1,"Default"),eyebrow:Object(F.a)("Eyebrow:","Industry","Default"),heading:Object(F.a)("Heading:","Aerospace and defence","Default"),copy:Object(F.a)("Body copy:","","Default"),alt:"Image alt text",defaultSrc:c.a,tagGroup:Object(a.boolean)("Add tags:",!1,"Default"),href:"https://example.com",footer:Object(F.a)("CTA:","Learn more","Default"),cardStyles:Object(a.select)("Card style:",["Outlined card","Inverse card","none"],"none","Default")}}},propsSet:{default:{Card:{image:!1,eyebrow:"Industry",heading:"Aerospace and defence",copy:"",alt:"Image alt text",defaultSrc:c.a,tagGroup:!1,href:"https://example.com",footer:"Learn more",cardStyles:"none"}}}})};var On=function(n){var e,t=null!==(e=null==n?void 0:n.PictogramCard)&&void 0!==e?e:{},a=t.href,o=t.heading,c=t.copy,i=t.tagGroup,s=t.pictogramPlacement,l=t.cardStyles;return Object(r.c)(an||(an=D||(D=W(['\n    <dds-card\n      pictogram-placement="','"\n      href=',"\n      color-scheme=","\n      ?border=",">\n      <dds-card-heading>","</dds-card-heading>\n      ","\n      ",'\n      <svg\n        slot="pictogram"\n        focusable="false"\n        preserveAspectRatio="xMidYMid meet"\n        xmlns="http://www.w3.org/2000/svg"\n        data-autoid="dds--card__pictogram"\n        aria-label="Pictogram description"\n        width="48"\n        height="48"\n        viewBox="0 0 32 32"\n        role="img"\n        class="cds--card__pictogram">\n        <path\n          id="desktop_1_"\n          d="M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z" />\n      </svg>\n    </dds-card>\n  ']))),s,Object(d.a)(a||void 0),"Inverse card"===l?"inverse":"Outlined card"===l?"light":"","Outlined card"===l,o,c?Object(r.c)(on||(on=T||(T=W([" <p>","</p> "]))),c):"",i?Object(r.c)(rn||(rn=_||(_=W([" "," "]))),$n):"")};On.story={parameters:Cn(Cn({},Y.parameters),{},{knobs:{PictogramCard:function(){var n=Object(a.select)("Pictogram position:",vn,vn.top,"pictogram"),e=Object(F.a)("Body copy:","Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.","pictogram");return{pictogramPlacement:n,heading:Object(F.a)("Heading:","Aerospace and defence","pictogram"),copy:e,href:"https://example.com",cardStyles:Object(a.select)("Card style:",["Outlined card","Inverse card","none"],"none","pictogram")}}},propsSet:{default:{PictogramCard:{pictogramPlacement:"top",heading:"Aerospace and defence",copy:"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.",href:"https://example.com",cardStyles:"none"}}}})};var Pn=function(n){var e,t=null!==(e=null==n?void 0:n.Card)&&void 0!==e?e:{},a=t.image,c=t.alt,i=t.defaultSrc,s=t.outlinedCard,l=t.eyebrow,m=t.heading,p=t.copy,g=t.tagGroup,u=t.cta,f=t.ctaCopy;return Object(r.c)(dn||(dn=I||(I=W(["\n    <dds-card\n      color-scheme=","\n      ?border=",">\n      ","\n      ","\n      <dds-card-heading>","</dds-card-heading>\n      ","\n      ","\n      ","\n    </dds-card>\n  "]))),s?"light":"",s,a?Object(r.c)(cn||(cn=E||(E=W(['\n            <dds-image\n              slot="image"\n              alt="','"\n              default-src="','"></dds-image>\n          ']))),Object(d.a)(c),Object(d.a)(i)):"",l?Object(r.c)(sn||(sn=L||(L=W([" <dds-card-eyebrow>","</dds-card-eyebrow> "]))),l):"",m,p?Object(r.c)(ln||(ln=k||(k=W([" <p>","</p> "]))),p):"",g?Object(r.c)(mn||(mn=q||(q=W([" "," "]))),$n):"",u?Object(r.c)(pn||(pn=B||(B=W(['\n            <dds-card-footer href="https://www.example.com">\n              ',"","\n            </dds-card-footer>\n          "]))),f,Object(o.a)({slot:"icon"})):"")};Pn.story={parameters:Cn(Cn({},Y.parameters),{},{knobs:{Card:function(){var n=Object(a.boolean)("Add image:",!1,"static"),e=Object(F.a)("Eyebrow:","SPSS Statistics","static"),t=Object(F.a)("Heading:","Free trial","static"),o=Object(F.a)("Body copy:","Enjoy full SPSS Statistics capabilities including all add-ons. All trial registrants are restricted to one free trial per computer per user.","static"),r=Object(a.boolean)("Add tags:",!1,"static"),d=Object(a.boolean)("Add CTA:",!1,"static"),i=d?Object(F.a)("CTA copy:","Sign up for the trial","static"):"",s=Object(a.boolean)("Outlined card:",!0,"static");return{alt:"Image alt text",defaultSrc:c.a,image:n,eyebrow:e,heading:t,copy:o,tagGroup:r,cta:d,ctaCopy:i,outlinedCard:s}}},propsSet:{default:{Card:{image:!1,eyebrow:"Industry",heading:"Aerospace and defence",copy:"",alt:"Image alt text",defaultSrc:c.a,tagGroup:!1,cta:!1,ctaCopy:"Sign up for the trial",outlinedCard:"true"}}}})};var jn=function(n){var e,t=null!==(e=null==n?void 0:n.Card)&&void 0!==e?e:{},a=t.alt,o=t.defaultSrc,c=t.eyebrow,i=t.heading,s=t.href,l=t.copy,m=t.tagGroup;return Object(r.c)(gn||(gn=H||(H=W(["\n    <dds-card border logo href=",'>\n      <dds-image-logo\n        slot="image"\n        alt="','"\n        default-src="','"></dds-image-logo>\n      ',"\n      ","\n      ","\n      ","\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  "]))),Object(d.a)(s||void 0),Object(d.a)(a),Object(d.a)(o),c?Object(r.c)(un||(un=R||(R=W([" <dds-card-eyebrow>","</dds-card-eyebrow> "]))),c):"",i?Object(r.c)(fn||(fn=V||(V=W([" <dds-card-heading>","</dds-card-heading> "]))),i):"",l?Object(r.c)(hn||(hn=U||(U=W([" <p>","</p> "]))),l):"",m?Object(r.c)(bn||(bn=X||(X=W([" "," "]))),$n):"")};jn.story={parameters:Cn(Cn({},Y.parameters),{},{knobs:{Card:function(){return{alt:"Image alt text",defaultSrc:i.a,tagGroup:Object(a.boolean)("Add tags",!0,"logo"),eyebrow:Object(F.a)("Card Eyebrow:","Microsoft","logo"),heading:Object(F.a)("Card Heading (optional):","","logo"),copy:Object(F.a)("Card body copy:","Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","logo"),href:"https://example.com"}}},propsSet:{default:{Card:{image:!1,eyebrow:"Microsoft",heading:"",copy:"Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",alt:"Image alt text",defaultSrc:c.a,tagGroup:!1,href:"https://example.com"}}}})};e.default={title:"Components/Card",decorators:[function(n){return Object(r.c)(yn||(yn=z||(z=W(['\n      <div class="cds--grid">\n        <div class="cds--row">\n          <div\n            class="cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter">\n            ',"\n          </div>\n        </div>\n      </div>\n    "]))),n())}],parameters:Cn(Cn(J({storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport '../../image/image';\\\\nimport '../../tag-group/tag-group';\\\\nimport '../../../internal/vendor/@carbon/web-components/components/tag/tag.js';\\\\nimport '../index';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport ArrowRight20 from '../../../internal/vendor/@carbon/web-components/icons/arrow--right/20';\\\\nimport { html } from 'lit';\\\\nimport { ifDefined } from 'lit/directives/if-defined.js';\\\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\nconst tagGroupContent = html`\\\\n  <dds-tag-group>\\\\n    <cds-tag type=\\\\\\\"green\\\\\\\"> Most popular </cds-tag>\\\\n    <cds-tag type=\\\\\\\"purple\\\\\\\"> Enterprise </cds-tag>\\\\n  </dds-tag-group>\\\\n`;\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    image,\\\\n    href,\\\\n    alt,\\\\n    defaultSrc,\\\\n    heading,\\\\n    eyebrow,\\\\n    tagGroup,\\\\n    copy,\\\\n    footer,\\\\n    cardStyles,\\\\n  } = args?.Card ?? {};\\\\n  \\\\n  return html`\\\\n    <dds-card\\\\n      color-scheme=${cardStyles === 'Inverse card'\\\\n        ? 'inverse'\\\\n        : cardStyles === 'Outlined card'\\\\n        ? 'light'\\\\n        : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}\\\\n      href=${ifDefined(href || undefined)}>\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image\\\\n              slot=\\\\\\\"image\\\\\\\"\\\\n              alt=\\\\\\\"${ifDefined(alt)}\\\\\\\"\\\\n              default-src=\\\\\\\"${ifDefined(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n      <dds-card-footer>\\\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\\\n      </dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nconst pictogramPlacements = {\\\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\\\n};\\\\n\\\\nDefault.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        image: boolean('Add image:', false, 'Default'),\\\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\\\n        copy: textNullable('Body copy:', '', 'Default'),\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: imgXlg4x3,\\\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\\\n        href: 'https://example.com',\\\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\\\n        cardStyles: select(\\\\n          'Card style:',\\\\n          ['Outlined card', 'Inverse card', 'none'],\\\\n          'none',\\\\n          'Default'\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n          footer: 'Learn more',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Pictogram = (args) => {\\\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\\\\n    args?.PictogramCard ?? {};\\\\n  return html`\\\\n    <dds-card\\\\n      pictogram-placement=\\\\\\\"${pictogramPlacement}\\\\\\\"\\\\n      href=${ifDefined(href || undefined)}\\\\n      color-scheme=${cardStyles === 'Inverse card'\\\\n        ? 'inverse'\\\\n        : cardStyles === 'Outlined card'\\\\n        ? 'light'\\\\n        : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}>\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n      <svg\\\\n        slot=\\\\\\\"pictogram\\\\\\\"\\\\n        focusable=\\\\\\\"false\\\\\\\"\\\\n        preserveAspectRatio=\\\\\\\"xMidYMid meet\\\\\\\"\\\\n        xmlns=\\\\\\\"http://www.w3.org/2000/svg\\\\\\\"\\\\n        data-autoid=\\\\\\\"dds--card__pictogram\\\\\\\"\\\\n        aria-label=\\\\\\\"Pictogram description\\\\\\\"\\\\n        width=\\\\\\\"48\\\\\\\"\\\\n        height=\\\\\\\"48\\\\\\\"\\\\n        viewBox=\\\\\\\"0 0 32 32\\\\\\\"\\\\n        role=\\\\\\\"img\\\\\\\"\\\\n        class=\\\\\\\"cds--card__pictogram\\\\\\\">\\\\n        <path\\\\n          id=\\\\\\\"desktop_1_\\\\\\\"\\\\n          d=\\\\\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\\\\\" />\\\\n      </svg>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nPictogram.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      PictogramCard: () => {\\\\n        const pictogramPlacement = select(\\\\n          'Pictogram position:',\\\\n          pictogramPlacements,\\\\n          pictogramPlacements.top,\\\\n          'pictogram'\\\\n        );\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          'pictogram'\\\\n        );\\\\n        return {\\\\n          pictogramPlacement,\\\\n          heading: textNullable(\\\\n            'Heading:',\\\\n            'Aerospace and defence',\\\\n            'pictogram'\\\\n          ),\\\\n          copy,\\\\n          href: 'https://example.com',\\\\n          cardStyles: select(\\\\n            'Card style:',\\\\n            ['Outlined card', 'Inverse card', 'none'],\\\\n            'none',\\\\n            'pictogram'\\\\n          ),\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        PictogramCard: {\\\\n          pictogramPlacement: 'top',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          href: 'https://example.com',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Static = (args) => {\\\\n  const {\\\\n    image,\\\\n    alt,\\\\n    defaultSrc,\\\\n    outlinedCard,\\\\n    eyebrow,\\\\n    heading,\\\\n    copy,\\\\n    tagGroup,\\\\n    cta,\\\\n    ctaCopy,\\\\n  } = args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card\\\\n      color-scheme=${outlinedCard ? 'light' : ''}\\\\n      ?border=${outlinedCard}>\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image\\\\n              slot=\\\\\\\"image\\\\\\\"\\\\n              alt=\\\\\\\"${ifDefined(alt)}\\\\\\\"\\\\n              default-src=\\\\\\\"${ifDefined(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n      ${cta\\\\n        ? html`\\\\n            <dds-card-footer href=\\\\\\\"https://www.example.com\\\\\\\">\\\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\\\n            </dds-card-footer>\\\\n          `\\\\n        : ``}\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nStatic.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => {\\\\n        const image = boolean('Add image:', false, 'static');\\\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\\\n            'All trial registrants are restricted to one free trial per computer per user.',\\\\n          'static'\\\\n        );\\\\n        const tagGroup = boolean('Add tags:', false, 'static');\\\\n        const cta = boolean('Add CTA:', false, 'static');\\\\n        const ctaCopy = cta\\\\n          ? textNullable('CTA copy:', 'Sign up for the trial', 'static')\\\\n          : '';\\\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\\\n        return {\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          image,\\\\n          eyebrow,\\\\n          heading,\\\\n          copy,\\\\n          tagGroup,\\\\n          cta,\\\\n          ctaCopy,\\\\n          outlinedCard,\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          cta: false,\\\\n          ctaCopy: 'Sign up for the trial',\\\\n          outlinedCard: 'true',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Logo = (args) => {\\\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\\\\n    args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card border logo href=${ifDefined(href || undefined)}>\\\\n      <dds-image-logo\\\\n        slot=\\\\\\\"image\\\\\\\"\\\\n        alt=\\\\\\\"${ifDefined(alt)}\\\\\\\"\\\\n        default-src=\\\\\\\"${ifDefined(defaultSrc)}\\\\\\\"></dds-image-logo>\\\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\\\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n\\\\n      <dds-card-footer></dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nLogo.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: logoMicrosoft2x1,\\\\n        tagGroup: boolean('Add tags', true, 'logo'),\\\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\\\n        copy: textNullable(\\\\n          'Card body copy:',\\\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          'logo'\\\\n        ),\\\\n        href: 'https://example.com',\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Microsoft',\\\\n          heading: '',\\\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Card',\\\\n  decorators: [\\\\n    (story) => html`\\\\n      <div class=\\\\\\\"cds--grid\\\\\\\">\\\\n        <div class=\\\\\\\"cds--row\\\\\\\">\\\\n          <div\\\\n            class=\\\\\\\"cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter\\\\\\\">\\\\n            ${story()}\\\\n          </div>\\\\n        </div>\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    hasStoryPadding: true,\\\\n  },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":31},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":71},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":31},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":71}},\\\"Pictogram\\\":{\\\"startLoc\\\":{\\\"col\\\":25,\\\"line\\\":119},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":156},\\\"startBody\\\":{\\\"col\\\":25,\\\"line\\\":119},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":156}},\\\"Static\\\":{\\\"startLoc\\\":{\\\"col\\\":22,\\\"line\\\":208},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":246},\\\"startBody\\\":{\\\"col\\\":22,\\\"line\\\":208},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":246}},\\\"Logo\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":301},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":318},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":301},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":318}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport '../../../internal/vendor/@carbon/web-components/components/tag/tag.js';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from '../../../internal/vendor/@carbon/web-components/icons/arrow--right/20';\\nimport { html } from 'lit';\\nimport { ifDefined } from 'lit/directives/if-defined.js';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <cds-tag type=\\\"green\\\"> Most popular </cds-tag>\\n    <cds-tag type=\\\"purple\\\"> Enterprise </cds-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = (args) => {\\n  const {\\n    image,\\n    href,\\n    alt,\\n    defaultSrc,\\n    heading,\\n    eyebrow,\\n    tagGroup,\\n    copy,\\n    footer,\\n    cardStyles,\\n  } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifDefined(href || undefined)}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};;\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        image: boolean('Add image:', false, 'Default'),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\n        copy: textNullable('Body copy:', '', 'Default'),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\n        cardStyles: select(\\n          'Card style:',\\n          ['Outlined card', 'Inverse card', 'none'],\\n          'none',\\n          'Default'\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = (args) => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\\n    args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifDefined(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"cds--card__pictogram\\\">\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\" />\\n      </svg>\\n    </dds-card>\\n  `;\\n};;\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: () => {\\n        const pictogramPlacement = select(\\n          'Pictogram position:',\\n          pictogramPlacements,\\n          pictogramPlacements.top,\\n          'pictogram'\\n        );\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          'pictogram'\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable(\\n            'Heading:',\\n            'Aerospace and defence',\\n            'pictogram'\\n          ),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select(\\n            'Card style:',\\n            ['Outlined card', 'Inverse card', 'none'],\\n            'none',\\n            'pictogram'\\n          ),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = (args) => {\\n  const {\\n    image,\\n    alt,\\n    defaultSrc,\\n    outlinedCard,\\n    eyebrow,\\n    heading,\\n    copy,\\n    tagGroup,\\n    cta,\\n    ctaCopy,\\n  } = args?.Card ?? {};\\n  return html`\\n    <dds-card\\n      color-scheme=${outlinedCard ? 'light' : ''}\\n      ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};;\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => {\\n        const image = boolean('Add image:', false, 'static');\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          'static'\\n        );\\n        const tagGroup = boolean('Add tags:', false, 'static');\\n        const cta = boolean('Add CTA:', false, 'static');\\n        const ctaCopy = cta\\n          ? textNullable('CTA copy:', 'Sign up for the trial', 'static')\\n          : '';\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = (args) => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\\n    args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifDefined(href || undefined)}>\\n      <dds-image-logo\\n        slot=\\\"image\\\"\\n        alt=\\\"${ifDefined(alt)}\\\"\\n        default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, 'logo'),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          'logo'\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    (story) => html`\\n      <div class=\\\"cds--grid\\\">\\n        <div class=\\\"cds--row\\\">\\n          <div\\n            class=\\\"cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport '../../image/image';\\\\nimport '../../tag-group/tag-group';\\\\nimport '../../../internal/vendor/@carbon/web-components/components/tag/tag.js';\\\\nimport '../index';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport ArrowRight20 from '../../../internal/vendor/@carbon/web-components/icons/arrow--right/20';\\\\nimport { html } from 'lit';\\\\nimport { ifDefined } from 'lit/directives/if-defined.js';\\\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\nconst tagGroupContent = html`\\\\n  <dds-tag-group>\\\\n    <cds-tag type=\\\\\\\"green\\\\\\\"> Most popular </cds-tag>\\\\n    <cds-tag type=\\\\\\\"purple\\\\\\\"> Enterprise </cds-tag>\\\\n  </dds-tag-group>\\\\n`;\\\\n\\\\nexport const Default = (args) => {\\\\n  const {\\\\n    image,\\\\n    href,\\\\n    alt,\\\\n    defaultSrc,\\\\n    heading,\\\\n    eyebrow,\\\\n    tagGroup,\\\\n    copy,\\\\n    footer,\\\\n    cardStyles,\\\\n  } = args?.Card ?? {};\\\\n  \\\\n  return html`\\\\n    <dds-card\\\\n      color-scheme=${cardStyles === 'Inverse card'\\\\n        ? 'inverse'\\\\n        : cardStyles === 'Outlined card'\\\\n        ? 'light'\\\\n        : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}\\\\n      href=${ifDefined(href || undefined)}>\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image\\\\n              slot=\\\\\\\"image\\\\\\\"\\\\n              alt=\\\\\\\"${ifDefined(alt)}\\\\\\\"\\\\n              default-src=\\\\\\\"${ifDefined(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n      <dds-card-footer>\\\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\\\n      </dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nconst pictogramPlacements = {\\\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\\\n};\\\\n\\\\nDefault.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        image: boolean('Add image:', false, 'Default'),\\\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\\\n        copy: textNullable('Body copy:', '', 'Default'),\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: imgXlg4x3,\\\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\\\n        href: 'https://example.com',\\\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\\\n        cardStyles: select(\\\\n          'Card style:',\\\\n          ['Outlined card', 'Inverse card', 'none'],\\\\n          'none',\\\\n          'Default'\\\\n        ),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n          footer: 'Learn more',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Pictogram = (args) => {\\\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\\\\n    args?.PictogramCard ?? {};\\\\n  return html`\\\\n    <dds-card\\\\n      pictogram-placement=\\\\\\\"${pictogramPlacement}\\\\\\\"\\\\n      href=${ifDefined(href || undefined)}\\\\n      color-scheme=${cardStyles === 'Inverse card'\\\\n        ? 'inverse'\\\\n        : cardStyles === 'Outlined card'\\\\n        ? 'light'\\\\n        : ''}\\\\n      ?border=${cardStyles === 'Outlined card'}>\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n      <svg\\\\n        slot=\\\\\\\"pictogram\\\\\\\"\\\\n        focusable=\\\\\\\"false\\\\\\\"\\\\n        preserveAspectRatio=\\\\\\\"xMidYMid meet\\\\\\\"\\\\n        xmlns=\\\\\\\"http://www.w3.org/2000/svg\\\\\\\"\\\\n        data-autoid=\\\\\\\"dds--card__pictogram\\\\\\\"\\\\n        aria-label=\\\\\\\"Pictogram description\\\\\\\"\\\\n        width=\\\\\\\"48\\\\\\\"\\\\n        height=\\\\\\\"48\\\\\\\"\\\\n        viewBox=\\\\\\\"0 0 32 32\\\\\\\"\\\\n        role=\\\\\\\"img\\\\\\\"\\\\n        class=\\\\\\\"cds--card__pictogram\\\\\\\">\\\\n        <path\\\\n          id=\\\\\\\"desktop_1_\\\\\\\"\\\\n          d=\\\\\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\\\\\" />\\\\n      </svg>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nPictogram.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      PictogramCard: () => {\\\\n        const pictogramPlacement = select(\\\\n          'Pictogram position:',\\\\n          pictogramPlacements,\\\\n          pictogramPlacements.top,\\\\n          'pictogram'\\\\n        );\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          'pictogram'\\\\n        );\\\\n        return {\\\\n          pictogramPlacement,\\\\n          heading: textNullable(\\\\n            'Heading:',\\\\n            'Aerospace and defence',\\\\n            'pictogram'\\\\n          ),\\\\n          copy,\\\\n          href: 'https://example.com',\\\\n          cardStyles: select(\\\\n            'Card style:',\\\\n            ['Outlined card', 'Inverse card', 'none'],\\\\n            'none',\\\\n            'pictogram'\\\\n          ),\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        PictogramCard: {\\\\n          pictogramPlacement: 'top',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\\\n          href: 'https://example.com',\\\\n          cardStyles: 'none',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Static = (args) => {\\\\n  const {\\\\n    image,\\\\n    alt,\\\\n    defaultSrc,\\\\n    outlinedCard,\\\\n    eyebrow,\\\\n    heading,\\\\n    copy,\\\\n    tagGroup,\\\\n    cta,\\\\n    ctaCopy,\\\\n  } = args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card\\\\n      color-scheme=${outlinedCard ? 'light' : ''}\\\\n      ?border=${outlinedCard}>\\\\n      ${image\\\\n        ? html`\\\\n            <dds-image\\\\n              slot=\\\\\\\"image\\\\\\\"\\\\n              alt=\\\\\\\"${ifDefined(alt)}\\\\\\\"\\\\n              default-src=\\\\\\\"${ifDefined(defaultSrc)}\\\\\\\"></dds-image>\\\\n          `\\\\n        : ``}\\\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\\\n      <dds-card-heading>${heading}</dds-card-heading>\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n      ${cta\\\\n        ? html`\\\\n            <dds-card-footer href=\\\\\\\"https://www.example.com\\\\\\\">\\\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\\\n            </dds-card-footer>\\\\n          `\\\\n        : ``}\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nStatic.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => {\\\\n        const image = boolean('Add image:', false, 'static');\\\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\\\n        const copy = textNullable(\\\\n          'Body copy:',\\\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\\\n            'All trial registrants are restricted to one free trial per computer per user.',\\\\n          'static'\\\\n        );\\\\n        const tagGroup = boolean('Add tags:', false, 'static');\\\\n        const cta = boolean('Add CTA:', false, 'static');\\\\n        const ctaCopy = cta\\\\n          ? textNullable('CTA copy:', 'Sign up for the trial', 'static')\\\\n          : '';\\\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\\\n        return {\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          image,\\\\n          eyebrow,\\\\n          heading,\\\\n          copy,\\\\n          tagGroup,\\\\n          cta,\\\\n          ctaCopy,\\\\n          outlinedCard,\\\\n        };\\\\n      },\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Industry',\\\\n          heading: 'Aerospace and defence',\\\\n          copy: '',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          cta: false,\\\\n          ctaCopy: 'Sign up for the trial',\\\\n          outlinedCard: 'true',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const Logo = (args) => {\\\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\\\\n    args?.Card ?? {};\\\\n  return html`\\\\n    <dds-card border logo href=${ifDefined(href || undefined)}>\\\\n      <dds-image-logo\\\\n        slot=\\\\\\\"image\\\\\\\"\\\\n        alt=\\\\\\\"${ifDefined(alt)}\\\\\\\"\\\\n        default-src=\\\\\\\"${ifDefined(defaultSrc)}\\\\\\\"></dds-image-logo>\\\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\\\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\\\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\\\n\\\\n      <dds-card-footer></dds-card-footer>\\\\n    </dds-card>\\\\n  `;\\\\n};\\\\n\\\\nLogo.story = {\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      Card: () => ({\\\\n        alt: 'Image alt text',\\\\n        defaultSrc: logoMicrosoft2x1,\\\\n        tagGroup: boolean('Add tags', true, 'logo'),\\\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\\\n        copy: textNullable(\\\\n          'Card body copy:',\\\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          'logo'\\\\n        ),\\\\n        href: 'https://example.com',\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        Card: {\\\\n          image: false,\\\\n          eyebrow: 'Microsoft',\\\\n          heading: '',\\\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\\\n          alt: 'Image alt text',\\\\n          defaultSrc: imgXlg4x3,\\\\n          tagGroup: false,\\\\n          href: 'https://example.com',\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Card',\\\\n  decorators: [\\\\n    (story) => html`\\\\n      <div class=\\\\\\\"cds--grid\\\\\\\">\\\\n        <div class=\\\\\\\"cds--row\\\\\\\">\\\\n          <div\\\\n            class=\\\\\\\"cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter\\\\\\\">\\\\n            ${story()}\\\\n          </div>\\\\n        </div>\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    hasStoryPadding: true,\\\\n  },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":31},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":71},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":31},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":71}},\\\"pictogram\\\":{\\\"startLoc\\\":{\\\"col\\\":25,\\\"line\\\":119},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":156},\\\"startBody\\\":{\\\"col\\\":25,\\\"line\\\":119},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":156}},\\\"static\\\":{\\\"startLoc\\\":{\\\"col\\\":22,\\\"line\\\":208},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":246},\\\"startBody\\\":{\\\"col\\\":22,\\\"line\\\":208},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":246}},\\\"logo\\\":{\\\"startLoc\\\":{\\\"col\\\":20,\\\"line\\\":301},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":318},\\\"startBody\\\":{\\\"col\\\":20,\\\"line\\\":301},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":318}}}},\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":39},\"endLoc\":{\"col\":1,\"line\":79},\"startBody\":{\"col\":23,\"line\":39},\"endBody\":{\"col\":1,\"line\":79}},\"Pictogram\":{\"startLoc\":{\"col\":25,\"line\":127},\"endLoc\":{\"col\":1,\"line\":164},\"startBody\":{\"col\":25,\"line\":127},\"endBody\":{\"col\":1,\"line\":164}},\"Static\":{\"startLoc\":{\"col\":22,\"line\":216},\"endLoc\":{\"col\":1,\"line\":254},\"startBody\":{\"col\":22,\"line\":216},\"endBody\":{\"col\":1,\"line\":254}},\"Logo\":{\"startLoc\":{\"col\":20,\"line\":309},\"endLoc\":{\"col\":1,\"line\":326},\"startBody\":{\"col\":20,\"line\":309},\"endBody\":{\"col\":1,\"line\":326}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport '../../../internal/vendor/@carbon/web-components/components/tag/tag.js';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from '../../../internal/vendor/@carbon/web-components/icons/arrow--right/20';\\nimport { html } from 'lit';\\nimport { ifDefined } from 'lit/directives/if-defined.js';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <cds-tag type=\\\"green\\\"> Most popular </cds-tag>\\n    <cds-tag type=\\\"purple\\\"> Enterprise </cds-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = (args) => {\\n  const {\\n    image,\\n    href,\\n    alt,\\n    defaultSrc,\\n    heading,\\n    eyebrow,\\n    tagGroup,\\n    copy,\\n    footer,\\n    cardStyles,\\n  } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifDefined(href || undefined)}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        image: boolean('Add image:', false, 'Default'),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\n        copy: textNullable('Body copy:', '', 'Default'),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\n        cardStyles: select(\\n          'Card style:',\\n          ['Outlined card', 'Inverse card', 'none'],\\n          'none',\\n          'Default'\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = (args) => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\\n    args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifDefined(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"cds--card__pictogram\\\">\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\" />\\n      </svg>\\n    </dds-card>\\n  `;\\n};\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: () => {\\n        const pictogramPlacement = select(\\n          'Pictogram position:',\\n          pictogramPlacements,\\n          pictogramPlacements.top,\\n          'pictogram'\\n        );\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          'pictogram'\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable(\\n            'Heading:',\\n            'Aerospace and defence',\\n            'pictogram'\\n          ),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select(\\n            'Card style:',\\n            ['Outlined card', 'Inverse card', 'none'],\\n            'none',\\n            'pictogram'\\n          ),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = (args) => {\\n  const {\\n    image,\\n    alt,\\n    defaultSrc,\\n    outlinedCard,\\n    eyebrow,\\n    heading,\\n    copy,\\n    tagGroup,\\n    cta,\\n    ctaCopy,\\n  } = args?.Card ?? {};\\n  return html`\\n    <dds-card\\n      color-scheme=${outlinedCard ? 'light' : ''}\\n      ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => {\\n        const image = boolean('Add image:', false, 'static');\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          'static'\\n        );\\n        const tagGroup = boolean('Add tags:', false, 'static');\\n        const cta = boolean('Add CTA:', false, 'static');\\n        const ctaCopy = cta\\n          ? textNullable('CTA copy:', 'Sign up for the trial', 'static')\\n          : '';\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = (args) => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\\n    args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifDefined(href || undefined)}>\\n      <dds-image-logo\\n        slot=\\\"image\\\"\\n        alt=\\\"${ifDefined(alt)}\\\"\\n        default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, 'logo'),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          'logo'\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    (story) => html`\\n      <div class=\\\"cds--grid\\\">\\n        <div class=\\\"cds--row\\\">\\n          <div\\n            class=\\\"cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":31},\"endLoc\":{\"col\":1,\"line\":71},\"startBody\":{\"col\":23,\"line\":31},\"endBody\":{\"col\":1,\"line\":71}},\"Pictogram\":{\"startLoc\":{\"col\":25,\"line\":119},\"endLoc\":{\"col\":1,\"line\":156},\"startBody\":{\"col\":25,\"line\":119},\"endBody\":{\"col\":1,\"line\":156}},\"Static\":{\"startLoc\":{\"col\":22,\"line\":208},\"endLoc\":{\"col\":1,\"line\":246},\"startBody\":{\"col\":22,\"line\":208},\"endBody\":{\"col\":1,\"line\":246}},\"Logo\":{\"startLoc\":{\"col\":20,\"line\":301},\"endLoc\":{\"col\":1,\"line\":318},\"startBody\":{\"col\":20,\"line\":301},\"endBody\":{\"col\":1,\"line\":318}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport '../../image/image';\nimport '../../tag-group/tag-group';\nimport '../../../internal/vendor/@carbon/web-components/components/tag/tag.js';\nimport '../index';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport ArrowRight20 from '../../../internal/vendor/@carbon/web-components/icons/arrow--right/20';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\nimport { PICTOGRAM_PLACEMENT } from '../defs';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nconst tagGroupContent = html`\n  <dds-tag-group>\n    <cds-tag type=\"green\"> Most popular </cds-tag>\n    <cds-tag type=\"purple\"> Enterprise </cds-tag>\n  </dds-tag-group>\n`;\n\nexport const Default = (args) => {\n  const {\n    image,\n    href,\n    alt,\n    defaultSrc,\n    heading,\n    eyebrow,\n    tagGroup,\n    copy,\n    footer,\n    cardStyles,\n  } = args?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card'\n        ? 'inverse'\n        : cardStyles === 'Outlined card'\n        ? 'light'\n        : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifDefined(href || undefined)}>\n      ${image\n        ? html`\n            <dds-image\n              slot=\"image\"\n              alt=\"${ifDefined(alt)}\"\n              default-src=\"${ifDefined(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n};;;\n\nconst pictogramPlacements = {\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\n};\n\nDefault.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        image: boolean('Add image:', false, 'Default'),\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\n        copy: textNullable('Body copy:', '', 'Default'),\n        alt: 'Image alt text',\n        defaultSrc: imgXlg4x3,\n        tagGroup: boolean('Add tags:', false, 'Default'),\n        href: 'https://example.com',\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\n        cardStyles: select(\n          'Card style:',\n          ['Outlined card', 'Inverse card', 'none'],\n          'none',\n          'Default'\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n          footer: 'Learn more',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Pictogram = (args) => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\n    args?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement=\"${pictogramPlacement}\"\n      href=${ifDefined(href || undefined)}\n      color-scheme=${cardStyles === 'Inverse card'\n        ? 'inverse'\n        : cardStyles === 'Outlined card'\n        ? 'light'\n        : ''}\n      ?border=${cardStyles === 'Outlined card'}>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      <svg\n        slot=\"pictogram\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-autoid=\"dds--card__pictogram\"\n        aria-label=\"Pictogram description\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 32 32\"\n        role=\"img\"\n        class=\"cds--card__pictogram\">\n        <path\n          id=\"desktop_1_\"\n          d=\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\" />\n      </svg>\n    </dds-card>\n  `;\n};;;\n\nPictogram.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      PictogramCard: () => {\n        const pictogramPlacement = select(\n          'Pictogram position:',\n          pictogramPlacements,\n          pictogramPlacements.top,\n          'pictogram'\n        );\n        const copy = textNullable(\n          'Body copy:',\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          'pictogram'\n        );\n        return {\n          pictogramPlacement,\n          heading: textNullable(\n            'Heading:',\n            'Aerospace and defence',\n            'pictogram'\n          ),\n          copy,\n          href: 'https://example.com',\n          cardStyles: select(\n            'Card style:',\n            ['Outlined card', 'Inverse card', 'none'],\n            'none',\n            'pictogram'\n          ),\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        PictogramCard: {\n          pictogramPlacement: 'top',\n          heading: 'Aerospace and defence',\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          href: 'https://example.com',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Static = (args) => {\n  const {\n    image,\n    alt,\n    defaultSrc,\n    outlinedCard,\n    eyebrow,\n    heading,\n    copy,\n    tagGroup,\n    cta,\n    ctaCopy,\n  } = args?.Card ?? {};\n  return html`\n    <dds-card\n      color-scheme=${outlinedCard ? 'light' : ''}\n      ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image\n              slot=\"image\"\n              alt=\"${ifDefined(alt)}\"\n              default-src=\"${ifDefined(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href=\"https://www.example.com\">\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n};;;\n\nStatic.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => {\n        const image = boolean('Add image:', false, 'static');\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\n        const heading = textNullable('Heading:', 'Free trial', 'static');\n        const copy = textNullable(\n          'Body copy:',\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\n            'All trial registrants are restricted to one free trial per computer per user.',\n          'static'\n        );\n        const tagGroup = boolean('Add tags:', false, 'static');\n        const cta = boolean('Add CTA:', false, 'static');\n        const ctaCopy = cta\n          ? textNullable('CTA copy:', 'Sign up for the trial', 'static')\n          : '';\n        const outlinedCard = boolean('Outlined card:', true, 'static');\n        return {\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          image,\n          eyebrow,\n          heading,\n          copy,\n          tagGroup,\n          cta,\n          ctaCopy,\n          outlinedCard,\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          cta: false,\n          ctaCopy: 'Sign up for the trial',\n          outlinedCard: 'true',\n        },\n      },\n    },\n  },\n};\n\nexport const Logo = (args) => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\n    args?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifDefined(href || undefined)}>\n      <dds-image-logo\n        slot=\"image\"\n        alt=\"${ifDefined(alt)}\"\n        default-src=\"${ifDefined(defaultSrc)}\"></dds-image-logo>\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n};\n\nLogo.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        alt: 'Image alt text',\n        defaultSrc: logoMicrosoft2x1,\n        tagGroup: boolean('Add tags', true, 'logo'),\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\n        copy: textNullable(\n          'Card body copy:',\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          'logo'\n        ),\n        href: 'https://example.com',\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Microsoft',\n          heading: '',\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Components/Card',\n  decorators: [\n    (story) => html`\n      <div class=\"cds--grid\">\n        <div class=\"cds--row\">\n          <div\n            class=\"cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter\">\n            ${story()}\n          </div>\n        </div>\n      </div>\n    `,\n  ],\n  parameters: {\"storySource\":{\"source\":\"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport '../../image/image';\\nimport '../../tag-group/tag-group';\\nimport '../../../internal/vendor/@carbon/web-components/components/tag/tag.js';\\nimport '../index';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport ArrowRight20 from '../../../internal/vendor/@carbon/web-components/icons/arrow--right/20';\\nimport { html } from 'lit';\\nimport { ifDefined } from 'lit/directives/if-defined.js';\\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\\nimport { PICTOGRAM_PLACEMENT } from '../defs';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\nconst tagGroupContent = html`\\n  <dds-tag-group>\\n    <cds-tag type=\\\"green\\\"> Most popular </cds-tag>\\n    <cds-tag type=\\\"purple\\\"> Enterprise </cds-tag>\\n  </dds-tag-group>\\n`;\\n\\nexport const Default = (args) => {\\n  const {\\n    image,\\n    href,\\n    alt,\\n    defaultSrc,\\n    heading,\\n    eyebrow,\\n    tagGroup,\\n    copy,\\n    footer,\\n    cardStyles,\\n  } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifDefined(href || undefined)}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nconst pictogramPlacements = {\\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\\n};\\n\\nDefault.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        image: boolean('Add image:', false, 'Default'),\\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\\n        copy: textNullable('Body copy:', '', 'Default'),\\n        alt: 'Image alt text',\\n        defaultSrc: imgXlg4x3,\\n        tagGroup: boolean('Add tags:', false, 'Default'),\\n        href: 'https://example.com',\\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\\n        cardStyles: select(\\n          'Card style:',\\n          ['Outlined card', 'Inverse card', 'none'],\\n          'none',\\n          'Default'\\n        ),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n          footer: 'Learn more',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Pictogram = (args) => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\\n    args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifDefined(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"cds--card__pictogram\\\">\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\" />\\n      </svg>\\n    </dds-card>\\n  `;\\n};\\n\\nPictogram.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      PictogramCard: () => {\\n        const pictogramPlacement = select(\\n          'Pictogram position:',\\n          pictogramPlacements,\\n          pictogramPlacements.top,\\n          'pictogram'\\n        );\\n        const copy = textNullable(\\n          'Body copy:',\\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          'pictogram'\\n        );\\n        return {\\n          pictogramPlacement,\\n          heading: textNullable(\\n            'Heading:',\\n            'Aerospace and defence',\\n            'pictogram'\\n          ),\\n          copy,\\n          href: 'https://example.com',\\n          cardStyles: select(\\n            'Card style:',\\n            ['Outlined card', 'Inverse card', 'none'],\\n            'none',\\n            'pictogram'\\n          ),\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        PictogramCard: {\\n          pictogramPlacement: 'top',\\n          heading: 'Aerospace and defence',\\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\\n          href: 'https://example.com',\\n          cardStyles: 'none',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Static = (args) => {\\n  const {\\n    image,\\n    alt,\\n    defaultSrc,\\n    outlinedCard,\\n    eyebrow,\\n    heading,\\n    copy,\\n    tagGroup,\\n    cta,\\n    ctaCopy,\\n  } = args?.Card ?? {};\\n  return html`\\n    <dds-card\\n      color-scheme=${outlinedCard ? 'light' : ''}\\n      ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n};\\n\\nStatic.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => {\\n        const image = boolean('Add image:', false, 'static');\\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\\n        const heading = textNullable('Heading:', 'Free trial', 'static');\\n        const copy = textNullable(\\n          'Body copy:',\\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\\n            'All trial registrants are restricted to one free trial per computer per user.',\\n          'static'\\n        );\\n        const tagGroup = boolean('Add tags:', false, 'static');\\n        const cta = boolean('Add CTA:', false, 'static');\\n        const ctaCopy = cta\\n          ? textNullable('CTA copy:', 'Sign up for the trial', 'static')\\n          : '';\\n        const outlinedCard = boolean('Outlined card:', true, 'static');\\n        return {\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          image,\\n          eyebrow,\\n          heading,\\n          copy,\\n          tagGroup,\\n          cta,\\n          ctaCopy,\\n          outlinedCard,\\n        };\\n      },\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Industry',\\n          heading: 'Aerospace and defence',\\n          copy: '',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          cta: false,\\n          ctaCopy: 'Sign up for the trial',\\n          outlinedCard: 'true',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const Logo = (args) => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\\n    args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifDefined(href || undefined)}>\\n      <dds-image-logo\\n        slot=\\\"image\\\"\\n        alt=\\\"${ifDefined(alt)}\\\"\\n        default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n};\\n\\nLogo.story = {\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      Card: () => ({\\n        alt: 'Image alt text',\\n        defaultSrc: logoMicrosoft2x1,\\n        tagGroup: boolean('Add tags', true, 'logo'),\\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\\n        copy: textNullable(\\n          'Card body copy:',\\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          'logo'\\n        ),\\n        href: 'https://example.com',\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        Card: {\\n          image: false,\\n          eyebrow: 'Microsoft',\\n          heading: '',\\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\\n          alt: 'Image alt text',\\n          defaultSrc: imgXlg4x3,\\n          tagGroup: false,\\n          href: 'https://example.com',\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: 'Components/Card',\\n  decorators: [\\n    (story) => html`\\n      <div class=\\\"cds--grid\\\">\\n        <div class=\\\"cds--row\\\">\\n          <div\\n            class=\\\"cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter\\\">\\n            ${story()}\\n          </div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    hasStoryPadding: true,\\n  },\\n};\\n\",\"locationsMap\":{\"default\":{\"startLoc\":{\"col\":23,\"line\":31},\"endLoc\":{\"col\":1,\"line\":71},\"startBody\":{\"col\":23,\"line\":31},\"endBody\":{\"col\":1,\"line\":71}},\"pictogram\":{\"startLoc\":{\"col\":25,\"line\":119},\"endLoc\":{\"col\":1,\"line\":156},\"startBody\":{\"col\":25,\"line\":119},\"endBody\":{\"col\":1,\"line\":156}},\"static\":{\"startLoc\":{\"col\":22,\"line\":208},\"endLoc\":{\"col\":1,\"line\":246},\"startBody\":{\"col\":22,\"line\":208},\"endBody\":{\"col\":1,\"line\":246}},\"logo\":{\"startLoc\":{\"col\":20,\"line\":301},\"endLoc\":{\"col\":1,\"line\":318},\"startBody\":{\"col\":20,\"line\":301},\"endBody\":{\"col\":1,\"line\":318}}}},\n    ...readme.parameters,\n    hasStoryPadding: true,\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => {\\n  const {\\n    image,\\n    href,\\n    alt,\\n    defaultSrc,\\n    heading,\\n    eyebrow,\\n    tagGroup,\\n    copy,\\n    footer,\\n    cardStyles,\\n  } = args?.Card ?? {};\\n  \\n  return html`\\n    <dds-card\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}\\n      href=${ifDefined(href || undefined)}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <dds-card-footer>\\n        ${footer}${ArrowRight20({ slot: 'icon' })}\\n      </dds-card-footer>\\n    </dds-card>\\n  `;\\n}\" }, ...Default.parameters };\nPictogram.parameters = { storySource: { source: \"(args) => {\\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\\n    args?.PictogramCard ?? {};\\n  return html`\\n    <dds-card\\n      pictogram-placement=\\\"${pictogramPlacement}\\\"\\n      href=${ifDefined(href || undefined)}\\n      color-scheme=${cardStyles === 'Inverse card'\\n        ? 'inverse'\\n        : cardStyles === 'Outlined card'\\n        ? 'light'\\n        : ''}\\n      ?border=${cardStyles === 'Outlined card'}>\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      <svg\\n        slot=\\\"pictogram\\\"\\n        focusable=\\\"false\\\"\\n        preserveAspectRatio=\\\"xMidYMid meet\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        data-autoid=\\\"dds--card__pictogram\\\"\\n        aria-label=\\\"Pictogram description\\\"\\n        width=\\\"48\\\"\\n        height=\\\"48\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        role=\\\"img\\\"\\n        class=\\\"cds--card__pictogram\\\">\\n        <path\\n          id=\\\"desktop_1_\\\"\\n          d=\\\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\\\" />\\n      </svg>\\n    </dds-card>\\n  `;\\n}\" }, ...Pictogram.parameters };\nStatic.parameters = { storySource: { source: \"(args) => {\\n  const {\\n    image,\\n    alt,\\n    defaultSrc,\\n    outlinedCard,\\n    eyebrow,\\n    heading,\\n    copy,\\n    tagGroup,\\n    cta,\\n    ctaCopy,\\n  } = args?.Card ?? {};\\n  return html`\\n    <dds-card\\n      color-scheme=${outlinedCard ? 'light' : ''}\\n      ?border=${outlinedCard}>\\n      ${image\\n        ? html`\\n            <dds-image\\n              slot=\\\"image\\\"\\n              alt=\\\"${ifDefined(alt)}\\\"\\n              default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image>\\n          `\\n        : ``}\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      <dds-card-heading>${heading}</dds-card-heading>\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n      ${cta\\n        ? html`\\n            <dds-card-footer href=\\\"https://www.example.com\\\">\\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\\n            </dds-card-footer>\\n          `\\n        : ``}\\n    </dds-card>\\n  `;\\n}\" }, ...Static.parameters };\nLogo.parameters = { storySource: { source: \"(args) => {\\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\\n    args?.Card ?? {};\\n  return html`\\n    <dds-card border logo href=${ifDefined(href || undefined)}>\\n      <dds-image-logo\\n        slot=\\\"image\\\"\\n        alt=\\\"${ifDefined(alt)}\\\"\\n        default-src=\\\"${ifDefined(defaultSrc)}\\\"></dds-image-logo>\\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\\n      ${copy ? html` <p>${copy}</p> ` : ``}\\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\\n\\n      <dds-card-footer></dds-card-footer>\\n    </dds-card>\\n  `;\\n}\" }, ...Logo.parameters };",locationsMap:{default:{startLoc:{col:23,line:47},endLoc:{col:1,line:87},startBody:{col:23,line:47},endBody:{col:1,line:87}},pictogram:{startLoc:{col:25,line:135},endLoc:{col:1,line:172},startBody:{col:25,line:135},endBody:{col:1,line:172}},static:{startLoc:{col:22,line:224},endLoc:{col:1,line:262},startBody:{col:22,line:224},endBody:{col:1,line:262}},logo:{startLoc:{col:20,line:317},endLoc:{col:1,line:334},startBody:{col:20,line:317},endBody:{col:1,line:334}}}}},"storySource",{source:"/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport '../../image/image';\nimport '../../tag-group/tag-group';\nimport '../../../internal/vendor/@carbon/web-components/components/tag/tag.js';\nimport '../index';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport ArrowRight20 from '../../../internal/vendor/@carbon/web-components/icons/arrow--right/20';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport imgXlg4x3 from '../../../../../storybook-images/assets/1312/fpo--4x3--1312x984--003.jpg';\nimport logoMicrosoft2x1 from '../../../../../storybook-images/assets/logos/logo-microsoft--2x1.png';\nimport { PICTOGRAM_PLACEMENT } from '../defs';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\nconst tagGroupContent = html`\n  <dds-tag-group>\n    <cds-tag type=\"green\"> Most popular </cds-tag>\n    <cds-tag type=\"purple\"> Enterprise </cds-tag>\n  </dds-tag-group>\n`;\n\nexport const Default = (args) => {\n  const {\n    image,\n    href,\n    alt,\n    defaultSrc,\n    heading,\n    eyebrow,\n    tagGroup,\n    copy,\n    footer,\n    cardStyles,\n  } = args?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card'\n        ? 'inverse'\n        : cardStyles === 'Outlined card'\n        ? 'light'\n        : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifDefined(href || undefined)}>\n      ${image\n        ? html`\n            <dds-image\n              slot=\"image\"\n              alt=\"${ifDefined(alt)}\"\n              default-src=\"${ifDefined(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n};\n\nconst pictogramPlacements = {\n  [PICTOGRAM_PLACEMENT.TOP]: PICTOGRAM_PLACEMENT.TOP,\n  [PICTOGRAM_PLACEMENT.BOTTOM]: PICTOGRAM_PLACEMENT.BOTTOM,\n};\n\nDefault.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        image: boolean('Add image:', false, 'Default'),\n        eyebrow: textNullable('Eyebrow:', 'Industry', 'Default'),\n        heading: textNullable('Heading:', 'Aerospace and defence', 'Default'),\n        copy: textNullable('Body copy:', '', 'Default'),\n        alt: 'Image alt text',\n        defaultSrc: imgXlg4x3,\n        tagGroup: boolean('Add tags:', false, 'Default'),\n        href: 'https://example.com',\n        footer: textNullable('CTA:', 'Learn more', 'Default'),\n        cardStyles: select(\n          'Card style:',\n          ['Outlined card', 'Inverse card', 'none'],\n          'none',\n          'Default'\n        ),\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n          footer: 'Learn more',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Pictogram = (args) => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\n    args?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement=\"${pictogramPlacement}\"\n      href=${ifDefined(href || undefined)}\n      color-scheme=${cardStyles === 'Inverse card'\n        ? 'inverse'\n        : cardStyles === 'Outlined card'\n        ? 'light'\n        : ''}\n      ?border=${cardStyles === 'Outlined card'}>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      <svg\n        slot=\"pictogram\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-autoid=\"dds--card__pictogram\"\n        aria-label=\"Pictogram description\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 32 32\"\n        role=\"img\"\n        class=\"cds--card__pictogram\">\n        <path\n          id=\"desktop_1_\"\n          d=\"M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z\" />\n      </svg>\n    </dds-card>\n  `;\n};\n\nPictogram.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      PictogramCard: () => {\n        const pictogramPlacement = select(\n          'Pictogram position:',\n          pictogramPlacements,\n          pictogramPlacements.top,\n          'pictogram'\n        );\n        const copy = textNullable(\n          'Body copy:',\n          `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          'pictogram'\n        );\n        return {\n          pictogramPlacement,\n          heading: textNullable(\n            'Heading:',\n            'Aerospace and defence',\n            'pictogram'\n          ),\n          copy,\n          href: 'https://example.com',\n          cardStyles: select(\n            'Card style:',\n            ['Outlined card', 'Inverse card', 'none'],\n            'none',\n            'pictogram'\n          ),\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        PictogramCard: {\n          pictogramPlacement: 'top',\n          heading: 'Aerospace and defence',\n          copy: `Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n           Ut enim ad minim veniam, quis nostrud exercitation.`,\n          href: 'https://example.com',\n          cardStyles: 'none',\n        },\n      },\n    },\n  },\n};\n\nexport const Static = (args) => {\n  const {\n    image,\n    alt,\n    defaultSrc,\n    outlinedCard,\n    eyebrow,\n    heading,\n    copy,\n    tagGroup,\n    cta,\n    ctaCopy,\n  } = args?.Card ?? {};\n  return html`\n    <dds-card\n      color-scheme=${outlinedCard ? 'light' : ''}\n      ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image\n              slot=\"image\"\n              alt=\"${ifDefined(alt)}\"\n              default-src=\"${ifDefined(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href=\"https://www.example.com\">\n              ${ctaCopy}${ArrowRight20({ slot: 'icon' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n};\n\nStatic.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => {\n        const image = boolean('Add image:', false, 'static');\n        const eyebrow = textNullable('Eyebrow:', 'SPSS Statistics', 'static');\n        const heading = textNullable('Heading:', 'Free trial', 'static');\n        const copy = textNullable(\n          'Body copy:',\n          'Enjoy full SPSS Statistics capabilities including all add-ons. ' +\n            'All trial registrants are restricted to one free trial per computer per user.',\n          'static'\n        );\n        const tagGroup = boolean('Add tags:', false, 'static');\n        const cta = boolean('Add CTA:', false, 'static');\n        const ctaCopy = cta\n          ? textNullable('CTA copy:', 'Sign up for the trial', 'static')\n          : '';\n        const outlinedCard = boolean('Outlined card:', true, 'static');\n        return {\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          image,\n          eyebrow,\n          heading,\n          copy,\n          tagGroup,\n          cta,\n          ctaCopy,\n          outlinedCard,\n        };\n      },\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Industry',\n          heading: 'Aerospace and defence',\n          copy: '',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          cta: false,\n          ctaCopy: 'Sign up for the trial',\n          outlinedCard: 'true',\n        },\n      },\n    },\n  },\n};\n\nexport const Logo = (args) => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\n    args?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifDefined(href || undefined)}>\n      <dds-image-logo\n        slot=\"image\"\n        alt=\"${ifDefined(alt)}\"\n        default-src=\"${ifDefined(defaultSrc)}\"></dds-image-logo>\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n};\n\nLogo.story = {\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      Card: () => ({\n        alt: 'Image alt text',\n        defaultSrc: logoMicrosoft2x1,\n        tagGroup: boolean('Add tags', true, 'logo'),\n        eyebrow: textNullable('Card Eyebrow:', 'Microsoft', 'logo'),\n        heading: textNullable('Card Heading (optional):', '', 'logo'),\n        copy: textNullable(\n          'Card body copy:',\n          'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          'logo'\n        ),\n        href: 'https://example.com',\n      }),\n    },\n    propsSet: {\n      default: {\n        Card: {\n          image: false,\n          eyebrow: 'Microsoft',\n          heading: '',\n          copy: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\n          alt: 'Image alt text',\n          defaultSrc: imgXlg4x3,\n          tagGroup: false,\n          href: 'https://example.com',\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: 'Components/Card',\n  decorators: [\n    (story) => html`\n      <div class=\"cds--grid\">\n        <div class=\"cds--row\">\n          <div\n            class=\"cds--col-sm-4 cds--col-md-3 cds--col-lg-6 cds--col-xlg-4 cds--no-gutter\">\n            ${story()}\n          </div>\n        </div>\n      </div>\n    `,\n  ],\n  parameters: {\n    ...readme.parameters,\n    hasStoryPadding: true,\n  },\n};\n",locationsMap:{default:{startLoc:{col:23,line:31},endLoc:{col:1,line:71},startBody:{col:23,line:31},endBody:{col:1,line:71}},pictogram:{startLoc:{col:25,line:119},endLoc:{col:1,line:156},startBody:{col:25,line:119},endBody:{col:1,line:156}},static:{startLoc:{col:22,line:208},endLoc:{col:1,line:246},startBody:{col:22,line:208},endBody:{col:1,line:246}},logo:{startLoc:{col:20,line:301},endLoc:{col:1,line:318},startBody:{col:20,line:301},endBody:{col:1,line:318}}}}),Y.parameters),{},{hasStoryPadding:!0})};Sn.parameters=Cn({storySource:{source:"(args) => {\n  const {\n    image,\n    href,\n    alt,\n    defaultSrc,\n    heading,\n    eyebrow,\n    tagGroup,\n    copy,\n    footer,\n    cardStyles,\n  } = args?.Card ?? {};\n  \n  return html`\n    <dds-card\n      color-scheme=${cardStyles === 'Inverse card'\n        ? 'inverse'\n        : cardStyles === 'Outlined card'\n        ? 'light'\n        : ''}\n      ?border=${cardStyles === 'Outlined card'}\n      href=${ifDefined(href || undefined)}>\n      ${image\n        ? html`\n            <dds-image\n              slot=\"image\"\n              alt=\"${ifDefined(alt)}\"\n              default-src=\"${ifDefined(defaultSrc)}\"></dds-image>\n          `\n        : ``}\n      <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      <dds-card-footer>\n        ${footer}${ArrowRight20({ slot: 'icon' })}\n      </dds-card-footer>\n    </dds-card>\n  `;\n}"}},Sn.parameters),On.parameters=Cn({storySource:{source:'(args) => {\n  const { href, heading, copy, tagGroup, pictogramPlacement, cardStyles } =\n    args?.PictogramCard ?? {};\n  return html`\n    <dds-card\n      pictogram-placement="${pictogramPlacement}"\n      href=${ifDefined(href || undefined)}\n      color-scheme=${cardStyles === \'Inverse card\'\n        ? \'inverse\'\n        : cardStyles === \'Outlined card\'\n        ? \'light\'\n        : \'\'}\n      ?border=${cardStyles === \'Outlined card\'}>\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      <svg\n        slot="pictogram"\n        focusable="false"\n        preserveAspectRatio="xMidYMid meet"\n        xmlns="http://www.w3.org/2000/svg"\n        data-autoid="dds--card__pictogram"\n        aria-label="Pictogram description"\n        width="48"\n        height="48"\n        viewBox="0 0 32 32"\n        role="img"\n        class="cds--card__pictogram">\n        <path\n          id="desktop_1_"\n          d="M23,29.36H9v-0.72h6.64v-4.28H3c-1.301,0-2.36-1.059-2.36-2.36V5c0-1.301,1.059-2.36,2.36-2.36h26\n          c1.302,0,2.36,1.059,2.36,2.36v17c0,1.302-1.059,2.36-2.36,2.36H16.36v4.279H23V29.36z M1.36,19.36V22c0,\n          0.904,0.736,1.64,1.64,1.64h26c0.904,0,1.64-0.735,1.64-1.64v-2.64H1.36z M1.36,\n          18.64h29.28V5c0-0.904-0.735-1.64-1.64-1.64H3C2.096,3.36,1.36,4.096,1.36,5V18.64z" />\n      </svg>\n    </dds-card>\n  `;\n}'}},On.parameters),Pn.parameters=Cn({storySource:{source:'(args) => {\n  const {\n    image,\n    alt,\n    defaultSrc,\n    outlinedCard,\n    eyebrow,\n    heading,\n    copy,\n    tagGroup,\n    cta,\n    ctaCopy,\n  } = args?.Card ?? {};\n  return html`\n    <dds-card\n      color-scheme=${outlinedCard ? \'light\' : \'\'}\n      ?border=${outlinedCard}>\n      ${image\n        ? html`\n            <dds-image\n              slot="image"\n              alt="${ifDefined(alt)}"\n              default-src="${ifDefined(defaultSrc)}"></dds-image>\n          `\n        : ``}\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\n      <dds-card-heading>${heading}</dds-card-heading>\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n      ${cta\n        ? html`\n            <dds-card-footer href="https://www.example.com">\n              ${ctaCopy}${ArrowRight20({ slot: \'icon\' })}\n            </dds-card-footer>\n          `\n        : ``}\n    </dds-card>\n  `;\n}'}},Pn.parameters),jn.parameters=Cn({storySource:{source:'(args) => {\n  const { alt, defaultSrc, eyebrow, heading, href, copy, tagGroup } =\n    args?.Card ?? {};\n  return html`\n    <dds-card border logo href=${ifDefined(href || undefined)}>\n      <dds-image-logo\n        slot="image"\n        alt="${ifDefined(alt)}"\n        default-src="${ifDefined(defaultSrc)}"></dds-image-logo>\n      ${eyebrow ? html` <dds-card-eyebrow>${eyebrow}</dds-card-eyebrow> ` : ``}\n      ${heading ? html` <dds-card-heading>${heading}</dds-card-heading> ` : ``}\n      ${copy ? html` <p>${copy}</p> ` : ``}\n      ${tagGroup ? html` ${tagGroupContent} ` : ``}\n\n      <dds-card-footer></dds-card-footer>\n    </dds-card>\n  `;\n}'}},jn.parameters)}}]);