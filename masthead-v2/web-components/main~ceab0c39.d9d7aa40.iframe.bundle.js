/*! For license information please see main~ceab0c39.d9d7aa40.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{"./src/components/masthead/__stories__/README.stories.mdx":function(e,t,n){"use strict";n("../../node_modules/core-js/modules/es.object.keys.js"),n("../../node_modules/core-js/modules/es.array.index-of.js"),n("../../node_modules/core-js/modules/es.symbol.js"),n("../../node_modules/core-js/modules/es.object.assign.js"),n("../../node_modules/core-js/modules/es.function.bind.js"),n("../../node_modules/core-js/modules/es.object.define-property.js"),n("../../node_modules/core-js/modules/es.array.filter.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),n("../../node_modules/core-js/modules/es.array.for-each.js"),n("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),n("../../node_modules/core-js/modules/es.object.define-properties.js"),n("../../node_modules/react/index.js");var a=n("../../node_modules/@mdx-js/react/dist/esm.js"),s=n("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),o=n("../../node_modules/@storybook/addon-docs/blocks.js"),l=n("../../docs/contributing-license.md"),i=(n("./src/globals/internal/storybook-cdn.ts"),["components"]);function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(){return h=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},h.apply(this,arguments)}function d(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var m={};function p(e){var t=e.components,n=d(e,i);return Object(a.b)("wrapper",h({},m,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"masthead"},"Masthead"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The masthead component is a required navigational pattern for IBM.com that\ndisplays consistently at the top of each page. It also includes search and\nprofile services for IBM.com.")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"ðŸ’¡ Check our\n",Object(a.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/masthead",target:"_blank",rel:"nofollow noopener noreferrer"},"CodeSandbox"),"\nexample implementation.")),Object(a.b)("h3",{id:"masthead-l0"},"Masthead (L0):"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/masthead",target:"_blank",rel:"nofollow noopener noreferrer"},Object(a.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(a.b)("h3",{id:"masthead-l1"},"Masthead (L1):"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/masthead-l1",target:"_blank",rel:"nofollow noopener noreferrer"},Object(a.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(a.b)("h2",{id:"getting-started"},"Getting Started"),Object(a.b)("h5",{id:"note-masthead-uses-the-carbon-white-theme-by-design-using-other-themes-will-not-change-the-masthead-color-scheme"},"Note: Masthead uses the Carbon White theme by design. Using other themes will not change the Masthead color scheme."),Object(a.b)("h3",{id:"js-via-import"},"JS (via import)"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/masthead/masthead-container.js';\n```<Description markdown={`\\${cdnJs({ components: ['masthead'] })}`} />\n<Description markdown={`${cdnCss()}`} />\n\n### HTML\n\n```html\n<dds-masthead-container></dds-masthead-container>\n")),Object(a.b)("h4",{id:"adopting-masthead-v2-with-new-data-endpoint"},"Adopting Masthead v2 with new data endpoint"),Object(a.b)("h6",{id:"js-via-cdn"},"JS (via CDN):"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'// Alpha tag using changes from the feature branch (feat/masthead-v2)\n<script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v2/alpha/masthead.min.js"><\/script>\n')),Object(a.b)("h6",{id:"markup"},"Markup:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container\n  data-endpoint="/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2"\n  auth-method="profile-api"\n  has-contact="false"\n></dds-masthead-container>\n')),Object(a.b)("h4",{id:"adopting-masthead-v2-with-cloud-data-endpoint"},"Adopting Masthead v2 with Cloud data endpoint"),Object(a.b)("h6",{id:"js-via-cdn-1"},"JS (via CDN):"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'// Alpha tag using changes from the feature branch (feat/masthead-v2)\n<script type="module" src="https://1.www.s81c.com/common/carbon-for-ibm-dotcom/tag/v2/alpha/masthead.min.js"><\/script>\n')),Object(a.b)("h6",{id:"markup-1"},"Markup:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container\n  data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"\n  platform="Cloud"\n  auth-method="cookie"\n  has-contact="true"\n></dds-masthead-container>\n')),Object(a.b)("h4",{id:"setting-platform"},"Setting Platform"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container platform="Lorem Ipsum"></dds-masthead-container>\n')),Object(a.b)("h4",{id:"setting-platform-url"},"Setting Platform URL"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"platformUrl")," property accepts a single URL as string or an object with a specific URL for each locale.\nThis property has to be set via javascript."),Object(a.b)("h6",{id:"setting-a-single-platform-url"},"Setting a single platform URL:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container platform="Lorem Ipsum" id="masthead-container"></dds-masthead-container>\n')),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"const singleUrl = 'https://www.example.com';\n\ndocument.getElementById('masthead-container').platformUrl = singleUrl;\n")),Object(a.b)("h6",{id:"setting-multiple-platform-urls-with-an-object"},"Setting multiple platform URLs with an object:"),Object(a.b)("p",null,"With an object, the component will show a specific URL depending on the locale:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"const urlObject = {\n  'en-US': {\n    url: 'https://www.example.com',\n  },\n  'fr-FR': {\n    url: 'https://www.example.com/fr-fr/sample',\n  },\n  'es-MX': {\n    url: 'https://www.example.com/es-mx/sample',\n  },\n};\n\ndocument.getElementById('masthead-container').platformUrl = urlObject;\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container platform="Lorem Ipsum" id="masthead-container"></dds-masthead-container>\n')),Object(a.b)("h4",{id:"custom-navigation"},"Custom Navigation"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"const links = [...menu items...];\ndocument.getElementById('masthead-container').navLinks = links;\n")),Object(a.b)("h4",{id:"using-l1-nav"},"Using L1 nav"),Object(a.b)("p",null,"To use L1 nav, set ",Object(a.b)("inlineCode",{parentName:"p"},"l1Data")," prop. ",Object(a.b)("inlineCode",{parentName:"p"},"l1Data")," prop should be an\nobject that contains the navigation data of L1 nav:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascipt"},"const l1Data = {\n  platform: {\n    name: 'Stock Charts',\n    url: 'https://example.com/',\n  },\n  menuItems: (The nav links),\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container id="masthead-container"></dds-masthead-container>\n')),Object(a.b)("p",null,"To set a custom endpoint for the translation service to fetch from, set either the ",Object(a.b)("inlineCode",{parentName:"p"},"data-endpoint")," attribute like below or ",Object(a.b)("inlineCode",{parentName:"p"},"DDS_TRANSLATION_ENDPOINT")," environment variable."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container data-endpoint="/custom-endpoint"></dds-masthead-container>\n')),Object(a.b)("h3",{id:"setting-the-active-menu-item"},"Setting the active menu item"),Object(a.b)("p",null,"The active menu item receives a unique style treatment to indicate where the current page is within the navigation hierarchy."),Object(a.b)("h5",{id:"manually"},"Manually"),Object(a.b)("p",null,"Manually set the active item by using the ",Object(a.b)("inlineCode",{parentName:"p"},"selected-menu-item")," property. See ",Object(a.b)("a",{parentName:"p",href:"#props"},"the Props table"),"."),Object(a.b)("h5",{id:"automatically"},"Automatically"),Object(a.b)("p",null,"The first menu item whose ",Object(a.b)("inlineCode",{parentName:"p"},"href")," value matches the browser window's current URL will automatically be marked active if the ",Object(a.b)("inlineCode",{parentName:"p"},"selected-menu-item")," property has not been set."),Object(a.b)("p",null,"If no other menu items are marked active and the optional ",Object(a.b)("inlineCode",{parentName:"p"},"platformUrl")," property has been set, the platform link will be marked active."),Object(a.b)("h3",{id:"understanding-the-different-authentication-method-types"},"Understanding the different authentication method types"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"<dds-masthead-container>")," and ",Object(a.b)("inlineCode",{parentName:"p"},"<dds-masthead-composite>")," components both expose the ",Object(a.b)("inlineCode",{parentName:"p"},"auth-method")," property which allows the adopters to define the authentication method based on their content ecosystems and renders the ultity menu items (located on the top right-hand area) based on the defined auth method. See below for more context on each available value."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},'auth-method="profile-api"')," - The default authentication method used on the global masthead to display links to the MyIBM profile."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},'auth-method="cookie"')," - This authentication method checks for the cookie name value return from the ",Object(a.b)("inlineCode",{parentName:"li"},"cloud.ibm.com")," console application (eg. ",Object(a.b)("inlineCode",{parentName:"li"},"com.ibm.cloud.iam.LoggedIn.prod"),") and see if it returns ",Object(a.b)("inlineCode",{parentName:"li"},"1")," or ",Object(a.b)("inlineCode",{parentName:"li"},"0"),'. This method is designed and intended for "Cloud" web segment usage only.'),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},'auth-method="docs-api"')," - This authentication method checks against the console API user login response. This method is designed and intended for Cloud Docs (",Object(a.b)("a",{parentName:"li",href:"https://cloud.ibm.com",target:"_blank",rel:"nofollow noopener noreferrer"},"https://cloud.ibm.com"),") team usage only.")),Object(a.b)("h2",{id:"using-custom-search-with-typeahead-api"},"Using custom search with typeahead API"),Object(a.b)("p",null,"Using a search API other than the default provided from IBM Search is supported."),Object(a.b)("p",null,"First, add the ",Object(a.b)("inlineCode",{parentName:"p"},"custom-typeahead-api")," attribute into the masthead and set it to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-masthead-container custom-typeahead-api="true"></dds-masthead-container>\n')),Object(a.b)("p",null,"As an example, we will be using the IBM Docs API to fetch the data, retrieving an array of result suggestions."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"async function customTypeaheadApiFunction(searchVal) {\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=en&categories=&limit=6`)\n    .then(response => response.json())\n    .then(data => {\n      let searchResults = [data.hints];\n      return searchResults;\n    });\n}\n")),Object(a.b)("p",null,"To query the current masthead search input, we need to create an event listener to listen for the ",Object(a.b)("inlineCode",{parentName:"p"},"dds-search-with-typeahead-input")," event.\nOnce captured, we need to call our asynchronous function to fetch the custom API results based on the query. Once the results are retrieved,\na new custom event ",Object(a.b)("inlineCode",{parentName:"p"},"dds-custom-typeahead-api-results")," needs to be dispatched containing the results for the component to render the search suggestions."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"document.addEventListener('dds-search-with-typeahead-input', async e => {\n  const results = await customTypeaheadApiFunction(e.detail.value);\n  document.dispatchEvent(new CustomEvent('dds-custom-typeahead-api-results', { detail: results }));\n});\n")),Object(a.b)("h3",{id:"grouped-search"},"Grouped Search"),Object(a.b)("p",null,"Some APIs contain grouped results in addition to regular search suggestions, which can also be displayed upon search."),Object(a.b)("p",null,"As before, create a function that fetches the query and make sure to include a JSON object containing the section's ",Object(a.b)("inlineCode",{parentName:"p"},"title"),"\nand the array of retrieved section suggestions in ",Object(a.b)("inlineCode",{parentName:"p"},"items"),". In the example below, the section ",Object(a.b)("inlineCode",{parentName:"p"},"Product pages")," is added to the\nresults array."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"async function customTypeaheadApiFunction(searchVal) {\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=en&categories=&limit=6`)\n    .then(response => response.json())\n    .then(data => {\n      let searchResults = [\n        data.hints,\n\n        // optional category results fetched from API\n        {\n          title: 'Product pages',\n          items: data.products,\n        },\n      ];\n      return searchResults;\n    });\n}\n")),Object(a.b)("p",null,"As mentioned above, the two events ",Object(a.b)("inlineCode",{parentName:"p"},"dds-search-with-typeahead-input")," and ",Object(a.b)("inlineCode",{parentName:"p"},"dds-custom-typeahead-api-results")," must be handled for\nsuggestions to be rendered -- the same code for the event listener can be reused."),Object(a.b)("h4",{id:"note"},"Note"),Object(a.b)("p",null,"The API results must match the following structure:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"[\n  ['result 1', 'result 2', 'result 3'],\n  {\n    title: 'Example group 1'\n    items: ['result a', 'result b', 'result c']\n  },\n  {\n    title: \"Example group 2\",\n    items: ['result d', 'result e', 'result f']\n  }\n]\n")),Object(a.b)("p",null,"Note that only the first array element is necessary to render the basic search suggestions, the following JSON objects are optional Grouped sections."),Object(a.b)("h2",{id:"props"},"Props"),Object(a.b)("h3",{id:"dds-masthead-containerdds-masthead-composite"},Object(a.b)("inlineCode",{parentName:"h3"},"<dds-masthead-container>"),"/",Object(a.b)("inlineCode",{parentName:"h3"},"<dds-masthead-composite>")),Object(a.b)(o.c,{of:"dds-masthead-composite",mdxType:"Props"}),Object(a.b)("p",null,"For Cloud-specific version of masthead-container, ",Object(a.b)("inlineCode",{parentName:"p"},"<dds-cloud-masthead-container>"),", we support two user authentication methods, via cookie or api. To select between the two, provide the ",Object(a.b)("inlineCode",{parentName:"p"},"auth-method")," prop with a value of either 'cookie' or 'api'."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},'<dds-cloud-masthead-container auth-method="cookie"></dds-cloud-masthead-container>\n')),Object(a.b)("h2",{id:"stable-selectors"},"Stable selectors"),Object(a.b)("p",null,"See ",Object(a.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components#stable-selectors-for-analytics-and-integratione2e-testing-in-web-components",target:"_blank",rel:"nofollow noopener noreferrer"},"our README")," to see how Web Components selector and ",Object(a.b)("inlineCode",{parentName:"p"},"data-autoid")," should be used."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Web Components selector"),Object(a.b)("th",{parentName:"tr",align:null},"Compatibility selector"),Object(a.b)("th",{parentName:"tr",align:null},"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-masthead>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead"')),Object(a.b)("td",{parentName:"tr",align:null},"Component")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-masthead-menu-button>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__hamburger"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-top-nav-name>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__platform-name"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-top-nav>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-nav"')),Object(a.b)("td",{parentName:"tr",align:null},"Component")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-top-nav-menu trigger-content="${item}">')," and ",Object(a.b)("inlineCode",{parentName:"td"},'<dds-top-nav-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-nav--nav${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-top-nav-menu-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-nav--subnav-col${item}-item${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"<dds-left-nav>")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-sidenav"')),Object(a.b)("td",{parentName:"tr",align:null},"Component")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-left-nav-menu trigger-content="${item}">')," and ",Object(a.b)("inlineCode",{parentName:"td"},'<dds-left-nav-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-sidenav--nav${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'<dds-left-nav-menu-item title="${item}">')),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},'data-autoid="dds--masthead__l0-sidenav--subnav-col${item}-item${item}"')),Object(a.b)("td",{parentName:"tr",align:null},"Interactive")))),Object(a.b)(o.a,{markdown:l.a,mdxType:"Description"}))}p.isMDXComponent=!0;var f={includeStories:[]},g={};f.parameters=f.parameters||{},f.parameters.docs=c(c({},f.parameters.docs||{}),{},{page:function(){return Object(a.b)(s.a,{mdxStoryNameToKey:g,mdxComponentAnnotations:f},Object(a.b)(p,null))}}),t.a=f},"./src/components/masthead/__stories__/cloud-masthead.stories.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"Default",(function(){return D}));n("../../node_modules/core-js/modules/es.array.slice.js"),n("../../node_modules/core-js/modules/es.object.freeze.js"),n("../../node_modules/core-js/modules/es.object.keys.js"),n("../../node_modules/core-js/modules/es.symbol.js"),n("../../node_modules/core-js/modules/es.array.filter.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),n("../../node_modules/core-js/modules/es.array.for-each.js"),n("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),n("../../node_modules/core-js/modules/es.object.define-properties.js"),n("../../node_modules/core-js/modules/es.object.define-property.js"),n("../../node_modules/core-js/modules/web.url.js"),n("../../node_modules/core-js/modules/es.object.to-string.js"),n("../../node_modules/core-js/modules/es.string.iterator.js"),n("../../node_modules/core-js/modules/es.array.iterator.js"),n("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),n("../../node_modules/core-js/modules/es.string.search.js"),n("../../node_modules/core-js/modules/es.regexp.exec.js");var a,s,o,l=n("../../node_modules/lit-element/lit-element.js"),i=n("../../node_modules/@storybook/addon-knobs/dist/index.js"),r=n("../../node_modules/carbon-components/es/globals/js/misc/on.js"),c=n("../../node_modules/carbon-web-components/es/globals/directives/if-non-null.js"),u=n("../../node_modules/@percy-io/in-percy/src/index.js"),h=n.n(u),d=(n("./src/components/masthead/masthead-container.ts"),n("./src/components/masthead/cloud/cloud-masthead-container.ts"),n("./src/components/masthead/__stories__/masthead.stories.scss")),m=n("./src/components/masthead/__stories__/links.ts"),p=n("./src/components/masthead/__stories__/profile-items.ts"),f=n("./src/components/masthead/__stories__/README.stories.mdx"),g=n("./.storybook/knob-text-nullable.ts");function N(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var b,w,P;function $(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function k(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?$(Object(n),!0).forEach((function(t){L(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):$(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function L(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var S,y,v,M,I="https://www.ibm.com/cloud",C={default:{url:"https://www.ibm.com/cloud"},"en-US":{url:"https://www.ibm.com/us-en/cloud"},"fr-FR":{url:"https://www.ibm.com/fr-fr/cloud"},"es-MX":{url:"https://www.ibm.com/es-mx/cloud"}},D=function(e){var t,n,i=null!==(t=null==e?void 0:e.CloudMastheadComposite)&&void 0!==t?t:{},r=i.hasContact,u=i.hasProfile,h=i.hasSearch,m=i.selectedMenuItem,f=i.searchPlaceholder,g=i.userStatus,$=i.navLinks,k=i.redirectPath,L=i.authMethod,S=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return Object(l.d)(b||(b=a||(a=N(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),d.a,S?Object(l.d)(w||(w=s||(s=N(['\n          <dds-cloud-masthead-composite\n            platform="Cloud"\n            .platformUrl="','"\n            selected-menu-item="','"\n            has-contact="','"\n            auth-method="','"\n            redirect-path="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n          ></dds-cloud-masthead-composite>\n        ']))),Object(c.a)(I),Object(c.a)(m),r,L,Object(c.a)(k),Object(c.a)(g),Object(c.a)(f),Object(c.a)(p.a),u,h,$,Object(c.a)(p.b)):Object(l.d)(P||(P=o||(o=N(['\n          <dds-cloud-masthead-container\n            platform="Cloud"\n            .platformUrl="','"\n            selected-menu-item="','"\n            has-contact="','"\n            auth-method="','"\n            redirect-path="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"\n          ></dds-cloud-masthead-container>\n        ']))),Object(c.a)(C),Object(c.a)(m),r,L,Object(c.a)(k),Object(c.a)(g),Object(c.a)(f),$,u,h))};t.default={title:"Components/Cloud masthead",decorators:[function(e){return window._hPageShow||(window._hPageShow=Object(r.a)(window,"pageshow",(function(){var e=document.querySelector("dds-left-nav");e&&(e.expanded=!1)}))),e()}],parameters:k(k((y={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2021, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport '../cloud/cloud-masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  default: {\\\\n    url: 'https://www.ibm.com/cloud',\\\\n  },\\\\n  'en-US': {\\\\n    url: 'https://www.ibm.com/us-en/cloud',\\\\n  },\\\\n  'fr-FR': {\\\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\\\n  },\\\\n  'es-MX': {\\\\n    url: 'https://www.ibm.com/es-mx/cloud',\\\\n  },\\\\n};\\\\n\\\\nexport const Default = args => {\\\\n  const {\\\\n    hasContact,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n    redirectPath,\\\\n    authMethod,\\\\n  } = args?.CloudMastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-cloud-masthead-composite\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\\"\\\\n          ></dds-cloud-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-cloud-masthead-container\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(urlObject)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            data-endpoint=\\\\\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\\\\\"\\\\n          ></dds-cloud-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Cloud masthead',\\\\n  decorators: [\\\\n    story => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    'carbon-theme': { disabled: true },\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      CloudMastheadComposite: () => ({\\\\n        userStatus: select('The user authenticated status (user-status)', ['authenticated', 'anonymous'], 'anonymous'),\\\\n        hasContact: select('Contact us button visibility (has-contact)', ['true', 'false'], 'true'),\\\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Docs'),\\\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\\\n        authMethod: select('auth method (auth-method)', ['cookie', 'api'], 'cookie'),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        CloudMastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        CloudMastheadComposite: {\\\\n          userStatus: 'anonymous',\\\\n          hasContact: true,\\\\n          selectedMenuItem: 'Docs',\\\\n          redirectPath: '',\\\\n          authMethod: 'cookie',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":47},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":99},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":47},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":99}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2021, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport '../cloud/cloud-masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst urlObject = {\\n  default: {\\n    url: 'https://www.ibm.com/cloud',\\n  },\\n  'en-US': {\\n    url: 'https://www.ibm.com/us-en/cloud',\\n  },\\n  'fr-FR': {\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\n  },\\n  'es-MX': {\\n    url: 'https://www.ibm.com/es-mx/cloud',\\n  },\\n};\\n\\nexport const Default = args => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n          ></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"\\n          ></dds-cloud-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Cloud masthead',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2021, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport '../cloud/cloud-masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\\\nimport readme from './README.stories.mdx';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  default: {\\\\n    url: 'https://www.ibm.com/cloud',\\\\n  },\\\\n  'en-US': {\\\\n    url: 'https://www.ibm.com/us-en/cloud',\\\\n  },\\\\n  'fr-FR': {\\\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\\\n  },\\\\n  'es-MX': {\\\\n    url: 'https://www.ibm.com/es-mx/cloud',\\\\n  },\\\\n};\\\\n\\\\nexport const Default = args => {\\\\n  const {\\\\n    hasContact,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n    redirectPath,\\\\n    authMethod,\\\\n  } = args?.CloudMastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-cloud-masthead-composite\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\\"\\\\n          ></dds-cloud-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-cloud-masthead-container\\\\n            platform=\\\\\\\"Cloud\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(urlObject)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            has-contact=\\\\\\\"${hasContact}\\\\\\\"\\\\n            auth-method=\\\\\\\"${authMethod}\\\\\\\"\\\\n            redirect-path=\\\\\\\"${ifNonNull(redirectPath)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            data-endpoint=\\\\\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\\\\\"\\\\n          ></dds-cloud-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Cloud masthead',\\\\n  decorators: [\\\\n    story => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    'carbon-theme': { disabled: true },\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      CloudMastheadComposite: () => ({\\\\n        userStatus: select('The user authenticated status (user-status)', ['authenticated', 'anonymous'], 'anonymous'),\\\\n        hasContact: select('Contact us button visibility (has-contact)', ['true', 'false'], 'true'),\\\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Docs'),\\\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\\\n        authMethod: select('auth method (auth-method)', ['cookie', 'api'], 'cookie'),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        CloudMastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        CloudMastheadComposite: {\\\\n          userStatus: 'anonymous',\\\\n          hasContact: true,\\\\n          selectedMenuItem: 'Docs',\\\\n          redirectPath: '',\\\\n          authMethod: 'cookie',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":47},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":99},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":47},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":99}}}},\\n    ...readme.parameters,\\n    'carbon-theme': { disabled: true },\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      CloudMastheadComposite: () => ({\\n        userStatus: select('The user authenticated status (user-status)', ['authenticated', 'anonymous'], 'anonymous'),\\n        hasContact: select('Contact us button visibility (has-contact)', ['true', 'false'], 'true'),\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Docs'),\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\n        authMethod: select('auth method (auth-method)', ['cookie', 'api'], 'cookie'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        CloudMastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        CloudMastheadComposite: {\\n          userStatus: 'anonymous',\\n          hasContact: true,\\n          selectedMenuItem: 'Docs',\\n          redirectPath: '',\\n          authMethod: 'cookie',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":55},\"endLoc\":{\"col\":1,\"line\":107},\"startBody\":{\"col\":23,\"line\":55},\"endBody\":{\"col\":1,\"line\":107}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2021, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport '../cloud/cloud-masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst urlObject = {\\n  default: {\\n    url: 'https://www.ibm.com/cloud',\\n  },\\n  'en-US': {\\n    url: 'https://www.ibm.com/us-en/cloud',\\n  },\\n  'fr-FR': {\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\n  },\\n  'es-MX': {\\n    url: 'https://www.ibm.com/es-mx/cloud',\\n  },\\n};\\n\\nexport const Default = args => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n          ></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"\\n          ></dds-cloud-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Cloud masthead',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    'carbon-theme': { disabled: true },\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      CloudMastheadComposite: () => ({\\n        userStatus: select('The user authenticated status (user-status)', ['authenticated', 'anonymous'], 'anonymous'),\\n        hasContact: select('Contact us button visibility (has-contact)', ['true', 'false'], 'true'),\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Docs'),\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\n        authMethod: select('auth method (auth-method)', ['cookie', 'api'], 'cookie'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        CloudMastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        CloudMastheadComposite: {\\n          userStatus: 'anonymous',\\n          hasContact: true,\\n          selectedMenuItem: 'Docs',\\n          redirectPath: '',\\n          authMethod: 'cookie',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":47},\"endLoc\":{\"col\":1,\"line\":99},\"startBody\":{\"col\":23,\"line\":47},\"endBody\":{\"col\":1,\"line\":99}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2021, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport '../cloud/cloud-masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst urlObject = {\n  default: {\n    url: 'https://www.ibm.com/cloud',\n  },\n  'en-US': {\n    url: 'https://www.ibm.com/us-en/cloud',\n  },\n  'fr-FR': {\n    url: 'https://www.ibm.com/fr-fr/cloud',\n  },\n  'es-MX': {\n    url: 'https://www.ibm.com/es-mx/cloud',\n  },\n};\n\nexport const Default = args => {\n  const {\n    hasContact,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    redirectPath,\n    authMethod,\n  } = args?.CloudMastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-cloud-masthead-composite\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(unauthenticatedProfileItems)}\"\n          ></dds-cloud-masthead-composite>\n        `\n      : html`\n          <dds-cloud-masthead-container\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(urlObject)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            data-endpoint=\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\"\n          ></dds-cloud-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Cloud masthead',\n  decorators: [\n    story => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\"storySource\":{\"source\":\"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2021, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport '../cloud/cloud-masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\nimport readme from './README.stories.mdx';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst urlObject = {\\n  default: {\\n    url: 'https://www.ibm.com/cloud',\\n  },\\n  'en-US': {\\n    url: 'https://www.ibm.com/us-en/cloud',\\n  },\\n  'fr-FR': {\\n    url: 'https://www.ibm.com/fr-fr/cloud',\\n  },\\n  'es-MX': {\\n    url: 'https://www.ibm.com/es-mx/cloud',\\n  },\\n};\\n\\nexport const Default = args => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n          ></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"\\n          ></dds-cloud-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Cloud masthead',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    'carbon-theme': { disabled: true },\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      CloudMastheadComposite: () => ({\\n        userStatus: select('The user authenticated status (user-status)', ['authenticated', 'anonymous'], 'anonymous'),\\n        hasContact: select('Contact us button visibility (has-contact)', ['true', 'false'], 'true'),\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Docs'),\\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\\n        authMethod: select('auth method (auth-method)', ['cookie', 'api'], 'cookie'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-cloud-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        CloudMastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        CloudMastheadComposite: {\\n          userStatus: 'anonymous',\\n          hasContact: true,\\n          selectedMenuItem: 'Docs',\\n          redirectPath: '',\\n          authMethod: 'cookie',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\",\"locationsMap\":{\"default\":{\"startLoc\":{\"col\":23,\"line\":47},\"endLoc\":{\"col\":1,\"line\":99},\"startBody\":{\"col\":23,\"line\":47},\"endBody\":{\"col\":1,\"line\":99}}}},\n    ...readme.parameters,\n    'carbon-theme': { disabled: true },\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      CloudMastheadComposite: () => ({\n        userStatus: select('The user authenticated status (user-status)', ['authenticated', 'anonymous'], 'anonymous'),\n        hasContact: select('Contact us button visibility (has-contact)', ['true', 'false'], 'true'),\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Docs'),\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\n        authMethod: select('auth method (auth-method)', ['cookie', 'api'], 'cookie'),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-cloud-masthead-container>` load the nav links\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        CloudMastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        CloudMastheadComposite: {\n          userStatus: 'anonymous',\n          hasContact: true,\n          selectedMenuItem: 'Docs',\n          redirectPath: '',\n          authMethod: 'cookie',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: \"args => {\\n  const {\\n    hasContact,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    redirectPath,\\n    authMethod,\\n  } = args?.CloudMastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-cloud-masthead-composite\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n          ></dds-cloud-masthead-composite>\\n        `\\n      : html`\\n          <dds-cloud-masthead-container\\n            platform=\\\"Cloud\\\"\\n            .platformUrl=\\\"${ifNonNull(urlObject)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            has-contact=\\\"${hasContact}\\\"\\n            auth-method=\\\"${authMethod}\\\"\\n            redirect-path=\\\"${ifNonNull(redirectPath)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            data-endpoint=\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\"\\n          ></dds-cloud-masthead-container>\\n        `}\\n  `;\\n}\" }, ...Default.parameters };",locationsMap:{default:{startLoc:{col:23,line:63},endLoc:{col:1,line:115},startBody:{col:23,line:63},endBody:{col:1,line:115}}}}},v="storySource",M={source:"/**\n * @license\n *\n * Copyright IBM Corp. 2021, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport '../cloud/cloud-masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\nimport readme from './README.stories.mdx';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst urlObject = {\n  default: {\n    url: 'https://www.ibm.com/cloud',\n  },\n  'en-US': {\n    url: 'https://www.ibm.com/us-en/cloud',\n  },\n  'fr-FR': {\n    url: 'https://www.ibm.com/fr-fr/cloud',\n  },\n  'es-MX': {\n    url: 'https://www.ibm.com/es-mx/cloud',\n  },\n};\n\nexport const Default = args => {\n  const {\n    hasContact,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    redirectPath,\n    authMethod,\n  } = args?.CloudMastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-cloud-masthead-composite\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(unauthenticatedProfileItems)}\"\n          ></dds-cloud-masthead-composite>\n        `\n      : html`\n          <dds-cloud-masthead-container\n            platform=\"Cloud\"\n            .platformUrl=\"${ifNonNull(urlObject)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            has-contact=\"${hasContact}\"\n            auth-method=\"${authMethod}\"\n            redirect-path=\"${ifNonNull(redirectPath)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            data-endpoint=\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\"\n          ></dds-cloud-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Cloud masthead',\n  decorators: [\n    story => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\n    ...readme.parameters,\n    'carbon-theme': { disabled: true },\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      CloudMastheadComposite: () => ({\n        userStatus: select('The user authenticated status (user-status)', ['authenticated', 'anonymous'], 'anonymous'),\n        hasContact: select('Contact us button visibility (has-contact)', ['true', 'false'], 'true'),\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Docs'),\n        redirectPath: textNullable('redirect path (redirect-path)', ''),\n        authMethod: select('auth method (auth-method)', ['cookie', 'api'], 'cookie'),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-cloud-masthead-container>` load the nav links\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        CloudMastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        CloudMastheadComposite: {\n          userStatus: 'anonymous',\n          hasContact: true,\n          selectedMenuItem: 'Docs',\n          redirectPath: '',\n          authMethod: 'cookie',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n",locationsMap:{default:{startLoc:{col:23,line:47},endLoc:{col:1,line:99},startBody:{col:23,line:47},endBody:{col:1,line:99}}}},v in y?Object.defineProperty(y,v,{value:M,enumerable:!0,configurable:!0,writable:!0}):y[v]=M,y),f.a.parameters),{},{"carbon-theme":{disabled:!0},percy:{skip:!0},knobs:{escapeHTML:!1,CloudMastheadComposite:function(){return{userStatus:Object(i.select)("The user authenticated status (user-status)",["authenticated","anonymous"],"anonymous"),hasContact:Object(i.select)("Contact us button visibility (has-contact)",["true","false"],"true"),selectedMenuItem:Object(g.a)("selected menu item (selected-menu-item)","Docs"),redirectPath:Object(g.a)("redirect path (redirect-path)",""),authMethod:Object(i.select)("auth method (auth-method)",["cookie","api"],"cookie")}}},props:(S=h()()||new URLSearchParams(window.location.search).has("mock"),{CloudMastheadComposite:{navLinks:S?m.e:void 0},Other:{useMock:S}}),propsSet:{default:{CloudMastheadComposite:{userStatus:"anonymous",hasContact:!0,selectedMenuItem:"Docs",redirectPath:"",authMethod:"cookie",navLinks:m.e}}}})},D.parameters=k({storySource:{source:'args => {\n  const {\n    hasContact,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    redirectPath,\n    authMethod,\n  } = args?.CloudMastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-cloud-masthead-composite\n            platform="Cloud"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            has-contact="${hasContact}"\n            auth-method="${authMethod}"\n            redirect-path="${ifNonNull(redirectPath)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-cloud-masthead-composite>\n        `\n      : html`\n          <dds-cloud-masthead-container\n            platform="Cloud"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            has-contact="${hasContact}"\n            auth-method="${authMethod}"\n            redirect-path="${ifNonNull(redirectPath)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"\n          ></dds-cloud-masthead-container>\n        `}\n  `;\n}'}},D.parameters)},"./src/components/masthead/__stories__/links.ts":function(e,t,n){"use strict";n.d(t,"e",(function(){return l})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return a})),n.d(t,"d",(function(){return o}));var a={svg:"<svg width='81px' height='33px' viewBox='0 0 81 33' xmlns='http://www.w3.org/2000/svg' version='1.1' xmlns:xlink='http://www.w3.org/1999/xlink'>\n  <title>Artboard</title>\n  <defs>\n      <path d='M67.716,0.0192 L66.982,2.1532 L80.733,2.1532 L80.733,0.0192 L67.716,0.0192 Z M44.624,0.0192 L44.625,2.1532 L58.392,2.1532 L57.64,0.0192 L44.624,0.0192 Z M17.011,0.0192 L17.011,2.1532 L39.738,2.1532 C38.216,0.8282 36.189,0.0192 33.961,0.0192 L33.961,0.0192 L17.011,0.0192 Z M0.019,2.1532 L14.887,2.1532 L14.887,0.0192 L0.019,0.0192 L0.019,2.1532 Z M66.246,4.2862 L65.479,6.4192 L80.733,6.4192 L80.733,4.2862 L66.246,4.2862 Z M44.624,4.2862 L44.625,6.4192 L59.87,6.4192 L59.132,4.2862 L44.624,4.2862 Z M17.011,4.2862 L17.011,6.4192 L41.863,6.4192 C41.672,5.6612 41.365,4.9442 40.97,4.2862 L40.97,4.2862 L17.011,4.2862 Z M0.019,6.4192 L14.887,6.4192 L14.887,4.2862 L0.019,4.2862 L0.019,6.4192 Z M64.761,8.5532 L64.009,10.6862 L76.485,10.6862 L76.485,8.5532 L64.761,8.5532 Z M48.872,8.5532 L48.872,10.6862 L61.354,10.6862 L60.602,8.5532 L48.872,8.5532 Z M34.004,8.5532 L34.004,10.6862 L41.565,10.6862 C41.756,10.0052 41.863,9.2912 41.863,8.5532 L41.863,8.5532 L34.004,8.5532 Z M21.259,10.6862 L27.632,10.6862 L27.632,8.5532 L21.259,8.5532 L21.259,10.6862 Z M4.267,10.6862 L10.639,10.6862 L10.639,8.5532 L4.267,8.5532 L4.267,10.6862 Z M63.273,12.8192 L62.679,14.5432 L62.084,12.8192 L48.872,12.8192 L48.872,14.9532 L55.244,14.9532 L55.244,12.9912 L55.945,14.9532 L69.39,14.9532 L70.113,12.9912 L70.113,14.9532 L76.485,14.9532 L76.485,12.8192 L63.273,12.8192 Z M21.259,12.8192 L21.259,14.9532 L38.953,14.9532 C39.685,14.3502 40.316,13.6292 40.801,12.8192 L40.801,12.8192 L21.259,12.8192 Z M4.267,14.9532 L10.639,14.9532 L10.639,12.8192 L4.267,12.8192 L4.267,14.9532 Z M70.113,19.2182 L76.485,19.2182 L76.485,17.0852 L70.113,17.0852 L70.113,19.2182 Z M56.82,17.0862 L57.644,19.2182 L67.691,19.2182 L68.522,17.0862 L56.82,17.0862 Z M48.872,19.2182 L55.244,19.2182 L55.244,17.0852 L48.872,17.0852 L48.872,19.2182 Z M21.259,17.0862 L21.259,19.2182 L40.801,19.2182 C40.316,18.4092 39.685,17.6882 38.953,17.0862 L38.953,17.0862 L21.259,17.0862 Z M4.267,19.2182 L10.639,19.2182 L10.639,17.0852 L4.267,17.0852 L4.267,19.2182 Z M70.113,23.4852 L76.485,23.4852 L76.485,21.3522 L70.113,21.3522 L70.113,23.4852 Z M58.494,21.3522 L59.334,23.4852 L66.023,23.4852 L66.857,21.3522 L58.494,21.3522 Z M48.872,23.4852 L55.244,23.4852 L55.244,21.3522 L48.872,21.3522 L48.872,23.4852 Z M34.004,21.3522 L34.004,23.4852 L41.863,23.4852 C41.863,22.7472 41.756,22.0322 41.565,21.3522 L41.565,21.3522 L34.004,21.3522 Z M21.259,23.4852 L27.632,23.4852 L27.632,21.3522 L21.259,21.3522 L21.259,23.4852 Z M4.267,23.4852 L10.639,23.4852 L10.639,21.3522 L4.267,21.3522 L4.267,23.4852 Z M70.113,27.7522 L80.733,27.7522 L80.733,25.6192 L70.113,25.6192 L70.113,27.7522 Z M60.169,25.6192 L61.001,27.7522 L64.363,27.7522 L65.191,25.6192 L60.169,25.6192 Z M44.624,27.7522 L55.244,27.7522 L55.244,25.6192 L44.624,25.6192 L44.624,27.7522 Z M17.011,25.6192 L17.011,27.7522 L40.97,27.7522 C41.365,27.0932 41.672,26.3772 41.863,25.6192 L41.863,25.6192 L17.011,25.6192 Z M0.019,27.7522 L14.887,27.7522 L14.887,25.6192 L0.019,25.6192 L0.019,27.7522 Z M70.113,32.0192 L80.733,32.0192 L80.733,29.8852 L70.113,29.8852 L70.113,32.0192 Z M61.833,29.8852 L62.676,32.0192 L63.53,29.8852 L61.833,29.8852 Z M44.624,32.0192 L55.244,32.0192 L55.244,29.8852 L44.624,29.8852 L44.624,32.0192 Z M17.011,29.8852 L17.011,32.0192 L33.961,32.0192 C36.205,32.0192 38.216,31.2102 39.738,29.8852 L39.738,29.8852 L17.011,29.8852 Z M0.019,32.0192 L14.887,32.0192 L14.887,29.8852 L0.019,29.8852 L0.019,32.0192 Z' id='path-1'></path>\n  </defs>\n  <g id='Artboard' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>\n      <g id='Group-7'>\n          <mask id='mask-2' fill='white'>\n              <use xlink:href='#path-1'></use>\n          </mask>\n          <g id='Clip-2'></g>\n          <polygon id='Fill-1' fill='#EC1D24' mask='url(#mask-2)' points='-1 33.0382 86.8 33.0382 86.8 -0.9998 -1 -0.9998'></polygon>\n          <polygon id='Fill-3' fill='#2E3092' mask='url(#mask-2)' points='-1 3.3942 86.8 3.3942 86.8 -0.9998 -1 -0.9998'></polygon>\n          <polygon id='Fill-4' fill='#2E3092' mask='url(#mask-2)' points='-1 11.8162 86.8 11.8162 86.8 7.4222 -1 7.4222'></polygon>\n          <polygon id='Fill-5' fill='#00A550' mask='url(#mask-2)' points='-1 20.3502 86.8 20.3502 86.8 15.9562 -1 15.9562'></polygon>\n          <polygon id='Fill-6' fill='#FFF100' mask='url(#mask-2)' points='-1 28.8832 86.8 28.8832 86.8 24.4892 -1 24.4892'></polygon>\n      </g>\n  </g>\n  </svg>",tooltip:"Lorem ipsum dolor sit amet, consectetur adipiscing elit.",denylist:[],allowlist:[],end:"May 5, 2021 0:00:01",path:"/",href:"https://www.example.com/not-default-href"},s={title:"Stock Charts",url:"https://example.com",menuItems:[{title:"Lorem ipsum dolor sit amet",titleEnglish:"Lorem ipsum dolor sit amet",url:"",hasMenu:!0,hasMegapanel:!1,menuSections:[{heading:"Explore",menuItems:[{title:"Link 1",url:"",megapanelContent:{headingTitle:"",headingUrl:"",description:"",quickLinks:{title:"Title",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Menu dropdown item with extra long text",url:""}]}]},{title:"Consectetur adipiscing elit",titleEnglish:"Consectetur adipiscing elit",url:"",hasMenu:!0,menuSections:[{heading:"",menuItems:[{title:"Link 2",url:"",megapanelContent:{headingTitle:"Services",headingUrl:"https://www.ibm.com/services?lnk=hpmse_ts&lnk2=learn",description:"Reimagine your business, designing and building the platforms necessary for growth",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"IBM Services, your Digital Reinvention Ã¢â€žÂ¢ partner",imageUrl:"https://www.ibm.com/images/portal/U609055Q90660U49/windmills.jpg",linkTitle:"Explore all our business consulting and technology services",linkUrl:"https://www.ibm.com/services?lnk=hpmse_ts&lnk2=learn"}}},{title:"Financing",url:"https://www.ibm.com/financing?lnk=hpmse_fin&lnk2=learn",megapanelContent:{headingTitle:"Financing",headingUrl:"https://www.ibm.com/financing?lnk=hpmse_fin&lnk2=learn",description:"Funding options that fit your business",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"Cloud financing strategies that work for your business",imageUrl:"https://www.ibm.com/images/portal/F774737R30303N19/Skyline-Card-cloud-feature380x160.jpg?1=1",linkTitle:"Committed to cloud? Make the most of your cash flow.",linkUrl:"https://www.ibm.com/financing/solutions/cloud-financing?lnk=hpmse_fin&lnk2=learn"}}}]}]},{title:"Nulla quis sem at nibh elementum imperdiet",titleEnglish:"Nulla quis sem at nibh elementum imperdiet",url:"https://www.ibm.com/industries?lnk=min",hasMenu:!1,hasMegapanel:!1,menuSections:[]},{title:"Fusce nec tellus sed augue semper porta",titleEnglish:"Fusce nec tellus sed augue semper porta",url:"",hasMenu:!0,hasMegapanel:!1,menuSections:[{heading:"",menuItems:[{title:"IBM Developer",url:"https://developer.ibm.com/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"IBM Developer",headingUrl:"https://developer.ibm.com/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"IBM Developer newsletters",imageUrl:"https://1.dam.s81c.com/m/5908c17b26b9dd19/original/news-ibmdevnewsletters-600x245.jpg",linkTitle:"Technical info on popular software development topics, including AI, Blockchain, Java and more",linkUrl:"https://developer.ibm.com/newsletters/?lnk=hpmdev_dw&lnk2=learn"}}},{title:"Blockchain",url:"https://developer.ibm.com/technologies/blockchain/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"Blockchain",headingUrl:"https://developer.ibm.com/technologies/blockchain/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Subnav 1",url:""},{title:"Subnav 2",url:""},{title:"Subnav 3",url:""},{title:"Subnav 4",url:""}]},feature:{heading:"Blockchain 101",imageUrl:"https://www.ibm.com/images/portal/E174255N41814O86/Blockchain2_600x245.jpg?1=3",linkTitle:"Build a kick-starter blockchain network and start coding with the IBM Blockchain Platform Starter Plan",linkUrl:"https://developer.ibm.com/tutorials/cl-ibm-blockchain-101-quick-start-guide-for-developers-bluemix-trs/?lnk=hpmdev_dw&lnk2=learn"}}},{title:"Containers",url:"https://developer.ibm.com/technologies/containers/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"Containers",headingUrl:"https://developer.ibm.com/technologies/containers/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Code patterns",url:"https://developer.ibm.com/patterns/category/containers/?lnk=hpmdev_dw&lnk2=learn"},{title:"Tutorials",url:"https://developer.ibm.com/tutorials/category/containers/?lnk=hpmdev_dw&lnk2=learn"},{title:"Events",url:"https://developer.ibm.com/events/category/containers/?lnk=hpmdev_dw&lnk2=learn"}]},feature:{heading:"Make sense of Kubernetes",imageUrl:"https://www.ibm.com/images/portal/E693054G76296P64/Kubernetes-Pythomn_600x245.jpg?1=2",linkTitle:"Deploy a simple Python application with Kubernetes",linkUrl:"https://developer.ibm.com/tutorials/scalable-python-app-with-kubernetes/?lnk=hpmdev_dw&lnk2=learn"}}},{title:"Analytics",url:"https://developer.ibm.com/technologies/analytics/?lnk=hpmdev_dw&lnk2=learn",megapanelContent:{headingTitle:"Analytics",headingUrl:"https://developer.ibm.com/technologies/analytics/?lnk=hpmdev_dw&lnk2=learn",description:"",quickLinks:{title:"Quicklinks",links:[{title:"Code patterns",url:"https://developer.ibm.com/patterns/category/analytics/?lnk=hpmdev_dw&lnk2=learn"},{title:"Tutorials",url:"https://developer.ibm.com/tutorials/category/analytics/?lnk=hpmdev_dw&lnk2=learn"},{title:"Events",url:"https://developer.ibm.com/events/category/analytics/?lnk=hpmdev_dw&lnk2=learn"},{title:"Developer community",url:"https://developer.ibm.com/watson/?lnk=hpmdev_dw&lnk2=learn"}]},feature:{heading:"Train your data no matter where it lives",imageUrl:"https://1.dam.s81c.com/m/76c0ed6f3e6386c1/original/Train-data_600x245.jpg",linkTitle:"Easily and securely connect to your data source for initial model training and continuous learning",linkUrl:"https://developer.ibm.com/announcements/training-machine-learning-models-in-watson-studio?lnk=hpmdev_dw&lnk2=learn"}}}]}]},{title:"Sed cursus ante dapibus diam",titleEnglish:"Sed cursus ante dapibus diam",url:"https://www.ibm.com/support/home/?lnk=msu_usen",hasMenu:!1,hasMegapanel:!1,menuSections:[]}]},o={title:"Analytics",url:"https://www.ibm.com/analytics",menuItems:[{title:"Products",titleEnglish:"Products",url:"https://www.ibm.com/analytics/products"},{title:"Solutions",titleEnglish:"Solutions",url:"https://www.ibm.com/analytics/solutions"},{title:"Services",titleEnglish:"Services",url:"https://www.ibm.com/industries?lnk=min"},{title:"Learn",titleEnglish:"Learn",menuSections:[{menuItems:[{title:"Blogs",url:"https://www.ibm.com/blogs/journey-to-ai/"},{title:"Client stories",url:"https://www.ibm.com/analytics/client-stories"},{title:"Communities",url:"https://www.ibm.com/analytics/communities"}]}]},{title:"Explore more",titleEnglish:"Explore more",menuSections:[{menuItems:[{title:"Product support",url:"https://www.ibm.com/analytics/support"},{title:"Expert gallery",url:"https://developer.ibm.com/technologies/blockchain/?lnk=hpmdev_dw&lnk2=learn"}]}]}]},l=[{title:"Products",titleEnglish:"Products",url:"",hasMenu:!0,hasMegapanel:!0,megamenuLayout:"tab",menuSections:[{heading:"",menuItems:[{title:"Featured",titleEnglish:"Featured",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Featured",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit. ",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for Data",titleEnglish:"IBM Cloud Pak for Data",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"IBM Cloud Pak for Security",titleEnglish:"IBM Cloud Pak for Security",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Security auditing, reporting, analysis and governance"},{title:"IBM Cloud Pak for Business Automation",titleEnglish:"IBM Cloud Pak for Business Automation",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Operations management software with AI insights"},{title:"IBM Cloud Pak for Integration",titleEnglish:"IBM Cloud Pak for Integration",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools to connect all of your apps, data and events"},{title:"IBM Cloud Pak for Network Automation",titleEnglish:"IBM Cloud Pak for Network Automation",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Management software for telco network operations"},{title:"IBM Cloud",titleEnglish:"IBM Cloud",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"IBM Z",titleEnglish:"IBM Z",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Analytics",titleEnglish:"Analytics",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Analytics",headingUrl:"https://www.ibm.com/placeholder",description:"Aggregate and analyze large datasets",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for Data",titleEnglish:"IBM Cloud Pak for Data",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"Business Analytics Enterprise",titleEnglish:"Business Analytics Enterprise",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Cognos",titleEnglish:"Cognos",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"SPSS",titleEnglish:"SPSS",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"cplex",titleEnglish:"cplex",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Netezza",titleEnglish:"Netezza",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Watson Studio",titleEnglish:"Watson Studio",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"IDE to build, run and manage AI models"},{title:"Planning Analytics",titleEnglish:"Planning Analytics",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Watson Discovery",titleEnglish:"Watson Discovery",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Search and analytics engine that adapts to custom domains"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Business Automation",titleEnglish:"Business Automation",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Business Automation",headingUrl:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for Business Automation",titleEnglish:"IBM Cloud Pak for Business Automation",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Operations management software with AI insights"},{title:"Watson Orchestrate",titleEnglish:"Watson Orchestrate",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM RPA",titleEnglish:"IBM RPA",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"BlueWorks Live",titleEnglish:"BlueWorks Live",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Operational Decision Manager",titleEnglish:"IBM Operational Decision Manager",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"AI & ML",titleEnglish:"AI & ML",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"AI & ML",headingUrl:"https://www.ibm.com/placeholder",description:"Use Watsonâ€™s AI or build your own machine learning models",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for Data",titleEnglish:"IBM Cloud Pak for Data",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"Watson Discovery",titleEnglish:"Watson Discovery",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Search and analytics engine that adapts to custom domains"},{title:"Spech to Text",titleEnglish:"Spech to Text",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"API for real-time speech recognition and transcription"},{title:"Text to Speech",titleEnglish:"Text to Speech",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"API for real-time text to speech conversion"},{title:"IBM Cloud Pak for Data",titleEnglish:"IBM Cloud Pak for Data",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"IBM Cloud Pak for AIOps",titleEnglish:"IBM Cloud Pak for AIOps",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"DevOps management tool with AI analysis and recommendations"},{title:"IBM Watson Natural Language Understanding",titleEnglish:"IBM Watson Natural Language Understanding",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"API for text analysis and metadata extraction"},{title:"Watson Studio",titleEnglish:"Watson Studio",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"IDE to build, run and manage AI models"},{title:"IBM Watson Knowledge Catalog",titleEnglish:"IBM Watson Knowledge Catalog",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"SaaS for AI data management"},{title:"Watson Assistant",titleEnglish:"Watson Assistant",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Compute & Servers",titleEnglish:"Compute & Servers",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Compute & Servers",headingUrl:"https://www.ibm.com/placeholder",description:"Run workloads on cloud infrastrcture",quickLinks:{title:"",links:[{title:"IBM Z",titleEnglish:"IBM Z",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Power",titleEnglish:"Power",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Spectrum Computing",titleEnglish:"Spectrum Computing",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"LinuxONE",titleEnglish:"LinuxONE",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Cloud Bare Metal Servers",titleEnglish:"IBM Cloud Bare Metal Servers",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Cloud Virtual Servers",titleEnglish:"IBM Cloud Virtual Servers",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Database",titleEnglish:"Database",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Database",headingUrl:"https://www.ibm.com/placeholder",description:"Store, query and analyze structured data",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for Data",titleEnglish:"IBM Cloud Pak for Data",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"IBM Informix on Cloud",titleEnglish:"IBM Informix on Cloud",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed DB for time series, spatial, NoSQL and SQL data"},{title:"IBM Cloudant",titleEnglish:"IBM Cloudant",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed PCI-compliant JSON document store on CouchDB"},{title:"IBM Cloud Database",titleEnglish:"IBM Cloud Database",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"IBM Cloud Hyper Protect DbaaS",titleEnglish:"IBM Cloud Hyper Protect DbaaS",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed PostgreSQL and MongoDB for sensitive data"},{title:"IMS",titleEnglish:"IMS",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"Db2",titleEnglish:"Db2",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"DevOps",titleEnglish:"DevOps",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"DevOps",headingUrl:"https://www.ibm.com/placeholder",description:"Manage infrastructure, environments and deployments",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for AIOps",titleEnglish:"IBM Cloud Pak for AIOps",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Cloud Continuous Delivery",titleEnglish:"IBM Cloud Continuous Delivery",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"UI and CLI based DevOps workflows based on Tekton Pipelines"},{title:"IBM Cloud Schematics",titleEnglish:"IBM Cloud Schematics",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed service to provision resources with terraform templates"},{title:"UrbanCode",titleEnglish:"UrbanCode",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"IT Automation",titleEnglish:"IT Automation",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"IT Automation",headingUrl:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for AIOps",titleEnglish:"IBM Cloud Pak for AIOps",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Turbonomic",titleEnglish:"IBM Turbonomic",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Software to automate application resource management and optimize costs"},{title:"IBM Instana",titleEnglish:"IBM Instana",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Middleware",titleEnglish:"Middleware",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Middleware",headingUrl:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac",quickLinks:{title:"",links:[{title:"IBM Cloud Pak for Integration",titleEnglish:"IBM Cloud Pak for Integration",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools to connect all of your apps, data and events"},{title:"MQ",titleEnglish:"MQ",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed message broker"},{title:"DataPower",titleEnglish:"DataPower",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"API Connect",titleEnglish:"API Connect",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"App Connect",titleEnglish:"App Connect",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Event Streams",titleEnglish:"Event Streams",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Aspera",titleEnglish:"Aspera",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"WebSphere Application Server",titleEnglish:"WebSphere Application Server",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Runtime and SDK for Java applications"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Networking",titleEnglish:"Networking",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Networking",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Cloud Pak for Network Automation",titleEnglish:"Cloud Pak for Network Automation",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Management software for telco network operations"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Operating Systems",titleEnglish:"Operating Systems",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Operating Systems",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"z/OS",titleEnglish:"z/OS",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"z/VSE",titleEnglish:"z/VSE",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"z/TPF",titleEnglish:"z/TPF",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"IBM i",titleEnglish:"IBM i",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Operations",titleEnglish:"Operations",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Operations",headingUrl:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac",quickLinks:{title:"",links:[{title:"Maximo",titleEnglish:"Maximo",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Environmental Intelligence Suite",titleEnglish:"IBM Environmental Intelligence Suite",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Tririga",titleEnglish:"Tririga",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Sterling",titleEnglish:"IBM Sterling",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Supply Chain Intelligence Suite",titleEnglish:"Supply Chain Intelligence Suite",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Engineering Lifecycle Management",titleEnglish:"IBM Engineering Lifecycle Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Quantum",titleEnglish:"Quantum",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Quantum",headingUrl:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac",quickLinks:{title:"",links:[{title:"IBM Quantum Systems",titleEnglish:"IBM Quantum Systems",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Qiskit runtime",titleEnglish:"Qiskit runtime",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IBM Quantum Safe",titleEnglish:"IBM Quantum Safe",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Storage",titleEnglish:"Storage",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Storage",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Spectrum",titleEnglish:"Spectrum",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Software for backup & recovery, SDS and analytics."},{title:"FlashSystem",titleEnglish:"FlashSystem",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Hybrid and all flash arrays for Block (SAN) storage"},{title:"DS8900F",titleEnglish:"DS8900F",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Storage for IBM Z and IBM Power Systems"},{title:"Elastic Scale Storage",titleEnglish:"Elastic Scale Storage",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Distributed file storage for big data and AI"},{title:"Cloud Object Storage (On-premises)",titleEnglish:"Cloud Object Storage (On-premises)",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Hyperscale object storage in the data center"},{title:"SAN Volume Controller",titleEnglish:"SAN Volume Controller",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Storage virtualization for large scale workloads"},{title:"SAN B-Type Switches",titleEnglish:"SAN B-Type Switches",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Support end-to-end NVMe with Gen 7 Fibre Channel"},{title:"SAN C-Type Switches",titleEnglish:"SAN C-Type Switches",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"High-performance, multiprotocal storage networking"},{title:"Tape System",titleEnglish:"Tape System",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tape libraries, cartridges and media"},{title:"Cloud File Storage",titleEnglish:"Cloud File Storage",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Flash-backed, durable, fast and flexible NFS-based file storage"},{title:"Cloud Block Storage",titleEnglish:"Cloud Block Storage",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Flash-backed, local disk performance with SAN persistence and durability"},{title:"Cloud Object Storage",titleEnglish:"Cloud Object Storage",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Flexible, cost-effective and scalable cloud storage for unstructured data"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Security & Identity",titleEnglish:"Security & Identity",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Security & Identity",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Trusteer",titleEnglish:"Trusteer",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Randori",titleEnglish:"Randori",highlightedLink:!1,url:"https://www.ibm.com/placeholder",target:"external",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Verify",titleEnglish:"Verify",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"OpenPages with Watson",titleEnglish:"OpenPages with Watson",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"QRadar SIEM",titleEnglish:"QRadar SIEM",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Verify Privilege",titleEnglish:"Verify Privilege",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"MaaS360",titleEnglish:"MaaS360",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"QRadar SOAR",titleEnglish:"QRadar SOAR",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"zSecure",titleEnglish:"zSecure",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Guardium",titleEnglish:"Guardium",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"QRadar XDR Connect",titleEnglish:"QRadar XDR Connect",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"IBM Cloud Pak for Security",titleEnglish:"IBM Cloud Pak for Security",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Security auditing, reporting, analysis and governance"},{title:"ReaQta",titleEnglish:"ReaQta",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"View all products",titleEnglish:"View all products",url:"https://www.ibm.com/products?lnk=hpmps_buall",megaPanelViewAll:!0}]}]},{title:"Solutions",titleEnglish:"Solutions",url:"",hasMenu:!0,hasMegapanel:!0,megamenuLayout:"tab",menuSections:[{heading:"",menuItems:[{title:"Automation",titleEnglish:"Automation",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Automation",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Workflow",titleEnglish:"Workflow",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Enterprise Content Management",titleEnglish:"Enterprise Content Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Decision Management",titleEnglish:"Decision Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"Application Performance Management",titleEnglish:"Application Performance Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Security auditing, reporting, analysis and governance"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Data & AI",titleEnglish:"Data & AI",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Data & AI",headingUrl:"https://www.ibm.com/placeholder",description:"Aggregate and analyze large datasets",quickLinks:{title:"",links:[{title:"Data Fabric",titleEnglish:"Data Fabric",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"AI",titleEnglish:"AI",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Master Data Management",titleEnglish:"Master Data Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"Data Lake",titleEnglish:"Data Lake",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Security auditing, reporting, analysis and governance"},{title:"Data Warehouse",titleEnglish:"Data Warehouse",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed PostgreSQL and MongoDB for sensitive data"},{title:"Customer Care",titleEnglish:"Customer Care",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools to connect all of your apps, data and events"},{title:"Data Science",titleEnglish:"Data Science",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Operations management software with AI insights"},{title:"Data Management",titleEnglish:"Data Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Management software for telco network operations"},{title:"Data Quality",titleEnglish:"Data Quality",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Search and analytics engine that adapts to custom domains"},{title:"Data Ops",titleEnglish:"Data Ops",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Hybrid Cloud",titleEnglish:"Hybrid Cloud",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Hybrid Cloud",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Public Cloud",titleEnglish:"Public Cloud",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Private Cloud",titleEnglish:"Private Cloud",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Edge Computing",titleEnglish:"Edge Computing",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Hybrid Cloud Storage",titleEnglish:"Hybrid Cloud Storage",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Hybrid Cloud Management",titleEnglish:"Hybrid Cloud Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Infrastructure",titleEnglish:"Infrastructure",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Infrastructure",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"HPC",titleEnglish:"HPC",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Cloud Hosting",titleEnglish:"Cloud Hosting",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"IT Modernization",titleEnglish:"IT Modernization",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Tools for data analysis, organization and management"},{title:"Data protection",titleEnglish:"Data protection",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Security auditing, reporting, analysis and governance"},{title:"Confidential Computing",titleEnglish:"Confidential Computing",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed PostgreSQL and MongoDB for sensitive data"},{title:"Backup and Recovery",titleEnglish:"Backup and Recovery",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Archivex",titleEnglish:"Archivex",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Industry",titleEnglish:"Industry",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Industry",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Aerospace",titleEnglish:"Aerospace",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Airline industry",titleEnglish:"Airline industry",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Automotive",titleEnglish:"Automotive",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Banking and finance",titleEnglish:"Banking and finance",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Consumer goods",titleEnglish:"Consumer goods",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Education",titleEnglish:"Education",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Electronics industry",titleEnglish:"Electronics industry",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Energy and utilities",titleEnglish:"Energy and utilities",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Federal",titleEnglish:"Federal",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Financial services",titleEnglish:"Financial services",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Freight and logistics industry",titleEnglish:"Freight and logistics industry",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Government",titleEnglish:"Government",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Healthcare",titleEnglish:"Healthcare",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Hotel industry",titleEnglish:"Hotel industry",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Insurance",titleEnglish:"Insurance",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Life sciences",titleEnglish:"Life sciences",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Manufacturing",titleEnglish:"Manufacturing",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Media and entertainment",titleEnglish:"Media and entertainment",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Partners & Applications",titleEnglish:"Partners & Applications",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Partners & Applications",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"SAP",titleEnglish:"SAP",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"VMware",titleEnglish:"VMware",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"AWS",titleEnglish:"AWS",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"GCP",titleEnglish:"GCP",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Azure",titleEnglish:"Azure",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Salesforce",titleEnglish:"Salesforce",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Adobe",titleEnglish:"Adobe",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Nvidia",titleEnglish:"Nvidia",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Security",titleEnglish:"Security",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Security",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Zero Trust",titleEnglish:"Zero Trust",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Data Security",titleEnglish:"Data Security",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Security auditing, reporting, analysis and governance"},{title:"XDR",titleEnglish:"XDR",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Data Security",titleEnglish:"Data Security",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Security auditing, reporting, analysis and governance"},{title:"Cloud Security",titleEnglish:"Cloud Security",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Managed PostgreSQL and MongoDB for sensitive data"},{title:"Security Services",titleEnglish:"Security Services",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Ransomware",titleEnglish:"Ransomware",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Operations management software with AI insights"},{title:"Insider Threat",titleEnglish:"Insider Threat",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Management software for telco network operations"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Supply Chain",titleEnglish:"Supply Chain",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Supply Chain",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Visibility",titleEnglish:"Visibility",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"EDI",titleEnglish:"EDI",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Blockchain",titleEnglish:"Blockchain",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Data Exchange",titleEnglish:"Data Exchange",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Supply Chain Services",titleEnglish:"Supply Chain Services",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Sustainable Supply Chains",titleEnglish:"Sustainable Supply Chains",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Sustainability",titleEnglish:"Sustainability",url:"https://www.ibm.com/placeholder",highlighted:!0,megapanelContent:{headingTitle:"Sustainability",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Asset Management",titleEnglish:"Asset Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Operations management software with AI insights"},{title:"Facilities Management",titleEnglish:"Facilities Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Carbon Peformance Engine",titleEnglish:"Carbon Peformance Engine",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Regenerative Agriculture",titleEnglish:"Regenerative Agriculture",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Renewables Forecasting",titleEnglish:"Renewables Forecasting",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Vegetation Management",titleEnglish:"Vegetation Management",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"IT Sustainability",titleEnglish:"IT Sustainability",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"Sustainable Supply Chains",titleEnglish:"Sustainable Supply Chains",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"},{title:"ESG Reporting",titleEnglish:"ESG Reporting",highlightedLink:!1,url:"https://www.ibm.com/placeholder",description:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem ac"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}}]}]},{title:"Consulting",titleEnglish:"Consulting",url:"",hasMenu:!0,hasMegapanel:!0,megamenuLayout:"tab",menuSections:[{heading:"",menuItems:[{title:"Overview",titleEnglish:"Overview",url:"https://www.ibm.com/consulting?lnk=hpmco&lnk2=link",megapanelContent:{headingTitle:"IBM Consulting",headingUrl:"https://www.ibm.com/consulting?lnk=hpmco&lnk2=link",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"IBM iX",titleEnglish:"IBM iX",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Garage",titleEnglish:"Garage",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"X-Force",titleEnglish:"X-Force",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"TSS",titleEnglish:"TSS",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Lab Services",titleEnglish:"Lab Services",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Investments",titleEnglish:"Investments",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Announcements",titleEnglish:"Announcements",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Client Success",titleEnglish:"Client Success",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Careers",titleEnglish:"Careers",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Cloud",titleEnglish:"Cloud",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Cloud",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Cloud Strategy",titleEnglish:"Cloud Strategy",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Hybrid Cloud",titleEnglish:"Hybrid Cloud",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Cloud Migration",titleEnglish:"Cloud Migration",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Multicloud",titleEnglish:"Multicloud",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Cloud Architecture",titleEnglish:"Cloud Architecture",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Managed Cloud Services",titleEnglish:"Managed Cloud Services",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Data & Apps",titleEnglish:"Data & Apps",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Data & Apps",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Data and Analytics",titleEnglish:"Data and Analytics",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"AI",titleEnglish:"AI",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Application Services",titleEnglish:"Application Services",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Application Development",titleEnglish:"Application Development",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Application Modernization",titleEnglish:"Application Modernization",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Mobile",titleEnglish:"Mobile",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Application Security",titleEnglish:"Application Security",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Experience",titleEnglish:"Experience",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Experience",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Customer Experience",titleEnglish:"Customer Experience",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"E-commerce",titleEnglish:"E-commerce",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Payments",titleEnglish:"Payments",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Operations",titleEnglish:"Operations",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Operations",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Outsourcing",titleEnglish:"Outsourcing",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Procurement & Strategic Sourcing",titleEnglish:"Procurement & Strategic Sourcing",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Supply Chain",titleEnglish:"Supply Chain",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Finance",titleEnglish:"Finance",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Marketing",titleEnglish:"Marketing",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Talent",titleEnglish:"Talent",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Finance",titleEnglish:"Finance",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Business Process Reengineering",titleEnglish:"Business Process Reengineering",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Security",titleEnglish:"Security",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Security",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Security Strategy",titleEnglish:"Security Strategy",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Cloud",titleEnglish:"Cloud",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Threat managment",titleEnglish:"Threat managment",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"GRC",titleEnglish:"GRC",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Data",titleEnglish:"Data",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Threat intelligence",titleEnglish:"Threat intelligence",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Risk Management",titleEnglish:"Risk Management",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Applications",titleEnglish:"Applications",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Virtual SOC",titleEnglish:"Virtual SOC",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Offensive Security Services",titleEnglish:"Offensive Security Services",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Identity and Access",titleEnglish:"Identity and Access",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Managed Detection and Response",titleEnglish:"Managed Detection and Response",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Penetration Testing",titleEnglish:"Penetration Testing",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Managed Security Services",titleEnglish:"Managed Security Services",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Adversary Simulation",titleEnglish:"Adversary Simulation",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Managed Infrastructure and Endpoint Security",titleEnglish:"Managed Infrastructure and Endpoint Security",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Strategy",titleEnglish:"Strategy",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Strategy",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"Business Strategy",titleEnglish:"Business Strategy",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Sustainability",titleEnglish:"Sustainability",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"GRC",titleEnglish:"GRC",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Risk Management",titleEnglish:"Risk Management",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Partners",titleEnglish:"Partners",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Partners",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"SAP",titleEnglish:"SAP",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Adobe",titleEnglish:"Adobe",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"AWS",titleEnglish:"AWS",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Red Hat",titleEnglish:"Red Hat",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"SalesForce",titleEnglish:"SalesForce",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"ServiceNow",titleEnglish:"ServiceNow",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Microsoft",titleEnglish:"Microsoft",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Workday",titleEnglish:"Workday",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Celonis",titleEnglish:"Celonis",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Oracle",titleEnglish:"Oracle",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Insights",titleEnglish:"Insights",url:"https://www.ibm.com/placeholder",megapanelContent:{headingTitle:"Insights",headingUrl:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",quickLinks:{title:"",links:[{title:"IBV",titleEnglish:"IBV",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Cost of a Data Breach",titleEnglish:"Cost of a Data Breach",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"X-Force Threat Intelligence",titleEnglish:"X-Force Threat Intelligence",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Hybrid Cloud Insight",titleEnglish:"Hybrid Cloud Insight",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"AI Insight",titleEnglish:"AI Insight",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Sustainability Insight",titleEnglish:"Sustainability Insight",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Customer Experience Insight",titleEnglish:"Customer Experience Insight",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."},{title:"Supply Chain Insight",titleEnglish:"Supply Chain Insight",url:"https://www.ibm.com/placeholder",description:"Description text Lorem ipsum dolor sit amet, consectetuer adipiscing elit."}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}}]}]},{title:"Support",titleEnglish:"Support",url:"",hasMenu:!0,hasMegapanel:!0,megamenuLayout:"list",menuSections:[{heading:"",menuItems:[{title:"What is...",titleEnglish:"What is...",url:"https://www.ibm.com/cloud/learn?lnk=hpmls_buwi",megapanelContent:{headingTitle:"What is...",headingUrl:"https://www.ibm.com/cloud/learn?lnk=hpmls_buwi",description:"",quickLinks:{title:"",links:[{title:"Artificial intelligence",titleEnglish:"Artificial intelligence",url:"https://www.ibm.com/cloud/learn/what-is-artificial-intelligence?lnk=hpmls_buwi"},{title:"Automation",titleEnglish:"Automation",url:"https://www.ibm.com/topics/automation?lnk=hpmls_buwi"},{title:"Blockchain",titleEnglish:"Blockchain",url:"https://www.ibm.com/topics/what-is-blockchain?lnk=hpmls_buwi"},{title:"Business intelligence",titleEnglish:"Business intelligence",url:"https://www.ibm.com/topics/business-intelligence?lnk=hpmls_buwi"},{title:"Chatbots",titleEnglish:"Chatbots",url:"https://www.ibm.com/cloud/learn/chatbots-explained?lnk=hpmls_buwi"},{title:"Cloud computing",titleEnglish:"Cloud computing",url:"https://www.ibm.com/cloud/learn/cloud-computing?lnk=hpmls_buwi"},{title:"Containerization",titleEnglish:"Containerization",url:"https://www.ibm.com/cloud/container-service?lnk=hpmls_buwi"},{title:"Cybersecurity",titleEnglish:"Cybersecurity",url:"https://www.ibm.com/topics/cybersecurity?lnk=hpmls_buwi"},{title:"Databases",titleEnglish:"Databases",url:"https://www.ibm.com/cloud/learn/database?lnk=hpmls_buwi"},{title:"DevOps",titleEnglish:"DevOps",url:"https://www.ibm.com/cloud/learn/devops-a-complete-guide?lnk=hpmls_buwi"},{title:"Hybrid Cloud",titleEnglish:"Hybrid Cloud",url:"https://www.ibm.com/cloud/learn/hybrid-cloud?lnk=hpmls_buwi"},{title:"Kubernetes",titleEnglish:"Kubernetes",url:"https://www.ibm.com/cloud/learn/kubernetes?lnk=hpmls_buwi"},{title:"Quantum computing",titleEnglish:"Quantum computing",url:"https://www.ibm.com/quantum-computing/learn/what-is-quantum-computing?lnk=hpmls_buwi"},{title:"Supply chain",titleEnglish:"Supply chain",url:"https://www.ibm.com/topics/supply-chain-management?lnk=hpmls_buwi"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/581adf40f2b008ec/original/megamenu-pictogram-what-is-_.png",linkTitle:"",linkUrl:""}}},{title:"Training",titleEnglish:"Training",url:"https://www.ibm.com/training/?lnk=hpmls_butr",megapanelContent:{headingTitle:"Training",headingUrl:"https://www.ibm.com/training/?lnk=hpmls_butr",description:"",quickLinks:{title:"",links:[{title:"Courses",titleEnglish:"Courses",url:"https://www.ibm.com/training/search?q=course&lnk=hpmls_butr"},{title:"Learning journeys",titleEnglish:"Learning journeys",url:"https://www.ibm.com/training/journeys?lnk=hpmls_butr"},{title:"Professional certifications",titleEnglish:"Professional certifications",url:"https://www.ibm.com/certify?lnk=hpmls_butr"},{title:"Digital learning subscriptions",titleEnglish:"Digital learning subscriptions",url:"https://www.ibm.com/training/subscriptions?lnk=hpmls_butr"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5540e5627aeb2568/original/megamenu-pictogram-training.png",linkTitle:"",linkUrl:""}}},{title:"Developer education",titleEnglish:"Developer education",url:"https://developer.ibm.com/?lnk=hpmls_bude",megapanelContent:{headingTitle:"Developer education",headingUrl:"https://developer.ibm.com/?lnk=hpmls_bude",description:"",quickLinks:{title:"",links:[{title:"Code patterns",titleEnglish:"Code patterns",url:"https://developer.ibm.com/patterns/?lnk=hpmls_bude"},{title:"Developer community",titleEnglish:"Developer community",url:"https://developer.ibm.com/community/?lnk=hpmls_bude"},{title:"Developer events",titleEnglish:"Developer events",url:"https://developer.ibm.com/events/?lnk=hpmls_bude"},{title:"Open Source @ IBM",titleEnglish:"Open Source @ IBM",url:"https://ibm.com/opensource?lnk=hpmls_bude"},{title:"Technical articles",titleEnglish:"Technical articles",url:"https://developer.ibm.com/articles?lnk=hpmls_bude"},{title:"Tutorials",titleEnglish:"Tutorials",url:"https://developer.ibm.com/tutorials/?lnk=hpmls_bude"},{title:"Videos",titleEnglish:"Videos",url:"https://developer.ibm.com/videos?lnk=hpmls_bude"},{title:"View more Developer education",titleEnglish:"View more Developer education",url:"https://developer.ibm.com/?lnk=hpmls_bude"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/1e651d0f7b539774/original/megamenu-pictogram-developer-education.png",linkTitle:"",linkUrl:""}}},{title:"Documentation",titleEnglish:"Documentation",url:"https://www.ibm.com/docs/en?lnk=hpmls_budc",megapanelContent:{headingTitle:"Documentation",headingUrl:"https://www.ibm.com/docs/en?lnk=hpmls_budc",description:"",quickLinks:{title:"",links:[{title:"All product documentation",titleEnglish:"All product documentation",url:"https://www.ibm.com/docs/en?lnk=hpmls_budc"},{title:"For products on IBM Cloud",titleEnglish:"For products on IBM Cloud",url:"https://cloud.ibm.com/docs?lnk=hpmls_budc"},{title:"For use cases â€” IBM Redbooks",titleEnglish:"For use cases â€” IBM Redbooks",url:"https://www.redbooks.ibm.com/?lnk=hpmls_budc"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/49d529fab45bb565/original/megamenu-pictogram-documentation.png",linkTitle:"",linkUrl:""}}},{title:"Community",titleEnglish:"Community",url:"",megapanelContent:{headingTitle:"Community",headingUrl:"",description:"",quickLinks:{title:"",links:[{title:"IBM Developer",titleEnglish:"IBM Developer",url:"https://developer.ibm.com/?lnk=hpmls_buco"},{title:"IBM Community",titleEnglish:"IBM Community",url:"https://community.ibm.com/community/user/home?lnk=hpmls_buco"},{title:"Support forums",titleEnglish:"Support forums",url:"https://www.ibm.com/mysupport/s/forumshome?lnk=hpmls_buco"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}},{title:"Resources",titleEnglish:"Resources",url:"https://www.ibm.com/blogs/?lnk=hpmls_bure",megapanelContent:{headingTitle:"Resources",headingUrl:"https://www.ibm.com/blogs/?lnk=hpmls_bure",description:"",quickLinks:{title:"",links:[{title:"Blogs & thought leadership",titleEnglish:"Blogs & thought leadership",url:"https://www.ibm.com/blogs/?lnk=hpmls_bure"},{title:"Case studies & client stories",titleEnglish:"Case studies & client stories",url:"https://www.ibm.com/case-studies?lnk=hpmls_bure"},{title:"Upcoming events & webinars",titleEnglish:"Upcoming events & webinars",url:"https://www.ibm.com/events?lnk=hpmls_bure"},{title:"IBM Institute for Business Value",titleEnglish:"IBM Institute for Business Value",url:"https://www.ibm.com/thought-leadership/institute-business-value?lnk=hpmls_bure"},{title:"Licensing & compliance",titleEnglish:"Licensing & compliance",url:"https://www.ibm.com/about/software-licensing/?lnk=hpmls_bure"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/164ef3660bad78a8/original/megamenu-pictogram-resources.png",linkTitle:"",linkUrl:""}}},{title:"Support",titleEnglish:"Support",url:"https://www.ibm.com/mysupport?lnk=hpmls_busu",megapanelContent:{headingTitle:"Support",headingUrl:"https://www.ibm.com/mysupport?lnk=hpmls_busu",description:"",quickLinks:{title:"",links:[{title:"Download fixes, updates & drivers",titleEnglish:"Download fixes, updates & drivers",url:"https://www.ibm.com/support/fixcentral/?lnk=hpmls_busu"},{title:"Download licensed software - Passport Advantage",titleEnglish:"Download licensed software - Passport Advantage",url:"https://www.ibm.com/software/passportadvantage/pao_customer.html?lnk=hpmls_busu"},{title:"View your cases",titleEnglish:"View your cases",url:"https://www.ibm.com/mysupport/s/my-cases?lnk=hpmls_busu"},{title:"Open a case",titleEnglish:"Open a case",url:"https://www.ibm.com/mysupport/s/redirecttoopencasepage?lnk=hpmls_busu"},{title:"View available support plans",titleEnglish:"View available support plans",url:"https://www.ibm.com/support/offerings?lnk=hpmls_busu"},{title:"View more on Support",titleEnglish:"View more on Support",url:"https://www.ibm.com/mysupport?lnk=hpmls_busu&lnk2=all"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5b1abed637b01b55/original/megamenu-pictogram-support.png",linkTitle:"",linkUrl:""}}},{title:"Cloud platform support",titleEnglish:"Cloud platform support",url:"https://www.ibm.com/cloud/support?lnk=hpmls_bucl"},{title:"Newsletter subscriptions",titleEnglish:"Newsletter subscriptions",url:"https://www.ibm.com/subscribe/"}]}]},{title:"More",titleEnglish:"More",url:"",hasMenu:!0,hasMegapanel:!0,megamenuLayout:"list",menuSections:[{heading:"",menuItems:[{title:"Partner with us",titleEnglish:"Partners",url:"https://www.ibm.com/partners?lnk=hpmex_bupa",megapanelContent:{headingTitle:"Partner with us",headingUrl:"https://www.ibm.com/partners?lnk=hpmex_bupa",description:"",quickLinks:{title:"",links:[{title:"PartnerWorld",titleEnglish:"Partner with us â€” PartnerWorld",url:"https://www.ibm.com/partnerworld/public?lnk=hpmex_bupa"},{title:"Our strategic partnerships",titleEnglish:"Our strategic partnerships",url:"https://www.ibm.com/alliances?lnk=hpmex_bupa"},{title:"Flexible payment plans",titleEnglish:"Flexible payment plans",url:"https://www.ibm.com/partnerworld/financing?lnk=hpmex_bupa"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/4075a8633a1137d/original/megamenu-pictogram-partners.png",linkTitle:"",linkUrl:""}}},{title:"IBM Research",titleEnglish:"IBM Research",url:"https://research.ibm.com?lnk=hpmex_bure",megapanelContent:{headingTitle:"IBM Research",headingUrl:"https://research.ibm.com?lnk=hpmex_bure",description:"",quickLinks:{title:"",links:[{title:"Blog",titleEnglish:"Blog",url:"https://research.ibm.com/blog?lnk=hpmex_bure"},{title:"Publications",titleEnglish:"Publications",url:"https://research.ibm.com/publications?lnk=hpmex_bure"},{title:"Teams",titleEnglish:"Teams",url:"https://research.ibm.com/teams?lnk=hpmex_bure"},{title:"Collaborate with us",titleEnglish:"Collaborate with us",url:"https://research.ibm.com/collaborate?lnk=hpmex_bure"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/5e05b0b234bc3846/original/megamenu-pictogram-ibm-research.png",linkTitle:"",linkUrl:""}}},{title:"About IBM",titleEnglish:"About IBM",url:"https://www.ibm.com/about?lnk=hpmex_buab",megapanelContent:{headingTitle:"About IBM",headingUrl:"https://www.ibm.com/about?lnk=hpmex_buab",description:"",quickLinks:{title:"",links:[{title:"Annual report",titleEnglish:"Annual report",url:"https://www.ibm.com/annualreport/?lnk=hpmex_buab"},{title:"Career opportunities",titleEnglish:"Career opportunities",url:"https://www.ibm.com/employment/?lnk=hpmex_buab"},{title:"Corporate social responsibility",titleEnglish:"Corporate social responsibility",url:"https://www.ibm.org?lnk=hpmex_buab"},{title:"Diversity & inclusion",titleEnglish:"Diversity & inclusion",url:"https://www.ibm.com/employment/inclusion/?lnk=hpmex_buab"},{title:"Industry analyst reports",titleEnglish:"Industry analyst reports",url:"https://www.ibm.com/reports/analyst/?lnk=hpmex_buab"},{title:"Investor relations",titleEnglish:"Investor relations",url:"https://www.ibm.com/investor/?lnk=hpmex_buab"},{title:"Licensing & compliance",titleEnglish:"Licensing & compliance",url:"https://www.ibm.com/about/software-licensing/?lnk=hpmex_buab"},{title:"News & announcements",titleEnglish:"News & announcements",url:"https://newsroom.ibm.com?lnk=hpmex_buab"},{title:"Thought leadership",titleEnglish:"Thought leadership",url:"https://www.ibm.com/thought-leadership/?lnk=hpmex_buab"},{title:"Security, privacy & trust",titleEnglish:"Security, privacy & trust",url:"https://www.ibm.com/trust?lnk=hpmex_buab"}]},feature:{heading:"",imageUrl:"https://1.dam.s81c.com/m/220eb8ea8345a4d6/original/megamenu-pictogram-about-ibm.png",linkTitle:"",linkUrl:""}}},{title:"COVID-19",titleEnglish:"COVID-19",url:"https://www.ibm.com/impact/covid-19?lnk=hpmex_buco",megapanelContent:{headingTitle:"COVID-19",headingUrl:"https://www.ibm.com/impact/covid-19?lnk=hpmex_buco",description:"",quickLinks:{title:"",links:[{title:"Business solutions",titleEnglish:"Business solutions",url:"https://www.ibm.com/impact/covid-19/business-solutions?lnk=hpmex_buco"},{title:"Action guide",titleEnglish:"Action guide",url:"https://www.ibm.com/thought-leadership/institute-business-value/report/covid-19-action-guide?lnk=hpmex_buco"}]},feature:{heading:"",imageUrl:"",linkTitle:"",linkUrl:""}}}]}]}];t.a=l},"./src/components/masthead/__stories__/masthead.stories.scss":function(e,t,n){"use strict";var a=n("../../node_modules/lit-element/lit-element.js");t.a=Object(a.b)([".dds-ce-demo-devenv--container{padding-top:calc(3rem + 3rem + 1px);will-change:margin-left;transition:margin-left 0.11s cubic-bezier(0.2, 0, 1, 0.9)}@media (max-width: 65.98rem){.bx--offset-lg-3{margin-left:0}}.bx--content{padding:6rem 0 2rem}@media (max-width: 65.98rem){.bx--content{padding-top:0}}.bx--content.has-leadspace{padding-top:0}@media (max-width: 65.98rem){.bx--content.has-l1{padding-top:3rem}}.bx--content.has-leadspace.has-l1{padding-top:3rem}.bx--content.dds-ce-demo-devenv--ui-shell-content h2{margin:30px 0}.bx--content.dds-ce-demo-devenv--ui-shell-content h2:first-of-type{margin-top:0}\n"])},"./src/components/masthead/__stories__/masthead.stories.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"Default",(function(){return Se})),n.d(t,"withV2Data",(function(){return ye})),n.d(t,"withCloudData",(function(){return ve})),n.d(t,"WithCustomTypeahead",(function(){return Me})),n.d(t,"searchOpenOnload",(function(){return Ie})),n.d(t,"withPlatform",(function(){return Ce})),n.d(t,"withL1",(function(){return De})),n.d(t,"withAlternateLogoAndTooltip",(function(){return xe}));n("../../node_modules/core-js/modules/es.array.slice.js"),n("../../node_modules/core-js/modules/es.object.freeze.js"),n("../../node_modules/core-js/modules/es.symbol.description.js"),n("../../node_modules/core-js/modules/es.symbol.iterator.js"),n("../../node_modules/core-js/modules/es.symbol.async-iterator.js"),n("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),n("../../node_modules/core-js/modules/es.math.to-string-tag.js"),n("../../node_modules/core-js/modules/es.json.to-string-tag.js"),n("../../node_modules/core-js/modules/es.object.create.js"),n("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),n("../../node_modules/core-js/modules/es.function.name.js"),n("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),n("../../node_modules/core-js/modules/es.array.reverse.js"),n("../../node_modules/core-js/modules/es.object.keys.js"),n("../../node_modules/core-js/modules/es.symbol.js"),n("../../node_modules/core-js/modules/es.array.filter.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),n("../../node_modules/core-js/modules/es.array.for-each.js"),n("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),n("../../node_modules/core-js/modules/es.object.define-properties.js"),n("../../node_modules/core-js/modules/es.object.define-property.js"),n("../../node_modules/core-js/modules/es.promise.js"),n("../../node_modules/core-js/modules/es.object.to-string.js"),n("../../node_modules/core-js/modules/web.url.js"),n("../../node_modules/core-js/modules/es.string.iterator.js"),n("../../node_modules/core-js/modules/es.array.iterator.js"),n("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),n("../../node_modules/core-js/modules/es.string.search.js"),n("../../node_modules/core-js/modules/es.regexp.exec.js");var a,s,o,l,i,r,c,u,h,d,m,p,f,g,N,b,w,P,$,k,L,S,y,v,M=n("../../node_modules/lit-element/lit-element.js"),I=n("../../node_modules/@storybook/addon-knobs/dist/index.js"),C=n("../../node_modules/carbon-components/es/globals/js/misc/on.js"),D=n("../../node_modules/carbon-web-components/es/globals/directives/if-non-null.js"),O=n("../../node_modules/@percy-io/in-percy/src/index.js"),E=n.n(O),j=n("./.storybook/knob-text-nullable.ts"),T=(n("./src/components/masthead/masthead-container.ts"),n("./src/components/masthead/__stories__/masthead.stories.scss")),x=n("./src/components/masthead/__stories__/links.ts"),_=n("./src/internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI.js"),A=n("./src/components/masthead/__stories__/profile-items.ts"),U=n("./src/globals/internal/feature-flags.ts"),B=n("./src/components/masthead/__stories__/README.stories.mdx");function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function R(){R=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function i(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{i({},"")}catch(e){i=function(e,t,n){return e[t]=n}}function r(e,t,n,a){var s=t&&t.prototype instanceof h?t:h,o=Object.create(s.prototype),l=new L(a||[]);return o._invoke=function(e,t,n){var a="suspendedStart";return function(s,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===s)throw o;return y()}for(n.method=s,n.arg=o;;){var l=n.delegate;if(l){var i=P(l,n);if(i){if(i===u)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var r=c(e,t,n);if("normal"===r.type){if(a=n.done?"completed":"suspendedYield",r.arg===u)continue;return{value:r.arg,done:n.done}}"throw"===r.type&&(a="completed",n.method="throw",n.arg=r.arg)}}}(e,n,l),o}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=r;var u={};function h(){}function d(){}function m(){}var p={};i(p,s,(function(){return this}));var f=Object.getPrototypeOf,g=f&&f(f(S([])));g&&g!==t&&n.call(g,s)&&(p=g);var N=m.prototype=h.prototype=Object.create(p);function b(e){["next","throw","return"].forEach((function(t){i(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,t){function a(s,o,l,i){var r=c(e[s],e,o);if("throw"!==r.type){var u=r.arg,h=u.value;return h&&"object"==H(h)&&n.call(h,"__await")?t.resolve(h.__await).then((function(e){a("next",e,l,i)}),(function(e){a("throw",e,l,i)})):t.resolve(h).then((function(e){u.value=e,l(u)}),(function(e){return a("throw",e,l,i)}))}i(r.arg)}var s;this._invoke=function(e,n){function o(){return new t((function(t,s){a(e,n,t,s)}))}return s=s?s.then(o,o):o()}}function P(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,P(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var a=c(n,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,u;var s=a.arg;return s?s.done?(t[e.resultName]=s.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):s:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function $(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function k(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function L(e){this.tryEntries=[{tryLoc:"root"}],e.forEach($,this),this.reset(!0)}function S(e){if(e){var t=e[s];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:y}}function y(){return{value:void 0,done:!0}}return d.prototype=m,i(N,"constructor",m),i(m,"constructor",d),d.displayName=i(m,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,i(e,l,"GeneratorFunction")),e.prototype=Object.create(N),e},e.awrap=function(e){return{__await:e}},b(w.prototype),i(w.prototype,o,(function(){return this})),e.AsyncIterator=w,e.async=function(t,n,a,s,o){void 0===o&&(o=Promise);var l=new w(r(t,n,a,s),o);return e.isGeneratorFunction(n)?l:l.next().then((function(e){return e.done?e.value:l.next()}))},b(N),i(N,l,"Generator"),i(N,s,(function(){return this})),i(N,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var a=t.pop();if(a in e)return n.value=a,n.done=!1,n}return n.done=!0,n}},e.values=S,L.prototype={constructor:L,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return l.type="throw",l.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var o=this.tryEntries[s],l=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var i=n.call(o,"catchLoc"),r=n.call(o,"finallyLoc");if(i&&r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!r)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.tryLoc<=this.prev&&n.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var o=s;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var l=o?o.completion:{};return l.type=e,l.arg=t,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(l)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),k(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var s=a.arg;k(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:S(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}function W(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function F(e,t,n,a,s,o,l){try{var i=e[o](l),r=i.value}catch(e){return void n(e)}i.done?t(r):Promise.resolve(r).then(a,s)}function q(e){return function(){var t=this,n=arguments;return new Promise((function(a,s){var o=e.apply(t,n);function l(e){F(o,a,s,l,i,"next",e)}function i(e){F(o,a,s,l,i,"throw",e)}l(void 0)}))}}var V,G,z,Z,Q,K,X,J,Y,ee,te,ne,ae,se,oe,le,ie,re,ce,ue,he,de,me,pe;function fe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function ge(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?fe(Object(n),!0).forEach((function(t){Ne(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):fe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Ne(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var be={authenticated:"test.user@ibm.com",unauthenticated:_.d},we="IBM Cloud",Pe="https://www.ibm.com/cloud",$e={"en-US":{url:"https://www.example.com/us-en"},"fr-FR":{url:"https://www.example.com/fr-fr/sample"},"es-MX":{url:"https://www.example.com/ibm/es-mx/sample"}};function ke(e){return Le.apply(this,arguments)}function Le(){return(Le=q(R().mark((function e(t){return R().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",fetch("https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=".concat(t,"&lang=undefined&categories=&limit=6")).then((function(e){return e.json()})).then((function(e){return[e.hints,{title:"Product pages",items:e.products}]})));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var Se=function(e){var t,n,l=null!==(t=null==e?void 0:e.MastheadComposite)&&void 0!==t?t:{},i=l.customProfileLogin,r=l.platform,c=l.hasProfile,u=l.hasSearch,h=l.selectedMenuItem,d=l.searchPlaceholder,m=l.userStatus,p=l.navLinks,f=l.authMethod,g=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return Object(M.d)(V||(V=a||(a=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,g?Object(M.d)(G||(G=s||(s=W(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            auth-method="','"\n          ></dds-masthead-composite>\n        ']))),Object(D.a)(r),Object(D.a)(Pe),Object(D.a)(h),Object(D.a)(m),Object(D.a)(d),Object(D.a)(A.a),c,u,p,Object(D.a)(A.b),i,_.b.DEFAULT):Object(M.d)(z||(z=o||(o=W(['\n          <dds-masthead-container\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            auth-method="','"\n          ></dds-masthead-container>\n        ']))),Object(D.a)(r),Object(D.a)(Pe),Object(D.a)(h),Object(D.a)(m),Object(D.a)(d),p,c,u,i,f))},ye=function(e){var t,n,a,s,o=e.parameters,c=null!==(t=null==o||null===(n=o.props)||void 0===n?void 0:n.MastheadComposite)&&void 0!==t?t:{},u=c.customProfileLogin,h=c.hasProfile,d=c.hasSearch,m=c.searchPlaceholder,p=c.userStatus,f=c.navLinks,g=c.hasContact,N=c.platform,b=(null!==(a=null==o||null===(s=o.props)||void 0===s?void 0:s.Other)&&void 0!==a?a:{}).useMock;return Object(M.d)(Z||(Z=l||(l=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,b?Object(M.d)(Q||(Q=i||(i=W(['\n          <dds-masthead-composite\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            auth-method="','"\n            has-contact="','"\n          ></dds-masthead-composite>\n        ']))),Object(D.a)(p),Object(D.a)(m),Object(D.a)(A.a),h,d,f,Object(D.a)(A.b),u,_.b.DEFAULT,g):Object(M.d)(K||(K=r||(r=W(['\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2"\n            platform="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            auth-method="','"\n            has-contact="','"\n          ></dds-masthead-container>\n        ']))),Object(D.a)(N),Object(D.a)(p),Object(D.a)(m),f,h,d,u,_.b.DEFAULT,g))};ye.story={name:"With v2 Data"};var ve=function(e){var t,n,a,s,o=e.parameters,l=null!==(t=null==o||null===(n=o.props)||void 0===n?void 0:n.MastheadComposite)&&void 0!==t?t:{},i=l.customProfileLogin,r=l.hasSearch,d=l.selectedMenuItem,m=l.searchPlaceholder,p=l.navLinks,f=l.platform,g=(null!==(a=null==o||null===(s=o.props)||void 0===s?void 0:s.Other)&&void 0!==a?a:{}).useMock;return Object(M.d)(X||(X=c||(c=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,g?Object(M.d)(J||(J=u||(u=W(['\n          <dds-masthead-composite\n            platform="Cloud"\n            .platformUrl="','"\n            selected-menu-item="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            auth-method="','"\n          ></dds-masthead-composite>\n        ']))),Object(D.a)(Pe),Object(D.a)(d),Object(D.a)(m),Object(D.a)(A.a),r,p,Object(D.a)(A.b),i,_.b.COOKIE):Object(M.d)(Y||(Y=h||(h=W(['\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            auth-method="','"\n          ></dds-masthead-container>\n        ']))),f||"Cloud",Object(D.a)(Pe),Object(D.a)(d),Object(D.a)(m),p,r,i,_.b.COOKIE))},Me=function(e){var t,n,a=null!==(t=null==e?void 0:e.MastheadComposite)&&void 0!==t?t:{},s=a.endpoint,o=a.customProfileLogin,l=a.navLinks,i=a.platform,r=a.selectedMenuItem,c=a.userStatus,u=a.searchPlaceholder,h=a.hasProfile,f=a.hasSearch,g=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return document.documentElement.addEventListener("dds-search-with-typeahead-input",function(){var e=q(R().mark((function e(t){var n;return R().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,ke(t.detail.value);case 2:n=e.sent,document.dispatchEvent(new CustomEvent("dds-custom-typeahead-api-results",{detail:n}));case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),Object(M.d)(ee||(ee=d||(d=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,g?Object(M.d)(te||(te=m||(m=W(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            ?custom-typeahead-api=',"\n          ></dds-masthead-composite>\n        "]))),Object(D.a)(i),Object(D.a)(Pe),Object(D.a)(r),Object(D.a)(c),Object(D.a)(u),Object(D.a)(A.a),h,f,l,Object(D.a)(A.b),o,!0):Object(M.d)(ne||(ne=p||(p=W(['\n          <dds-masthead-container\n            data-endpoint="','"\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            ?custom-typeahead-api=',"\n          ></dds-masthead-container>\n        "]))),Object(D.a)(s),Object(D.a)(i),Object(D.a)(Pe),Object(D.a)(r),Object(D.a)(c),Object(D.a)(u),l,h,f,o,!0))};Me.story={name:"With custom typeahead"};var Ie=function(e){var t,n,a=null!==(t=null==e?void 0:e.MastheadComposite)&&void 0!==t?t:{},s=a.endpoint,o=a.customProfileLogin,l=a.platform,i=a.selectedMenuItem,r=a.userStatus,c=a.searchPlaceholder,u=a.hasProfile,h=a.hasSearch,d=a.navLinks,m=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return Object(M.d)(ae||(ae=f||(f=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,m?Object(M.d)(se||(se=g||(g=W(['\n          <dds-masthead-composite\n            activate-search\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n          ></dds-masthead-composite>\n        ']))),Object(D.a)(we),Object(D.a)(Pe),Object(D.a)(i),Object(D.a)(r),Object(D.a)(c),Object(D.a)(A.a),d,u,h,Object(D.a)(A.b),o):Object(M.d)(oe||(oe=N||(N=W(['\n          <dds-masthead-container\n            data-endpoint="','"\n            activate-search\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n          ></dds-masthead-container>\n        ']))),Object(D.a)(s),Object(D.a)(l),Object(D.a)(Pe),Object(D.a)(i),Object(D.a)(r),Object(D.a)(c),d,u,h,o))};Ie.story={name:"Search open onload"};var Ce=function(e){var t,n,a=null!==(t=null==e?void 0:e.MastheadComposite)&&void 0!==t?t:{},s=a.endpoint,o=a.selectedMenuItem,l=a.userStatus,i=a.navLinks,r=a.hasProfile,c=a.hasSearch,u=a.searchPlaceholder,h=a.platform,d=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return Object(M.d)(le||(le=b||(b=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,d?Object(M.d)(ie||(ie=w||(w=W(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            .navLinks="','"\n            has-profile="','"\n            ?has-search="','"\n            .unauthenticatedProfileItems="','"\n          ></dds-masthead-composite>\n        ']))),Object(D.a)(we),Object(D.a)($e),Object(D.a)(o),Object(D.a)(l),Object(D.a)(u),Object(D.a)(A.a),i,r,c,Object(D.a)(A.b)):Object(M.d)(re||(re=P||(P=W(['\n          <dds-masthead-container\n            data-endpoint="','"\n            platform="','"\n            .platformUrl="','"\n            user-status="','"\n            searchPlaceholder="','"\n            has-profile="','"\n            ?has-search="','"\n          ></dds-masthead-container>\n        ']))),Object(D.a)(s),Object(D.a)(h),Object(D.a)(Pe),Object(D.a)(l),Object(D.a)(u),r,c))};Ce.story={name:"With platform",parameters:{knobs:{MastheadComposite:function(){return{platform:Object(j.a)("platform name (platform)","Platform"),hasProfile:Object(I.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(I.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(j.a)("search placeholder (searchPlaceholder)",E()()?"":"Search all of IBM"),selectedMenuItem:Object(j.a)("selected menu item (selected-menu-item)","Consulting & Services"),userStatus:Object(I.select)("The user authenticated status (user-status)",be,be.unauthenticated)}}},propsSet:{default:{MastheadComposite:{platform:"Platform",hasProfile:"true",hasSearch:!0,searchPlaceHolder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:be.unauthenticated}}}}};var De=function(e){var t,n,a=null!==(t=null==e?void 0:e.MastheadComposite)&&void 0!==t?t:{},s=a.endpoint,o=a.selectedMenuItem,l=a.userStatus,i=a.navLinks,r=a.hasProfile,c=a.hasSearch,u=a.searchPlaceholder,h=a.platform,d=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return Object(M.d)(ce||(ce=$||($=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,d?Object(M.d)(ue||(ue=k||(k=W(['\n          <dds-masthead-composite\n            selected-menu-item="','"\n            searchPlaceholder="','"\n            user-status="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .l1Data="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n          ></dds-masthead-composite>\n        ']))),Object(D.a)(o),Object(D.a)(u),Object(D.a)(l),Object(D.a)(A.a),r,c,x.d,i,Object(D.a)(A.b)):Object(M.d)(he||(he=L||(L=W(['\n          <dds-masthead-container\n            platform="','"\n            .platformData="','"\n            data-endpoint="','"\n            selected-menu-item="','"\n            user-status="','"\n            has-profile="','"\n            ?has-search="','"\n            .l1Data="','"\n            .navLinks="','"\n          ></dds-masthead-container>\n        ']))),Object(D.a)(h),Object(D.a)(Pe),Object(D.a)(s),Object(D.a)(o),Object(D.a)(l),r,c,x.d,i))};De.story={name:"With L1",parameters:{knobs:{MastheadComposite:function(){return{platform:Object(j.a)("platform name (platform)",""),hasProfile:Object(I.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(I.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(j.a)("search placeholder (searchPlaceholder)",E()()?"":"Search all of IBM"),selectedMenuItem:Object(j.a)("selected menu item (selected-menu-item)","Products"),userStatus:Object(I.select)("The user authenticated status (user-status)",be,be.unauthenticated)}}},propsSet:{default:{MastheadComposite:{hasProfile:"true",hasSearch:!0,platform:null,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Lorem ipsum dolor sit amet",userStatus:be.unauthenticated}}}}};var Oe,Ee,je,Te,xe=function(e){var t,n,a=null!==(t=null==e?void 0:e.MastheadComposite)&&void 0!==t?t:{},s=a.endpoint,o=a.selectedMenuItem,l=a.userStatus,i=a.navLinks,r=a.hasProfile,c=a.hasSearch,u=a.searchPlaceholder,h=a.mastheadLogo,d=a.platform,m=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return Object(M.d)(de||(de=S||(S=W(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),T.a,m?Object(M.d)(me||(me=y||(y=W(['\n          <dds-masthead-composite\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .logoData="','"\n            .unauthenticatedProfileItems="','"\n          ></dds-masthead-composite>\n        ']))),Object(D.a)(o),Object(D.a)(l),Object(D.a)(u),Object(D.a)(A.a),r,c,i,"alternateWithTooltip"===h?x.c:void 0,Object(D.a)(A.b)):Object(M.d)(pe||(pe=v||(v=W(['\n          <dds-masthead-container\n            platform="','"\n            .platformData="','"\n            data-endpoint="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            .logoData="','"\n            has-profile="','"\n            ?has-search="','"\n          ></dds-masthead-container>\n        ']))),Object(D.a)(d),Object(D.a)(Pe),Object(D.a)(s),Object(D.a)(o),Object(D.a)(l),Object(D.a)(u),i,"alternateWithTooltip"===h?x.c:void 0,r,c))};xe.story={name:"With alternate logo and tooltip",parameters:{knobs:{MastheadComposite:function(){return{platform:Object(j.a)("platform name (platform)",""),hasProfile:Object(I.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(I.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(j.a)("search placeholder (searchPlaceholder)","Search all of IBM"),selectedMenuItem:Object(j.a)("selected menu item (selected-menu-item)","Consulting & Services"),mastheadLogo:Object(I.select)("masthead logo data (logoData)",{defaultWithNoTooltip:null,alternateWithTooltip:"alternateWithTooltip"},"alternateWithTooltip"),userStatus:Object(I.select)("The user authenticated status (user-status)",be,be.unauthenticated)}}},propsSet:{default:{MastheadComposite:{platform:null,hasProfile:"true",hasSearch:!0,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:be.unauthenticated}}}}},t.default={title:"Components/Masthead",decorators:[function(e){return window._hPageShow||(window._hPageShow=Object(C.a)(window,"pageshow",(function(){var e=document.querySelector("dds-left-nav");e&&(e.expanded=!1)}))),e()}],parameters:ge(ge((Ee={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\\\nimport inPercy from \'@percy-io/in-percy\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\nimport DDSLeftNav from \'../left-nav\';\\\\nimport \'../masthead-container\';\\\\nimport styles from \'./masthead.stories.scss\';\\\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\\\nimport {\\\\n  UNAUTHENTICATED_STATUS,\\\\n  MASTHEAD_AUTH_METHOD,\\\\n} from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from \'./profile-items\';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\\\nimport readme from \'./README.stories.mdx\';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: \'test.user@ibm.com\',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: \'IBM Cloud\',\\\\n  url: \'https://www.ibm.com/cloud\',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  \'en-US\': {\\\\n    url: \'https://www.example.com/us-en\',\\\\n  },\\\\n  \'fr-FR\': {\\\\n    url: \'https://www.example.com/fr-fr/sample\',\\\\n  },\\\\n  \'es-MX\': {\\\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\\\n  },\\\\n};\\\\n\\\\nasync function customTypeaheadApiFunction(searchVal) {\\\\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`)\\\\n    .then(response => response.json())\\\\n    .then(data => {\\\\n      const searchResults = [\\\\n        data.hints,\\\\n        {\\\\n          title: \'Product pages\',\\\\n          items: data.products,\\\\n        },\\\\n      ];\\\\n      return searchResults;\\\\n    });\\\\n}\\\\n\\\\nexport const Default = args => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n    authMethod,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${authMethod}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport const withV2Data = ({ parameters }) => {\\\\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\\\\n    parameters?.props?.MastheadComposite ?? {};\\\\n  const { useMock } = parameters?.props?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\\\\\"\\\\n            has-contact=\\\\\\"${hasContact}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\\\\\"\\\\n            has-contact=\\\\\\"${hasContact}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithV2Data.story = {\\\\n  name: \'With v2 Data\',\\\\n};\\\\n\\\\nexport const withCloudData = ({ parameters }) => {\\\\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\\\\n    parameters?.props?.MastheadComposite ?? {};\\\\n  const { useMock } = parameters?.props?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"Cloud\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\\\\"\\\\n            platform=\\\\\\"${platform || \'Cloud\'}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport const WithCustomTypeahead = args => {\\\\n  const {\\\\n    endpoint,\\\\n    customProfileLogin,\\\\n    navLinks,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\\\\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\\\\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\\\\n  });\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nWithCustomTypeahead.story = {\\\\n  name: \'With custom typeahead\',\\\\n};\\\\n\\\\nexport const searchOpenOnload = args => {\\\\n  const {\\\\n    endpoint,\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            activate-search\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            activate-search\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nsearchOpenOnload.story = {\\\\n  name: \'Search open onload\',\\\\n};\\\\n\\\\nexport const withPlatform = args => {\\\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(urlObject)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithPlatform.story = {\\\\n  name: \'With platform\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'Platform\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: \'Platform\',\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceHolder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withL1 = args => {\\\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformData=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithL1.story = {\\\\n  name: \'With L1\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Products\'),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          platform: null,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withAlternateLogoAndTooltip = args => {\\\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformData=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithAlternateLogoAndTooltip.story = {\\\\n  name: \'With alternate logo and tooltip\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\\\n        mastheadLogo: select(\\\\n          \'masthead logo data (logoData)\',\\\\n          { defaultWithNoTooltip: null, alternateWithTooltip: \'alternateWithTooltip\' },\\\\n          \'alternateWithTooltip\'\\\\n        ),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Masthead\',\\\\n  decorators: [\\\\n    story => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable(\'custom profile login url (customProfileLogin)\', \'https://www.example.com/\'),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: \'https://www.example.com/\',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":68},\\"endLoc\\":{\\"col\\":1,\\"line\\":117},\\"startBody\\":{\\"col\\":23,\\"line\\":68},\\"endBody\\":{\\"col\\":1,\\"line\\":117}},\\"withV2Data\\":{\\"startLoc\\":{\\"col\\":26,\\"line\\":119},\\"endLoc\\":{\\"col\\":1,\\"line\\":157},\\"startBody\\":{\\"col\\":26,\\"line\\":119},\\"endBody\\":{\\"col\\":1,\\"line\\":157}},\\"withCloudData\\":{\\"startLoc\\":{\\"col\\":29,\\"line\\":163},\\"endLoc\\":{\\"col\\":1,\\"line\\":200},\\"startBody\\":{\\"col\\":29,\\"line\\":163},\\"endBody\\":{\\"col\\":1,\\"line\\":200}},\\"WithCustomTypeahead\\":{\\"startLoc\\":{\\"col\\":35,\\"line\\":202},\\"endLoc\\":{\\"col\\":1,\\"line\\":258},\\"startBody\\":{\\"col\\":35,\\"line\\":202},\\"endBody\\":{\\"col\\":1,\\"line\\":258}},\\"searchOpenOnload\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":264},\\"endLoc\\":{\\"col\\":1,\\"line\\":314},\\"startBody\\":{\\"col\\":32,\\"line\\":264},\\"endBody\\":{\\"col\\":1,\\"line\\":314}},\\"withPlatform\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":320},\\"endLoc\\":{\\"col\\":1,\\"line\\":355},\\"startBody\\":{\\"col\\":28,\\"line\\":320},\\"endBody\\":{\\"col\\":1,\\"line\\":355}},\\"withL1\\":{\\"startLoc\\":{\\"col\\":22,\\"line\\":385},\\"endLoc\\":{\\"col\\":1,\\"line\\":421},\\"startBody\\":{\\"col\\":22,\\"line\\":385},\\"endBody\\":{\\"col\\":1,\\"line\\":421}},\\"withAlternateLogoAndTooltip\\":{\\"startLoc\\":{\\"col\\":43,\\"line\\":451},\\"endLoc\\":{\\"col\\":1,\\"line\\":488},\\"startBody\\":{\\"col\\":43,\\"line\\":451},\\"endBody\\":{\\"col\\":1,\\"line\\":488}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\nimport inPercy from \'@percy-io/in-percy\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\nimport DDSLeftNav from \'../left-nav\';\\nimport \'../masthead-container\';\\nimport styles from \'./masthead.stories.scss\';\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\nimport {\\n  UNAUTHENTICATED_STATUS,\\n  MASTHEAD_AUTH_METHOD,\\n} from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from \'./profile-items\';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\nimport readme from \'./README.stories.mdx\';\\n\\nconst userStatuses = {\\n  authenticated: \'test.user@ibm.com\',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: \'IBM Cloud\',\\n  url: \'https://www.ibm.com/cloud\',\\n};\\n\\nconst urlObject = {\\n  \'en-US\': {\\n    url: \'https://www.example.com/us-en\',\\n  },\\n  \'fr-FR\': {\\n    url: \'https://www.example.com/fr-fr/sample\',\\n  },\\n  \'es-MX\': {\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\n  },\\n};\\n\\nasync function customTypeaheadApiFunction(searchVal) {\\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`)\\n    .then(response => response.json())\\n    .then(data => {\\n      const searchResults = [\\n        data.hints,\\n        {\\n          title: \'Product pages\',\\n          items: data.products,\\n        },\\n      ];\\n      return searchResults;\\n    });\\n}\\n\\nexport const Default = args => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    authMethod,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${authMethod}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nexport const withV2Data = ({ parameters }) => {\\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nwithV2Data.story = {\\n  name: \'With v2 Data\',\\n};\\n\\nexport const withCloudData = ({ parameters }) => {\\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"Cloud\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\"\\n            platform=\\"${platform || \'Cloud\'}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nexport const WithCustomTypeahead = args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\\n  });\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nWithCustomTypeahead.story = {\\n  name: \'With custom typeahead\',\\n};\\n\\nexport const searchOpenOnload = args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            activate-search\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nsearchOpenOnload.story = {\\n  name: \'Search open onload\',\\n};\\n\\nexport const withPlatform = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nwithPlatform.story = {\\n  name: \'With platform\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'Platform\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: \'Platform\',\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceHolder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withL1 = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};;\\n\\nwithL1.story = {\\n  name: \'With L1\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Products\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          platform: null,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withAlternateLogoAndTooltip = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithAlternateLogoAndTooltip.story = {\\n  name: \'With alternate logo and tooltip\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        mastheadLogo: select(\\n          \'masthead logo data (logoData)\',\\n          { defaultWithNoTooltip: null, alternateWithTooltip: \'alternateWithTooltip\' },\\n          \'alternateWithTooltip\'\\n        ),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: \'Components/Masthead\',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\"storySource\\":{\\"source\\":\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\\\nimport inPercy from \'@percy-io/in-percy\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\nimport DDSLeftNav from \'../left-nav\';\\\\nimport \'../masthead-container\';\\\\nimport styles from \'./masthead.stories.scss\';\\\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\\\nimport {\\\\n  UNAUTHENTICATED_STATUS,\\\\n  MASTHEAD_AUTH_METHOD,\\\\n} from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from \'./profile-items\';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\\\nimport readme from \'./README.stories.mdx\';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: \'test.user@ibm.com\',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: \'IBM Cloud\',\\\\n  url: \'https://www.ibm.com/cloud\',\\\\n};\\\\n\\\\nconst urlObject = {\\\\n  \'en-US\': {\\\\n    url: \'https://www.example.com/us-en\',\\\\n  },\\\\n  \'fr-FR\': {\\\\n    url: \'https://www.example.com/fr-fr/sample\',\\\\n  },\\\\n  \'es-MX\': {\\\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\\\n  },\\\\n};\\\\n\\\\nasync function customTypeaheadApiFunction(searchVal) {\\\\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`)\\\\n    .then(response => response.json())\\\\n    .then(data => {\\\\n      const searchResults = [\\\\n        data.hints,\\\\n        {\\\\n          title: \'Product pages\',\\\\n          items: data.products,\\\\n        },\\\\n      ];\\\\n      return searchResults;\\\\n    });\\\\n}\\\\n\\\\nexport const Default = args => {\\\\n  const {\\\\n    customProfileLogin,\\\\n    platform,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    selectedMenuItem,\\\\n    searchPlaceholder,\\\\n    userStatus,\\\\n    navLinks,\\\\n    authMethod,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${authMethod}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport const withV2Data = ({ parameters }) => {\\\\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\\\\n    parameters?.props?.MastheadComposite ?? {};\\\\n  const { useMock } = parameters?.props?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\\\\\"\\\\n            has-contact=\\\\\\"${hasContact}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\\\\\"\\\\n            has-contact=\\\\\\"${hasContact}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithV2Data.story = {\\\\n  name: \'With v2 Data\',\\\\n};\\\\n\\\\nexport const withCloudData = ({ parameters }) => {\\\\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\\\\n    parameters?.props?.MastheadComposite ?? {};\\\\n  const { useMock } = parameters?.props?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"Cloud\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\\\\\"\\\\n            platform=\\\\\\"${platform || \'Cloud\'}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            auth-method=\\\\\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport const WithCustomTypeahead = args => {\\\\n  const {\\\\n    endpoint,\\\\n    customProfileLogin,\\\\n    navLinks,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\\\\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\\\\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\\\\n  });\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n            ?custom-typeahead-api=${true}\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nWithCustomTypeahead.story = {\\\\n  name: \'With custom typeahead\',\\\\n};\\\\n\\\\nexport const searchOpenOnload = args => {\\\\n  const {\\\\n    endpoint,\\\\n    customProfileLogin,\\\\n    platform,\\\\n    selectedMenuItem,\\\\n    userStatus,\\\\n    searchPlaceholder,\\\\n    hasProfile,\\\\n    hasSearch,\\\\n    navLinks,\\\\n  } = args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            activate-search\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            activate-search\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            custom-profile-login=\\\\\\"${customProfileLogin}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nsearchOpenOnload.story = {\\\\n  name: \'Search open onload\',\\\\n};\\\\n\\\\nexport const withPlatform = args => {\\\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\"${ifNonNull(platformData.name)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(urlObject)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformUrl=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithPlatform.story = {\\\\n  name: \'With platform\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'Platform\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: \'Platform\',\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceHolder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withL1 = args => {\\\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformData=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .l1Data=\\\\\\"${mastheadL1Data}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithL1.story = {\\\\n  name: \'With L1\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Products\'),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          platform: null,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport const withAlternateLogoAndTooltip = args => {\\\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\"\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\"${ifNonNull(platform)}\\\\\\"\\\\n            .platformData=\\\\\\"${ifNonNull(platformData.url)}\\\\\\"\\\\n            data-endpoint=\\\\\\"${ifNonNull(endpoint)}\\\\\\"\\\\n            selected-menu-item=\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\"\\\\n            user-status=\\\\\\"${ifNonNull(userStatus)}\\\\\\"\\\\n            searchPlaceholder=\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\"\\\\n            .navLinks=\\\\\\"${navLinks}\\\\\\"\\\\n            .logoData=\\\\\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\\\\\"\\\\n            has-profile=\\\\\\"${hasProfile}\\\\\\"\\\\n            ?has-search=\\\\\\"${hasSearch}\\\\\\"\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nwithAlternateLogoAndTooltip.story = {\\\\n  name: \'With alternate logo and tooltip\',\\\\n  parameters: {\\\\n    knobs: {\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\\\n        mastheadLogo: select(\\\\n          \'masthead logo data (logoData)\',\\\\n          { defaultWithNoTooltip: null, alternateWithTooltip: \'alternateWithTooltip\' },\\\\n          \'alternateWithTooltip\'\\\\n        ),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n      }),\\\\n    },\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Masthead\',\\\\n  decorators: [\\\\n    story => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable(\'custom profile login url (customProfileLogin)\', \'https://www.example.com/\'),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: \'true\',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: \'Search all of IBM\',\\\\n          selectedMenuItem: \'Services & Consulting\',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: \'https://www.example.com/\',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\",\\"locationsMap\\":{\\"default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":68},\\"endLoc\\":{\\"col\\":1,\\"line\\":117},\\"startBody\\":{\\"col\\":23,\\"line\\":68},\\"endBody\\":{\\"col\\":1,\\"line\\":117}},\\"with-v-2-data\\":{\\"startLoc\\":{\\"col\\":26,\\"line\\":119},\\"endLoc\\":{\\"col\\":1,\\"line\\":157},\\"startBody\\":{\\"col\\":26,\\"line\\":119},\\"endBody\\":{\\"col\\":1,\\"line\\":157}},\\"with-cloud-data\\":{\\"startLoc\\":{\\"col\\":29,\\"line\\":163},\\"endLoc\\":{\\"col\\":1,\\"line\\":200},\\"startBody\\":{\\"col\\":29,\\"line\\":163},\\"endBody\\":{\\"col\\":1,\\"line\\":200}},\\"with-custom-typeahead\\":{\\"startLoc\\":{\\"col\\":35,\\"line\\":202},\\"endLoc\\":{\\"col\\":1,\\"line\\":258},\\"startBody\\":{\\"col\\":35,\\"line\\":202},\\"endBody\\":{\\"col\\":1,\\"line\\":258}},\\"search-open-onload\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":264},\\"endLoc\\":{\\"col\\":1,\\"line\\":314},\\"startBody\\":{\\"col\\":32,\\"line\\":264},\\"endBody\\":{\\"col\\":1,\\"line\\":314}},\\"with-platform\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":320},\\"endLoc\\":{\\"col\\":1,\\"line\\":355},\\"startBody\\":{\\"col\\":28,\\"line\\":320},\\"endBody\\":{\\"col\\":1,\\"line\\":355}},\\"with-l-1\\":{\\"startLoc\\":{\\"col\\":22,\\"line\\":385},\\"endLoc\\":{\\"col\\":1,\\"line\\":421},\\"startBody\\":{\\"col\\":22,\\"line\\":385},\\"endBody\\":{\\"col\\":1,\\"line\\":421}},\\"with-alternate-logo-and-tooltip\\":{\\"startLoc\\":{\\"col\\":43,\\"line\\":451},\\"endLoc\\":{\\"col\\":1,\\"line\\":488},\\"startBody\\":{\\"col\\":43,\\"line\\":451},\\"endBody\\":{\\"col\\":1,\\"line\\":488}}}},\\n    ...readme.parameters,\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable(\'custom profile login url (customProfileLogin)\', \'https://www.example.com/\'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: \'https://www.example.com/\',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":76},"endLoc":{"col":1,"line":125},"startBody":{"col":23,"line":76},"endBody":{"col":1,"line":125}},"withV2Data":{"startLoc":{"col":26,"line":127},"endLoc":{"col":1,"line":165},"startBody":{"col":26,"line":127},"endBody":{"col":1,"line":165}},"withCloudData":{"startLoc":{"col":29,"line":171},"endLoc":{"col":1,"line":208},"startBody":{"col":29,"line":171},"endBody":{"col":1,"line":208}},"WithCustomTypeahead":{"startLoc":{"col":35,"line":210},"endLoc":{"col":1,"line":266},"startBody":{"col":35,"line":210},"endBody":{"col":1,"line":266}},"searchOpenOnload":{"startLoc":{"col":32,"line":272},"endLoc":{"col":1,"line":322},"startBody":{"col":32,"line":272},"endBody":{"col":1,"line":322}},"withPlatform":{"startLoc":{"col":28,"line":328},"endLoc":{"col":1,"line":363},"startBody":{"col":28,"line":328},"endBody":{"col":1,"line":363}},"withL1":{"startLoc":{"col":22,"line":393},"endLoc":{"col":1,"line":429},"startBody":{"col":22,"line":393},"endBody":{"col":1,"line":429}},"withAlternateLogoAndTooltip":{"startLoc":{"col":43,"line":459},"endLoc":{"col":1,"line":496},"startBody":{"col":43,"line":459},"endBody":{"col":1,"line":496}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\nimport inPercy from \'@percy-io/in-percy\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\nimport DDSLeftNav from \'../left-nav\';\\nimport \'../masthead-container\';\\nimport styles from \'./masthead.stories.scss\';\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\nimport {\\n  UNAUTHENTICATED_STATUS,\\n  MASTHEAD_AUTH_METHOD,\\n} from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from \'./profile-items\';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\nimport readme from \'./README.stories.mdx\';\\n\\nconst userStatuses = {\\n  authenticated: \'test.user@ibm.com\',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: \'IBM Cloud\',\\n  url: \'https://www.ibm.com/cloud\',\\n};\\n\\nconst urlObject = {\\n  \'en-US\': {\\n    url: \'https://www.example.com/us-en\',\\n  },\\n  \'fr-FR\': {\\n    url: \'https://www.example.com/fr-fr/sample\',\\n  },\\n  \'es-MX\': {\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\n  },\\n};\\n\\nasync function customTypeaheadApiFunction(searchVal) {\\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`)\\n    .then(response => response.json())\\n    .then(data => {\\n      const searchResults = [\\n        data.hints,\\n        {\\n          title: \'Product pages\',\\n          items: data.products,\\n        },\\n      ];\\n      return searchResults;\\n    });\\n}\\n\\nexport const Default = args => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    authMethod,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${authMethod}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport const withV2Data = ({ parameters }) => {\\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithV2Data.story = {\\n  name: \'With v2 Data\',\\n};\\n\\nexport const withCloudData = ({ parameters }) => {\\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"Cloud\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\"\\n            platform=\\"${platform || \'Cloud\'}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport const WithCustomTypeahead = args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\\n  });\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nWithCustomTypeahead.story = {\\n  name: \'With custom typeahead\',\\n};\\n\\nexport const searchOpenOnload = args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            activate-search\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nsearchOpenOnload.story = {\\n  name: \'Search open onload\',\\n};\\n\\nexport const withPlatform = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithPlatform.story = {\\n  name: \'With platform\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'Platform\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: \'Platform\',\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceHolder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withL1 = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithL1.story = {\\n  name: \'With L1\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Products\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          platform: null,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withAlternateLogoAndTooltip = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithAlternateLogoAndTooltip.story = {\\n  name: \'With alternate logo and tooltip\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        mastheadLogo: select(\\n          \'masthead logo data (logoData)\',\\n          { defaultWithNoTooltip: null, alternateWithTooltip: \'alternateWithTooltip\' },\\n          \'alternateWithTooltip\'\\n        ),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: \'Components/Masthead\',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable(\'custom profile login url (customProfileLogin)\', \'https://www.example.com/\'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: \'https://www.example.com/\',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":68},"endLoc":{"col":1,"line":117},"startBody":{"col":23,"line":68},"endBody":{"col":1,"line":117}},"withV2Data":{"startLoc":{"col":26,"line":119},"endLoc":{"col":1,"line":157},"startBody":{"col":26,"line":119},"endBody":{"col":1,"line":157}},"withCloudData":{"startLoc":{"col":29,"line":163},"endLoc":{"col":1,"line":200},"startBody":{"col":29,"line":163},"endBody":{"col":1,"line":200}},"WithCustomTypeahead":{"startLoc":{"col":35,"line":202},"endLoc":{"col":1,"line":258},"startBody":{"col":35,"line":202},"endBody":{"col":1,"line":258}},"searchOpenOnload":{"startLoc":{"col":32,"line":264},"endLoc":{"col":1,"line":314},"startBody":{"col":32,"line":264},"endBody":{"col":1,"line":314}},"withPlatform":{"startLoc":{"col":28,"line":320},"endLoc":{"col":1,"line":355},"startBody":{"col":28,"line":320},"endBody":{"col":1,"line":355}},"withL1":{"startLoc":{"col":22,"line":385},"endLoc":{"col":1,"line":421},"startBody":{"col":22,"line":385},"endBody":{"col":1,"line":421}},"withAlternateLogoAndTooltip":{"startLoc":{"col":43,"line":451},"endLoc":{"col":1,"line":488},"startBody":{"col":43,"line":451},"endBody":{"col":1,"line":488}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from \'lit-element\';\nimport { boolean, select } from \'@storybook/addon-knobs\';\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\nimport inPercy from \'@percy-io/in-percy\';\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\nimport DDSLeftNav from \'../left-nav\';\nimport \'../masthead-container\';\nimport styles from \'./masthead.stories.scss\';\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\nimport {\n  UNAUTHENTICATED_STATUS,\n  MASTHEAD_AUTH_METHOD,\n} from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from \'./profile-items\';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\nimport readme from \'./README.stories.mdx\';\n\nconst userStatuses = {\n  authenticated: \'test.user@ibm.com\',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: \'IBM Cloud\',\n  url: \'https://www.ibm.com/cloud\',\n};\n\nconst urlObject = {\n  \'en-US\': {\n    url: \'https://www.example.com/us-en\',\n  },\n  \'fr-FR\': {\n    url: \'https://www.example.com/fr-fr/sample\',\n  },\n  \'es-MX\': {\n    url: \'https://www.example.com/ibm/es-mx/sample\',\n  },\n};\n\nasync function customTypeaheadApiFunction(searchVal) {\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`)\n    .then(response => response.json())\n    .then(data => {\n      const searchResults = [\n        data.hints,\n        {\n          title: \'Product pages\',\n          items: data.products,\n        },\n      ];\n      return searchResults;\n    });\n}\n\nexport const Default = args => {\n  const {\n    customProfileLogin,\n    platform,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    authMethod,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${authMethod}"\n          ></dds-masthead-container>\n        `}\n  `;\n};;;\n\nexport const withV2Data = ({ parameters }) => {\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\n    parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n            has-contact="${hasContact}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2"\n            platform="${ifNonNull(platform)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n            has-contact="${hasContact}"\n          ></dds-masthead-container>\n        `}\n  `;\n};;;\n\nwithV2Data.story = {\n  name: \'With v2 Data\',\n};\n\nexport const withCloudData = ({ parameters }) => {\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\n    parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="Cloud"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.COOKIE}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"\n            platform="${platform || \'Cloud\'}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.COOKIE}"\n          ></dds-masthead-container>\n        `}\n  `;\n};;;\n\nexport const WithCustomTypeahead = args => {\n  const {\n    endpoint,\n    customProfileLogin,\n    navLinks,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\n  });\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}\n          ></dds-masthead-container>\n        `}\n  `;\n};;;\n\nWithCustomTypeahead.story = {\n  name: \'With custom typeahead\',\n};\n\nexport const searchOpenOnload = args => {\n  const {\n    endpoint,\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            activate-search\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            activate-search\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n          ></dds-masthead-container>\n        `}\n  `;\n};;;\n\nsearchOpenOnload.story = {\n  name: \'Search open onload\',\n};\n\nexport const withPlatform = args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n          ></dds-masthead-container>\n        `}\n  `;\n};;;\n\nwithPlatform.story = {\n  name: \'With platform\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'Platform\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: \'Platform\',\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceHolder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withL1 = args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            user-status="${ifNonNull(userStatus)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformData="${ifNonNull(platformData.url)}"\n            data-endpoint="${ifNonNull(endpoint)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n          ></dds-masthead-container>\n        `}\n  `;\n};;;\n\nwithL1.story = {\n  name: \'With L1\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Products\'),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          hasProfile: \'true\',\n          hasSearch: true,\n          platform: null,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withAlternateLogoAndTooltip = args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformData="${ifNonNull(platformData.url)}"\n            data-endpoint="${ifNonNull(endpoint)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nwithAlternateLogoAndTooltip.story = {\n  name: \'With alternate logo and tooltip\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\n        mastheadLogo: select(\n          \'masthead logo data (logoData)\',\n          { defaultWithNoTooltip: null, alternateWithTooltip: \'alternateWithTooltip\' },\n          \'alternateWithTooltip\'\n        ),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: \'Components/Masthead\',\n  decorators: [\n    story => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\n          const leftNav = document.querySelector(\'dds-left-nav\');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {"storySource":{"source":"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport { boolean, select } from \'@storybook/addon-knobs\';\\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\\nimport inPercy from \'@percy-io/in-percy\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\nimport DDSLeftNav from \'../left-nav\';\\nimport \'../masthead-container\';\\nimport styles from \'./masthead.stories.scss\';\\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\\nimport {\\n  UNAUTHENTICATED_STATUS,\\n  MASTHEAD_AUTH_METHOD,\\n} from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from \'./profile-items\';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\\nimport readme from \'./README.stories.mdx\';\\n\\nconst userStatuses = {\\n  authenticated: \'test.user@ibm.com\',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: \'IBM Cloud\',\\n  url: \'https://www.ibm.com/cloud\',\\n};\\n\\nconst urlObject = {\\n  \'en-US\': {\\n    url: \'https://www.example.com/us-en\',\\n  },\\n  \'fr-FR\': {\\n    url: \'https://www.example.com/fr-fr/sample\',\\n  },\\n  \'es-MX\': {\\n    url: \'https://www.example.com/ibm/es-mx/sample\',\\n  },\\n};\\n\\nasync function customTypeaheadApiFunction(searchVal) {\\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`)\\n    .then(response => response.json())\\n    .then(data => {\\n      const searchResults = [\\n        data.hints,\\n        {\\n          title: \'Product pages\',\\n          items: data.products,\\n        },\\n      ];\\n      return searchResults;\\n    });\\n}\\n\\nexport const Default = args => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    authMethod,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${authMethod}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport const withV2Data = ({ parameters }) => {\\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithV2Data.story = {\\n  name: \'With v2 Data\',\\n};\\n\\nexport const withCloudData = ({ parameters }) => {\\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"Cloud\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\"\\n            platform=\\"${platform || \'Cloud\'}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport const WithCustomTypeahead = args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\\n  });\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nWithCustomTypeahead.story = {\\n  name: \'With custom typeahead\',\\n};\\n\\nexport const searchOpenOnload = args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            activate-search\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nsearchOpenOnload.story = {\\n  name: \'Search open onload\',\\n};\\n\\nexport const withPlatform = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithPlatform.story = {\\n  name: \'With platform\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'Platform\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: \'Platform\',\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceHolder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withL1 = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithL1.story = {\\n  name: \'With L1\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Products\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          platform: null,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport const withAlternateLogoAndTooltip = args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nwithAlternateLogoAndTooltip.story = {\\n  name: \'With alternate logo and tooltip\',\\n  parameters: {\\n    knobs: {\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        mastheadLogo: select(\\n          \'masthead logo data (logoData)\',\\n          { defaultWithNoTooltip: null, alternateWithTooltip: \'alternateWithTooltip\' },\\n          \'alternateWithTooltip\'\\n        ),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n      }),\\n    },\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n        },\\n      },\\n    },\\n  },\\n};\\n\\nexport default {\\n  title: \'Components/Masthead\',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\\n          const leftNav = document.querySelector(\'dds-left-nav\');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        platform: textNullable(\'platform name (platform)\', \'\'),\\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable(\'custom profile login url (customProfileLogin)\', \'https://www.example.com/\'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: \'true\',\\n          hasSearch: true,\\n          searchPlaceholder: \'Search all of IBM\',\\n          selectedMenuItem: \'Services & Consulting\',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: \'https://www.example.com/\',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n","locationsMap":{"default":{"startLoc":{"col":23,"line":68},"endLoc":{"col":1,"line":117},"startBody":{"col":23,"line":68},"endBody":{"col":1,"line":117}},"with-v-2-data":{"startLoc":{"col":26,"line":119},"endLoc":{"col":1,"line":157},"startBody":{"col":26,"line":119},"endBody":{"col":1,"line":157}},"with-cloud-data":{"startLoc":{"col":29,"line":163},"endLoc":{"col":1,"line":200},"startBody":{"col":29,"line":163},"endBody":{"col":1,"line":200}},"with-custom-typeahead":{"startLoc":{"col":35,"line":202},"endLoc":{"col":1,"line":258},"startBody":{"col":35,"line":202},"endBody":{"col":1,"line":258}},"search-open-onload":{"startLoc":{"col":32,"line":264},"endLoc":{"col":1,"line":314},"startBody":{"col":32,"line":264},"endBody":{"col":1,"line":314}},"with-platform":{"startLoc":{"col":28,"line":320},"endLoc":{"col":1,"line":355},"startBody":{"col":28,"line":320},"endBody":{"col":1,"line":355}},"with-l-1":{"startLoc":{"col":22,"line":385},"endLoc":{"col":1,"line":421},"startBody":{"col":22,"line":385},"endBody":{"col":1,"line":421}},"with-alternate-logo-and-tooltip":{"startLoc":{"col":43,"line":451},"endLoc":{"col":1,"line":488},"startBody":{"col":43,"line":451},"endBody":{"col":1,"line":488}}}},\n    ...readme.parameters,\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable(\'custom profile login url (customProfileLogin)\', \'https://www.example.com/\'),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: \'https://www.example.com/\',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: "args => {\\n  const {\\n    customProfileLogin,\\n    platform,\\n    hasProfile,\\n    hasSearch,\\n    selectedMenuItem,\\n    searchPlaceholder,\\n    userStatus,\\n    navLinks,\\n    authMethod,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${authMethod}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...Default.parameters };\nwithV2Data.parameters = { storySource: { source: "({ parameters }) => {\\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.DEFAULT}\\"\\n            has-contact=\\"${hasContact}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withV2Data.parameters };\nwithCloudData.parameters = { storySource: { source: "({ parameters }) => {\\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\\n    parameters?.props?.MastheadComposite ?? {};\\n  const { useMock } = parameters?.props?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"Cloud\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"/common/carbon-for-ibm-dotcom/translations/cloud-masthead\\"\\n            platform=\\"${platform || \'Cloud\'}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            auth-method=\\"${MASTHEAD_AUTH_METHOD.COOKIE}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withCloudData.parameters };\nWithCustomTypeahead.parameters = { storySource: { source: "args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    navLinks,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\\n  });\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n            ?custom-typeahead-api=${true}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...WithCustomTypeahead.parameters };\nsearchOpenOnload.parameters = { storySource: { source: "args => {\\n  const {\\n    endpoint,\\n    customProfileLogin,\\n    platform,\\n    selectedMenuItem,\\n    userStatus,\\n    searchPlaceholder,\\n    hasProfile,\\n    hasSearch,\\n    navLinks,\\n  } = args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            activate-search\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            activate-search\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            custom-profile-login=\\"${customProfileLogin}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...searchOpenOnload.parameters };\nwithPlatform.parameters = { storySource: { source: "args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\"${ifNonNull(platformData.name)}\\"\\n            .platformUrl=\\"${ifNonNull(urlObject)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformUrl=\\"${ifNonNull(platformData.url)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withPlatform.parameters };\nwithL1.parameters = { storySource: { source: "args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .l1Data=\\"${mastheadL1Data}\\"\\n            .navLinks=\\"${navLinks}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withL1.parameters };\nwithAlternateLogoAndTooltip.parameters = { storySource: { source: "args => {\\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .authenticatedProfileItems=\\"${ifNonNull(authenticatedProfileItems)}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            .unauthenticatedProfileItems=\\"${ifNonNull(unauthenticatedProfileItems)}\\"\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\"${ifNonNull(platform)}\\"\\n            .platformData=\\"${ifNonNull(platformData.url)}\\"\\n            data-endpoint=\\"${ifNonNull(endpoint)}\\"\\n            selected-menu-item=\\"${ifNonNull(selectedMenuItem)}\\"\\n            user-status=\\"${ifNonNull(userStatus)}\\"\\n            searchPlaceholder=\\"${ifNonNull(searchPlaceholder)}\\"\\n            .navLinks=\\"${navLinks}\\"\\n            .logoData=\\"${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}\\"\\n            has-profile=\\"${hasProfile}\\"\\n            ?has-search=\\"${hasSearch}\\"\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}" }, ...withAlternateLogoAndTooltip.parameters };',locationsMap:{default:{startLoc:{col:23,line:84},endLoc:{col:1,line:133},startBody:{col:23,line:84},endBody:{col:1,line:133}},"with-v-2-data":{startLoc:{col:26,line:135},endLoc:{col:1,line:173},startBody:{col:26,line:135},endBody:{col:1,line:173}},"with-cloud-data":{startLoc:{col:29,line:179},endLoc:{col:1,line:216},startBody:{col:29,line:179},endBody:{col:1,line:216}},"with-custom-typeahead":{startLoc:{col:35,line:218},endLoc:{col:1,line:274},startBody:{col:35,line:218},endBody:{col:1,line:274}},"search-open-onload":{startLoc:{col:32,line:280},endLoc:{col:1,line:330},startBody:{col:32,line:280},endBody:{col:1,line:330}},"with-platform":{startLoc:{col:28,line:336},endLoc:{col:1,line:371},startBody:{col:28,line:336},endBody:{col:1,line:371}},"with-l-1":{startLoc:{col:22,line:401},endLoc:{col:1,line:437},startBody:{col:22,line:401},endBody:{col:1,line:437}},"with-alternate-logo-and-tooltip":{startLoc:{col:43,line:467},endLoc:{col:1,line:504},startBody:{col:43,line:467},endBody:{col:1,line:504}}}}},je="storySource",Te={source:'/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from \'lit-element\';\nimport { boolean, select } from \'@storybook/addon-knobs\';\nimport on from \'carbon-components/es/globals/js/misc/on.js\';\nimport ifNonNull from \'carbon-web-components/es/globals/directives/if-non-null.js\';\nimport inPercy from \'@percy-io/in-percy\';\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\nimport DDSLeftNav from \'../left-nav\';\nimport \'../masthead-container\';\nimport styles from \'./masthead.stories.scss\';\nimport { mastheadLinks as links, mastheadL1Data, logoData } from \'./links\';\nimport {\n  UNAUTHENTICATED_STATUS,\n  MASTHEAD_AUTH_METHOD,\n} from \'../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI\';\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from \'./profile-items\';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from \'../../../globals/internal/feature-flags\';\nimport readme from \'./README.stories.mdx\';\n\nconst userStatuses = {\n  authenticated: \'test.user@ibm.com\',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: \'IBM Cloud\',\n  url: \'https://www.ibm.com/cloud\',\n};\n\nconst urlObject = {\n  \'en-US\': {\n    url: \'https://www.example.com/us-en\',\n  },\n  \'fr-FR\': {\n    url: \'https://www.example.com/fr-fr/sample\',\n  },\n  \'es-MX\': {\n    url: \'https://www.example.com/ibm/es-mx/sample\',\n  },\n};\n\nasync function customTypeaheadApiFunction(searchVal) {\n  return fetch(`https://ibmdocs-dev.mybluemix.net/docs/api/v1/suggest?query=${searchVal}&lang=undefined&categories=&limit=6`)\n    .then(response => response.json())\n    .then(data => {\n      const searchResults = [\n        data.hints,\n        {\n          title: \'Product pages\',\n          items: data.products,\n        },\n      ];\n      return searchResults;\n    });\n}\n\nexport const Default = args => {\n  const {\n    customProfileLogin,\n    platform,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    authMethod,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${authMethod}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nexport const withV2Data = ({ parameters }) => {\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\n    parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n            has-contact="${hasContact}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2"\n            platform="${ifNonNull(platform)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n            has-contact="${hasContact}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nwithV2Data.story = {\n  name: \'With v2 Data\',\n};\n\nexport const withCloudData = ({ parameters }) => {\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\n    parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="Cloud"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.COOKIE}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"\n            platform="${platform || \'Cloud\'}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.COOKIE}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nexport const WithCustomTypeahead = args => {\n  const {\n    endpoint,\n    customProfileLogin,\n    navLinks,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\n  });\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nWithCustomTypeahead.story = {\n  name: \'With custom typeahead\',\n};\n\nexport const searchOpenOnload = args => {\n  const {\n    endpoint,\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            activate-search\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            activate-search\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nsearchOpenOnload.story = {\n  name: \'Search open onload\',\n};\n\nexport const withPlatform = args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nwithPlatform.story = {\n  name: \'With platform\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'Platform\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: \'Platform\',\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceHolder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withL1 = args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            user-status="${ifNonNull(userStatus)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformData="${ifNonNull(platformData.url)}"\n            data-endpoint="${ifNonNull(endpoint)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nwithL1.story = {\n  name: \'With L1\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', inPercy() ? \'\' : \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Products\'),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          hasProfile: \'true\',\n          hasSearch: true,\n          platform: null,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Lorem ipsum dolor sit amet\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport const withAlternateLogoAndTooltip = args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformData="${ifNonNull(platformData.url)}"\n            data-endpoint="${ifNonNull(endpoint)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nwithAlternateLogoAndTooltip.story = {\n  name: \'With alternate logo and tooltip\',\n  parameters: {\n    knobs: {\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\n        mastheadLogo: select(\n          \'masthead logo data (logoData)\',\n          { defaultWithNoTooltip: null, alternateWithTooltip: \'alternateWithTooltip\' },\n          \'alternateWithTooltip\'\n        ),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n      }),\n    },\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n        },\n      },\n    },\n  },\n};\n\nexport default {\n  title: \'Components/Masthead\',\n  decorators: [\n    story => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, \'pageshow\', () => {\n          const leftNav = document.querySelector(\'dds-left-nav\');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        platform: textNullable(\'platform name (platform)\', \'\'),\n        hasProfile: select(\'show the profile functionality (has-profile)\', [\'true\', \'false\'], \'true\'),\n        hasSearch: boolean(\'show the search functionality (has-search)\', true),\n        searchPlaceholder: textNullable(\'search placeholder (searchPlaceholder)\', \'Search all of IBM\'),\n        selectedMenuItem: textNullable(\'selected menu item (selected-menu-item)\', \'Consulting & Services\'),\n        userStatus: select(\'The user authenticated status (user-status)\', userStatuses, userStatuses.unauthenticated),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable(\'custom profile login url (customProfileLogin)\', \'https://www.example.com/\'),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has(\'mock\');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: \'true\',\n          hasSearch: true,\n          searchPlaceholder: \'Search all of IBM\',\n          selectedMenuItem: \'Services & Consulting\',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: \'https://www.example.com/\',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n',locationsMap:{default:{startLoc:{col:23,line:68},endLoc:{col:1,line:117},startBody:{col:23,line:68},endBody:{col:1,line:117}},"with-v-2-data":{startLoc:{col:26,line:119},endLoc:{col:1,line:157},startBody:{col:26,line:119},endBody:{col:1,line:157}},"with-cloud-data":{startLoc:{col:29,line:163},endLoc:{col:1,line:200},startBody:{col:29,line:163},endBody:{col:1,line:200}},"with-custom-typeahead":{startLoc:{col:35,line:202},endLoc:{col:1,line:258},startBody:{col:35,line:202},endBody:{col:1,line:258}},"search-open-onload":{startLoc:{col:32,line:264},endLoc:{col:1,line:314},startBody:{col:32,line:264},endBody:{col:1,line:314}},"with-platform":{startLoc:{col:28,line:320},endLoc:{col:1,line:355},startBody:{col:28,line:320},endBody:{col:1,line:355}},"with-l-1":{startLoc:{col:22,line:385},endLoc:{col:1,line:421},startBody:{col:22,line:385},endBody:{col:1,line:421}},"with-alternate-logo-and-tooltip":{startLoc:{col:43,line:451},endLoc:{col:1,line:488},startBody:{col:43,line:451},endBody:{col:1,line:488}}}},je in Ee?Object.defineProperty(Ee,je,{value:Te,enumerable:!0,configurable:!0,writable:!0}):Ee[je]=Te,Ee),B.a.parameters),{},{knobs:{escapeHTML:!1,MastheadComposite:function(){return{platform:Object(j.a)("platform name (platform)",""),hasProfile:Object(I.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(I.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(j.a)("search placeholder (searchPlaceholder)","Search all of IBM"),selectedMenuItem:Object(j.a)("selected menu item (selected-menu-item)","Consulting & Services"),userStatus:Object(I.select)("The user authenticated status (user-status)",be,be.unauthenticated),customProfileLogin:U.b&&Object(j.a)("custom profile login url (customProfileLogin)","https://www.example.com/")}}},props:(Oe=E()()||new URLSearchParams(window.location.search).has("mock"),{MastheadComposite:{navLinks:Oe?x.e:void 0},Other:{useMock:Oe}}),propsSet:{default:{MastheadComposite:{platform:null,hasProfile:"true",hasSearch:!0,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:be.unauthenticated,customProfileLogin:"https://www.example.com/",navLinks:x.e}}}})},Se.parameters=ge({storySource:{source:'args => {\n  const {\n    customProfileLogin,\n    platform,\n    hasProfile,\n    hasSearch,\n    selectedMenuItem,\n    searchPlaceholder,\n    userStatus,\n    navLinks,\n    authMethod,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${authMethod}"\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},Se.parameters),ye.parameters=ge({storySource:{source:'({ parameters }) => {\n  const { customProfileLogin, hasProfile, hasSearch, searchPlaceholder, userStatus, navLinks, hasContact, platform } =\n    parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n            has-contact="${hasContact}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/masthead-footer/v2"\n            platform="${ifNonNull(platform)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.DEFAULT}"\n            has-contact="${hasContact}"\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},ye.parameters),ve.parameters=ge({storySource:{source:'({ parameters }) => {\n  const { customProfileLogin, hasSearch, selectedMenuItem, searchPlaceholder, navLinks, platform } =\n    parameters?.props?.MastheadComposite ?? {};\n  const { useMock } = parameters?.props?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="Cloud"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.COOKIE}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="/common/carbon-for-ibm-dotcom/translations/cloud-masthead"\n            platform="${platform || \'Cloud\'}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            auth-method="${MASTHEAD_AUTH_METHOD.COOKIE}"\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},ve.parameters),Me.parameters=ge({storySource:{source:'args => {\n  const {\n    endpoint,\n    customProfileLogin,\n    navLinks,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  document.documentElement.addEventListener(\'dds-search-with-typeahead-input\', async e => {\n    const results = await customTypeaheadApiFunction((e as CustomEvent).detail.value);\n    document.dispatchEvent(new CustomEvent(\'dds-custom-typeahead-api-results\', { detail: results }));\n  });\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            ?custom-typeahead-api=${true}\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},Me.parameters),Ie.parameters=ge({storySource:{source:'args => {\n  const {\n    endpoint,\n    customProfileLogin,\n    platform,\n    selectedMenuItem,\n    userStatus,\n    searchPlaceholder,\n    hasProfile,\n    hasSearch,\n    navLinks,\n  } = args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            activate-search\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            activate-search\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},Ie.parameters),Ce.parameters=ge({storySource:{source:'args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platformData.name)}"\n            .platformUrl="${ifNonNull(urlObject)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            .navLinks="${navLinks}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            data-endpoint="${ifNonNull(endpoint)}"\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},Ce.parameters),De.parameters=ge({storySource:{source:'args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            user-status="${ifNonNull(userStatus)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformData="${ifNonNull(platformData.url)}"\n            data-endpoint="${ifNonNull(endpoint)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .l1Data="${mastheadL1Data}"\n            .navLinks="${navLinks}"\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},De.parameters),xe.parameters=ge({storySource:{source:'args => {\n  const { endpoint, selectedMenuItem, userStatus, navLinks, hasProfile, hasSearch, searchPlaceholder, mastheadLogo, platform } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformData="${ifNonNull(platformData.url)}"\n            data-endpoint="${ifNonNull(endpoint)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            .logoData="${mastheadLogo === \'alternateWithTooltip\' ? logoData : undefined}"\n            has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},xe.parameters)},"./src/components/masthead/__stories__/profile-items.ts":function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return o}));n("../../node_modules/core-js/modules/web.url.js"),n("../../node_modules/core-js/modules/es.object.to-string.js"),n("../../node_modules/core-js/modules/es.string.iterator.js"),n("../../node_modules/core-js/modules/es.array.iterator.js"),n("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),n("../../node_modules/core-js/modules/es.regexp.to-string.js"),n("../../node_modules/core-js/modules/es.date.to-string.js");var a=new URLSearchParams;a.append("response_type","token"),a.append("client_id","v18loginprod"),a.append("state",window.location.href),a.append("redirect_uri","https://myibm.ibm.com/OIDCHandler.html"),a.append("scope","openid");var s=[{title:"My IBM",url:"https://myibm.ibm.com/?lnk=mmi"},{title:"Profile",url:"https://myibm.ibm.com/profile/?lnk=mmi"},{title:"Billing",url:"https://myibm.ibm.com/billing/?lnk=mmi"},{title:"Log out",url:"https://myibm.ibm.com/pkmslogout?filename=accountRedir.html"}],o=[{id:"signin",title:"Log in",url:"https://idaas.iam.ibm.com/idaas/oidc/endpoint/default/authorize?".concat(a.toString())}]},"./src/components/masthead/__stories__/scoped-search-masthead.stories.ts":function(e,t,n){"use strict";n.r(t),n.d(t,"Default",(function(){return j}));n("../../node_modules/core-js/modules/es.array.slice.js"),n("../../node_modules/core-js/modules/es.object.freeze.js"),n("../../node_modules/core-js/modules/es.object.keys.js"),n("../../node_modules/core-js/modules/es.symbol.js"),n("../../node_modules/core-js/modules/es.array.filter.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),n("../../node_modules/core-js/modules/es.array.for-each.js"),n("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),n("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),n("../../node_modules/core-js/modules/es.object.define-properties.js"),n("../../node_modules/core-js/modules/es.object.define-property.js"),n("../../node_modules/core-js/modules/web.url.js"),n("../../node_modules/core-js/modules/es.object.to-string.js"),n("../../node_modules/core-js/modules/es.string.iterator.js"),n("../../node_modules/core-js/modules/es.array.iterator.js"),n("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),n("../../node_modules/core-js/modules/es.string.search.js"),n("../../node_modules/core-js/modules/es.regexp.exec.js");var a,s,o,l=n("../../node_modules/lit-element/lit-element.js"),i=n("../../node_modules/@storybook/addon-knobs/dist/index.js"),r=n("../../node_modules/carbon-components/es/globals/js/misc/on.js"),c=n("../../node_modules/carbon-web-components/es/globals/directives/if-non-null.js"),u=n("../../node_modules/@percy-io/in-percy/src/index.js"),h=n.n(u),d=n("./.storybook/knob-text-nullable.ts"),m=(n("./src/components/masthead/masthead-container.ts"),n("./src/components/masthead/__stories__/masthead.stories.scss")),p=n("./src/components/masthead/__stories__/links.ts"),f=n("./src/internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI.js"),g=n("./src/components/masthead/__stories__/profile-items.ts"),N=n("./src/globals/internal/feature-flags.ts"),b=n("./src/components/masthead/__stories__/README.stories.mdx");function w(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var P,$,k;function L(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function S(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?L(Object(n),!0).forEach((function(t){y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):L(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var v,M,I,C,D={authenticated:"test.user@ibm.com",unauthenticated:f.d},O="https://www.ibm.com/cloud",E=[{name:"All",value:"all"},{name:"Analyst",value:"analyst"},{name:"PartnerWorld",value:"pw"},{name:"Developer",value:"dw"}],j=function(e){var t,n,i=null!==(t=null==e?void 0:e.MastheadComposite)&&void 0!==t?t:{},r=i.customProfileLogin,u=i.platform,h=i.selectedMenuItem,d=i.userStatus,p=i.searchPlaceholder,f=i.hasProfile,N=i.hasSearch,b=i.navLinks,L=(null!==(n=null==e?void 0:e.Other)&&void 0!==n?n:{}).useMock;return Object(l.d)(P||(P=a||(a=w(["\n    <style>\n      ","\n    </style>\n    ","\n  "]))),m.a,L?Object(l.d)($||($=s||(s=w(['\n          <dds-masthead-composite\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .authenticatedProfileItems="','"\n            ?has-profile="','"\n            ?has-search="','"\n            .navLinks="','"\n            .unauthenticatedProfileItems="','"\n            custom-profile-login="','"\n            .scopeParameters=',"\n          ></dds-masthead-composite>\n        "]))),Object(c.a)(u),Object(c.a)(O),Object(c.a)(h),Object(c.a)(d),Object(c.a)(p),Object(c.a)(g.a),f,N,b,Object(c.a)(g.b),r,E):Object(l.d)(k||(k=o||(o=w(['\n          <dds-masthead-container\n            platform="','"\n            .platformUrl="','"\n            selected-menu-item="','"\n            user-status="','"\n            searchPlaceholder="','"\n            .navLinks="','"\n            ?has-profile="','"\n            ?has-search="','"\n            custom-profile-login="','"\n            .scopeParameters=',"\n          ></dds-masthead-container>\n        "]))),Object(c.a)(u),Object(c.a)(O),Object(c.a)(h),Object(c.a)(d),Object(c.a)(p),b,f,N,r,E))};t.default={title:"Components/Masthead with scoped search",decorators:[function(e){return window._hPageShow||(window._hPageShow=Object(r.a)(window,"pageshow",(function(){var e=document.querySelector("dds-left-nav");e&&(e.expanded=!1)}))),e()}],parameters:S(S((M={storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\\\nimport readme from './README.stories.mdx';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: 'test.user@ibm.com',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst scopeParameters = [\\\\n  {\\\\n    name: 'All',\\\\n    value: 'all',\\\\n  },\\\\n  {\\\\n    name: 'Analyst',\\\\n    value: 'analyst',\\\\n  },\\\\n  {\\\\n    name: 'PartnerWorld',\\\\n    value: 'pw',\\\\n  },\\\\n  {\\\\n    name: 'Developer',\\\\n    value: 'dw',\\\\n  },\\\\n];\\\\n\\\\nexport const Default = args => {\\\\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Masthead with scoped search',\\\\n  decorators: [\\\\n    story => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select('show the profile functionality (has-profile)', ['true', 'false'], 'true'),\\\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\\\n        searchPlaceholder: textNullable('search placeholder (searchPlaceholder)', 'Search all of IBM'),\\\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Consulting & Services'),\\\\n        userStatus: select('The user authenticated status (user-status)', userStatuses, userStatuses.unauthenticated),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable('custom profile login url (customProfileLogin)', 'https://www.example.com/'),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: 'true',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: 'Search all of IBM',\\\\n          selectedMenuItem: 'Services & Consulting',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: 'https://www.example.com/',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":57},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":98},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":57},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":98}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\nimport readme from './README.stories.mdx';\\n\\nconst userStatuses = {\\n  authenticated: 'test.user@ibm.com',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: 'All',\\n    value: 'all',\\n  },\\n  {\\n    name: 'Analyst',\\n    value: 'analyst',\\n  },\\n  {\\n    name: 'PartnerWorld',\\n    value: 'pw',\\n  },\\n  {\\n    name: 'Developer',\\n    value: 'dw',\\n  },\\n];\\n\\nexport const Default = args => {\\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Masthead with scoped search',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2022\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from 'lit-element';\\\\nimport { boolean, select } from '@storybook/addon-knobs';\\\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\\\nimport inPercy from '@percy-io/in-percy';\\\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\\\nimport DDSLeftNav from '../left-nav';\\\\nimport '../masthead-container';\\\\nimport styles from './masthead.stories.scss';\\\\nimport { mastheadLinks as links } from './links';\\\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\\\nimport readme from './README.stories.mdx';\\\\n\\\\nconst userStatuses = {\\\\n  authenticated: 'test.user@ibm.com',\\\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\\\n};\\\\n\\\\n/**\\\\n * platform knob data\\\\n */\\\\nconst platformData = {\\\\n  name: 'IBM Cloud',\\\\n  url: 'https://www.ibm.com/cloud',\\\\n};\\\\n\\\\nconst scopeParameters = [\\\\n  {\\\\n    name: 'All',\\\\n    value: 'all',\\\\n  },\\\\n  {\\\\n    name: 'Analyst',\\\\n    value: 'analyst',\\\\n  },\\\\n  {\\\\n    name: 'PartnerWorld',\\\\n    value: 'pw',\\\\n  },\\\\n  {\\\\n    name: 'Developer',\\\\n    value: 'dw',\\\\n  },\\\\n];\\\\n\\\\nexport const Default = args => {\\\\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\\\\n    args?.MastheadComposite ?? {};\\\\n  const { useMock } = args?.Other ?? {};\\\\n\\\\n  return html`\\\\n    <style>\\\\n      ${styles}\\\\n    </style>\\\\n    ${useMock\\\\n      ? html`\\\\n          <dds-masthead-composite\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .authenticatedProfileItems=\\\\\\\"${ifNonNull(authenticatedProfileItems)}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            .unauthenticatedProfileItems=\\\\\\\"${ifNonNull(unauthenticatedProfileItems)}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}\\\\n          ></dds-masthead-composite>\\\\n        `\\\\n      : html`\\\\n          <dds-masthead-container\\\\n            platform=\\\\\\\"${ifNonNull(platform)}\\\\\\\"\\\\n            .platformUrl=\\\\\\\"${ifNonNull(platformData.url)}\\\\\\\"\\\\n            selected-menu-item=\\\\\\\"${ifNonNull(selectedMenuItem)}\\\\\\\"\\\\n            user-status=\\\\\\\"${ifNonNull(userStatus)}\\\\\\\"\\\\n            searchPlaceholder=\\\\\\\"${ifNonNull(searchPlaceholder)}\\\\\\\"\\\\n            .navLinks=\\\\\\\"${navLinks}\\\\\\\"\\\\n            ?has-profile=\\\\\\\"${hasProfile}\\\\\\\"\\\\n            ?has-search=\\\\\\\"${hasSearch}\\\\\\\"\\\\n            custom-profile-login=\\\\\\\"${customProfileLogin}\\\\\\\"\\\\n            .scopeParameters=${scopeParameters}\\\\n          ></dds-masthead-container>\\\\n        `}\\\\n  `;\\\\n};\\\\n\\\\nexport default {\\\\n  title: 'Components/Masthead with scoped search',\\\\n  decorators: [\\\\n    story => {\\\\n      if (!(window as any)._hPageShow) {\\\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\\\n          const leftNav = document.querySelector('dds-left-nav');\\\\n          if (leftNav) {\\\\n            (leftNav as DDSLeftNav).expanded = false;\\\\n          }\\\\n        });\\\\n      }\\\\n      return story();\\\\n    },\\\\n  ],\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    percy: {\\\\n      skip: true,\\\\n    },\\\\n    knobs: {\\\\n      escapeHTML: false,\\\\n      MastheadComposite: () => ({\\\\n        hasProfile: select('show the profile functionality (has-profile)', ['true', 'false'], 'true'),\\\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\\\n        searchPlaceholder: textNullable('search placeholder (searchPlaceholder)', 'Search all of IBM'),\\\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Consulting & Services'),\\\\n        userStatus: select('The user authenticated status (user-status)', userStatuses, userStatuses.unauthenticated),\\\\n        customProfileLogin:\\\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable('custom profile login url (customProfileLogin)', 'https://www.example.com/'),\\\\n      }),\\\\n    },\\\\n    props: (() => {\\\\n      // Lets `<dds-masthead-container>` load the nav links\\\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\\\n      return {\\\\n        MastheadComposite: {\\\\n          navLinks: !useMock ? undefined : links,\\\\n        },\\\\n        Other: {\\\\n          useMock,\\\\n        },\\\\n      };\\\\n    })(),\\\\n    propsSet: {\\\\n      default: {\\\\n        MastheadComposite: {\\\\n          platform: null,\\\\n          hasProfile: 'true',\\\\n          hasSearch: true,\\\\n          searchPlaceholder: 'Search all of IBM',\\\\n          selectedMenuItem: 'Services & Consulting',\\\\n          userStatus: userStatuses.unauthenticated,\\\\n          customProfileLogin: 'https://www.example.com/',\\\\n          navLinks: links,\\\\n        },\\\\n      },\\\\n    },\\\\n  },\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"default\\\":{\\\"startLoc\\\":{\\\"col\\\":23,\\\"line\\\":57},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":98},\\\"startBody\\\":{\\\"col\\\":23,\\\"line\\\":57},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":98}}}},\\n    ...readme.parameters,\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select('show the profile functionality (has-profile)', ['true', 'false'], 'true'),\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\n        searchPlaceholder: textNullable('search placeholder (searchPlaceholder)', 'Search all of IBM'),\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Consulting & Services'),\\n        userStatus: select('The user authenticated status (user-status)', userStatuses, userStatuses.unauthenticated),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable('custom profile login url (customProfileLogin)', 'https://www.example.com/'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: 'true',\\n          hasSearch: true,\\n          searchPlaceholder: 'Search all of IBM',\\n          selectedMenuItem: 'Services & Consulting',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: 'https://www.example.com/',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":65},\"endLoc\":{\"col\":1,\"line\":106},\"startBody\":{\"col\":23,\"line\":65},\"endBody\":{\"col\":1,\"line\":106}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\nimport readme from './README.stories.mdx';\\n\\nconst userStatuses = {\\n  authenticated: 'test.user@ibm.com',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: 'All',\\n    value: 'all',\\n  },\\n  {\\n    name: 'Analyst',\\n    value: 'analyst',\\n  },\\n  {\\n    name: 'PartnerWorld',\\n    value: 'pw',\\n  },\\n  {\\n    name: 'Developer',\\n    value: 'dw',\\n  },\\n];\\n\\nexport const Default = args => {\\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Masthead with scoped search',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select('show the profile functionality (has-profile)', ['true', 'false'], 'true'),\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\n        searchPlaceholder: textNullable('search placeholder (searchPlaceholder)', 'Search all of IBM'),\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Consulting & Services'),\\n        userStatus: select('The user authenticated status (user-status)', userStatuses, userStatuses.unauthenticated),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable('custom profile login url (customProfileLogin)', 'https://www.example.com/'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: 'true',\\n          hasSearch: true,\\n          searchPlaceholder: 'Search all of IBM',\\n          selectedMenuItem: 'Services & Consulting',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: 'https://www.example.com/',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":57},\"endLoc\":{\"col\":1,\"line\":98},\"startBody\":{\"col\":23,\"line\":57},\"endBody\":{\"col\":1,\"line\":98}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\nimport readme from './README.stories.mdx';\n\nconst userStatuses = {\n  authenticated: 'test.user@ibm.com',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst scopeParameters = [\n  {\n    name: 'All',\n    value: 'all',\n  },\n  {\n    name: 'Analyst',\n    value: 'analyst',\n  },\n  {\n    name: 'PartnerWorld',\n    value: 'pw',\n  },\n  {\n    name: 'Developer',\n    value: 'dw',\n  },\n];\n\nexport const Default = args => {\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(unauthenticatedProfileItems)}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Masthead with scoped search',\n  decorators: [\n    story => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\"storySource\":{\"source\":\"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2022\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from 'lit-element';\\nimport { boolean, select } from '@storybook/addon-knobs';\\nimport on from 'carbon-components/es/globals/js/misc/on.js';\\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\\nimport inPercy from '@percy-io/in-percy';\\nimport textNullable from '../../../../.storybook/knob-text-nullable';\\nimport DDSLeftNav from '../left-nav';\\nimport '../masthead-container';\\nimport styles from './masthead.stories.scss';\\nimport { mastheadLinks as links } from './links';\\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\\nimport readme from './README.stories.mdx';\\n\\nconst userStatuses = {\\n  authenticated: 'test.user@ibm.com',\\n  unauthenticated: UNAUTHENTICATED_STATUS,\\n};\\n\\n/**\\n * platform knob data\\n */\\nconst platformData = {\\n  name: 'IBM Cloud',\\n  url: 'https://www.ibm.com/cloud',\\n};\\n\\nconst scopeParameters = [\\n  {\\n    name: 'All',\\n    value: 'all',\\n  },\\n  {\\n    name: 'Analyst',\\n    value: 'analyst',\\n  },\\n  {\\n    name: 'PartnerWorld',\\n    value: 'pw',\\n  },\\n  {\\n    name: 'Developer',\\n    value: 'dw',\\n  },\\n];\\n\\nexport const Default = args => {\\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n};\\n\\nexport default {\\n  title: 'Components/Masthead with scoped search',\\n  decorators: [\\n    story => {\\n      if (!(window as any)._hPageShow) {\\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\\n          const leftNav = document.querySelector('dds-left-nav');\\n          if (leftNav) {\\n            (leftNav as DDSLeftNav).expanded = false;\\n          }\\n        });\\n      }\\n      return story();\\n    },\\n  ],\\n  parameters: {\\n    ...readme.parameters,\\n    percy: {\\n      skip: true,\\n    },\\n    knobs: {\\n      escapeHTML: false,\\n      MastheadComposite: () => ({\\n        hasProfile: select('show the profile functionality (has-profile)', ['true', 'false'], 'true'),\\n        hasSearch: boolean('show the search functionality (has-search)', true),\\n        searchPlaceholder: textNullable('search placeholder (searchPlaceholder)', 'Search all of IBM'),\\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Consulting & Services'),\\n        userStatus: select('The user authenticated status (user-status)', userStatuses, userStatuses.unauthenticated),\\n        customProfileLogin:\\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable('custom profile login url (customProfileLogin)', 'https://www.example.com/'),\\n      }),\\n    },\\n    props: (() => {\\n      // Lets `<dds-masthead-container>` load the nav links\\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\\n      return {\\n        MastheadComposite: {\\n          navLinks: !useMock ? undefined : links,\\n        },\\n        Other: {\\n          useMock,\\n        },\\n      };\\n    })(),\\n    propsSet: {\\n      default: {\\n        MastheadComposite: {\\n          platform: null,\\n          hasProfile: 'true',\\n          hasSearch: true,\\n          searchPlaceholder: 'Search all of IBM',\\n          selectedMenuItem: 'Services & Consulting',\\n          userStatus: userStatuses.unauthenticated,\\n          customProfileLogin: 'https://www.example.com/',\\n          navLinks: links,\\n        },\\n      },\\n    },\\n  },\\n};\\n\",\"locationsMap\":{\"default\":{\"startLoc\":{\"col\":23,\"line\":57},\"endLoc\":{\"col\":1,\"line\":98},\"startBody\":{\"col\":23,\"line\":57},\"endBody\":{\"col\":1,\"line\":98}}}},\n    ...readme.parameters,\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        hasProfile: select('show the profile functionality (has-profile)', ['true', 'false'], 'true'),\n        hasSearch: boolean('show the search functionality (has-search)', true),\n        searchPlaceholder: textNullable('search placeholder (searchPlaceholder)', 'Search all of IBM'),\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Consulting & Services'),\n        userStatus: select('The user authenticated status (user-status)', userStatuses, userStatuses.unauthenticated),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable('custom profile login url (customProfileLogin)', 'https://www.example.com/'),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: 'true',\n          hasSearch: true,\n          searchPlaceholder: 'Search all of IBM',\n          selectedMenuItem: 'Services & Consulting',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: 'https://www.example.com/',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n\n\n\nDefault.parameters = { storySource: { source: \"args => {\\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\\n    args?.MastheadComposite ?? {};\\n  const { useMock } = args?.Other ?? {};\\n\\n  return html`\\n    <style>\\n      ${styles}\\n    </style>\\n    ${useMock\\n      ? html`\\n          <dds-masthead-composite\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .authenticatedProfileItems=\\\"${ifNonNull(authenticatedProfileItems)}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            .unauthenticatedProfileItems=\\\"${ifNonNull(unauthenticatedProfileItems)}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-composite>\\n        `\\n      : html`\\n          <dds-masthead-container\\n            platform=\\\"${ifNonNull(platform)}\\\"\\n            .platformUrl=\\\"${ifNonNull(platformData.url)}\\\"\\n            selected-menu-item=\\\"${ifNonNull(selectedMenuItem)}\\\"\\n            user-status=\\\"${ifNonNull(userStatus)}\\\"\\n            searchPlaceholder=\\\"${ifNonNull(searchPlaceholder)}\\\"\\n            .navLinks=\\\"${navLinks}\\\"\\n            ?has-profile=\\\"${hasProfile}\\\"\\n            ?has-search=\\\"${hasSearch}\\\"\\n            custom-profile-login=\\\"${customProfileLogin}\\\"\\n            .scopeParameters=${scopeParameters}\\n          ></dds-masthead-container>\\n        `}\\n  `;\\n}\" }, ...Default.parameters };",locationsMap:{default:{startLoc:{col:23,line:73},endLoc:{col:1,line:114},startBody:{col:23,line:73},endBody:{col:1,line:114}}}}},I="storySource",C={source:"/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit-element';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport on from 'carbon-components/es/globals/js/misc/on.js';\nimport ifNonNull from 'carbon-web-components/es/globals/directives/if-non-null.js';\nimport inPercy from '@percy-io/in-percy';\nimport textNullable from '../../../../.storybook/knob-text-nullable';\nimport DDSLeftNav from '../left-nav';\nimport '../masthead-container';\nimport styles from './masthead.stories.scss';\nimport { mastheadLinks as links } from './links';\nimport { UNAUTHENTICATED_STATUS } from '../../../internal/vendor/@carbon/ibmdotcom-services-store/types/profileAPI';\nimport { authenticatedProfileItems, unauthenticatedProfileItems } from './profile-items';\nimport { DDS_CUSTOM_PROFILE_LOGIN } from '../../../globals/internal/feature-flags';\nimport readme from './README.stories.mdx';\n\nconst userStatuses = {\n  authenticated: 'test.user@ibm.com',\n  unauthenticated: UNAUTHENTICATED_STATUS,\n};\n\n/**\n * platform knob data\n */\nconst platformData = {\n  name: 'IBM Cloud',\n  url: 'https://www.ibm.com/cloud',\n};\n\nconst scopeParameters = [\n  {\n    name: 'All',\n    value: 'all',\n  },\n  {\n    name: 'Analyst',\n    value: 'analyst',\n  },\n  {\n    name: 'PartnerWorld',\n    value: 'pw',\n  },\n  {\n    name: 'Developer',\n    value: 'dw',\n  },\n];\n\nexport const Default = args => {\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .authenticatedProfileItems=\"${ifNonNull(authenticatedProfileItems)}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            .navLinks=\"${navLinks}\"\n            .unauthenticatedProfileItems=\"${ifNonNull(unauthenticatedProfileItems)}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform=\"${ifNonNull(platform)}\"\n            .platformUrl=\"${ifNonNull(platformData.url)}\"\n            selected-menu-item=\"${ifNonNull(selectedMenuItem)}\"\n            user-status=\"${ifNonNull(userStatus)}\"\n            searchPlaceholder=\"${ifNonNull(searchPlaceholder)}\"\n            .navLinks=\"${navLinks}\"\n            ?has-profile=\"${hasProfile}\"\n            ?has-search=\"${hasSearch}\"\n            custom-profile-login=\"${customProfileLogin}\"\n            .scopeParameters=${scopeParameters}\n          ></dds-masthead-container>\n        `}\n  `;\n};\n\nexport default {\n  title: 'Components/Masthead with scoped search',\n  decorators: [\n    story => {\n      if (!(window as any)._hPageShow) {\n        (window as any)._hPageShow = on(window, 'pageshow', () => {\n          const leftNav = document.querySelector('dds-left-nav');\n          if (leftNav) {\n            (leftNav as DDSLeftNav).expanded = false;\n          }\n        });\n      }\n      return story();\n    },\n  ],\n  parameters: {\n    ...readme.parameters,\n    percy: {\n      skip: true,\n    },\n    knobs: {\n      escapeHTML: false,\n      MastheadComposite: () => ({\n        hasProfile: select('show the profile functionality (has-profile)', ['true', 'false'], 'true'),\n        hasSearch: boolean('show the search functionality (has-search)', true),\n        searchPlaceholder: textNullable('search placeholder (searchPlaceholder)', 'Search all of IBM'),\n        selectedMenuItem: textNullable('selected menu item (selected-menu-item)', 'Consulting & Services'),\n        userStatus: select('The user authenticated status (user-status)', userStatuses, userStatuses.unauthenticated),\n        customProfileLogin:\n          DDS_CUSTOM_PROFILE_LOGIN && textNullable('custom profile login url (customProfileLogin)', 'https://www.example.com/'),\n      }),\n    },\n    props: (() => {\n      // Lets `<dds-masthead-container>` load the nav links\n      const useMock = inPercy() || new URLSearchParams(window.location.search).has('mock');\n      return {\n        MastheadComposite: {\n          navLinks: !useMock ? undefined : links,\n        },\n        Other: {\n          useMock,\n        },\n      };\n    })(),\n    propsSet: {\n      default: {\n        MastheadComposite: {\n          platform: null,\n          hasProfile: 'true',\n          hasSearch: true,\n          searchPlaceholder: 'Search all of IBM',\n          selectedMenuItem: 'Services & Consulting',\n          userStatus: userStatuses.unauthenticated,\n          customProfileLogin: 'https://www.example.com/',\n          navLinks: links,\n        },\n      },\n    },\n  },\n};\n",locationsMap:{default:{startLoc:{col:23,line:57},endLoc:{col:1,line:98},startBody:{col:23,line:57},endBody:{col:1,line:98}}}},I in M?Object.defineProperty(M,I,{value:C,enumerable:!0,configurable:!0,writable:!0}):M[I]=C,M),b.a.parameters),{},{percy:{skip:!0},knobs:{escapeHTML:!1,MastheadComposite:function(){return{hasProfile:Object(i.select)("show the profile functionality (has-profile)",["true","false"],"true"),hasSearch:Object(i.boolean)("show the search functionality (has-search)",!0),searchPlaceholder:Object(d.a)("search placeholder (searchPlaceholder)","Search all of IBM"),selectedMenuItem:Object(d.a)("selected menu item (selected-menu-item)","Consulting & Services"),userStatus:Object(i.select)("The user authenticated status (user-status)",D,D.unauthenticated),customProfileLogin:N.b&&Object(d.a)("custom profile login url (customProfileLogin)","https://www.example.com/")}}},props:(v=h()()||new URLSearchParams(window.location.search).has("mock"),{MastheadComposite:{navLinks:v?p.e:void 0},Other:{useMock:v}}),propsSet:{default:{MastheadComposite:{platform:null,hasProfile:"true",hasSearch:!0,searchPlaceholder:"Search all of IBM",selectedMenuItem:"Services & Consulting",userStatus:D.unauthenticated,customProfileLogin:"https://www.example.com/",navLinks:p.e}}}})},j.parameters=S({storySource:{source:'args => {\n  const { customProfileLogin, platform, selectedMenuItem, userStatus, searchPlaceholder, hasProfile, hasSearch, navLinks } =\n    args?.MastheadComposite ?? {};\n  const { useMock } = args?.Other ?? {};\n\n  return html`\n    <style>\n      ${styles}\n    </style>\n    ${useMock\n      ? html`\n          <dds-masthead-composite\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .authenticatedProfileItems="${ifNonNull(authenticatedProfileItems)}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            .navLinks="${navLinks}"\n            .unauthenticatedProfileItems="${ifNonNull(unauthenticatedProfileItems)}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}\n          ></dds-masthead-composite>\n        `\n      : html`\n          <dds-masthead-container\n            platform="${ifNonNull(platform)}"\n            .platformUrl="${ifNonNull(platformData.url)}"\n            selected-menu-item="${ifNonNull(selectedMenuItem)}"\n            user-status="${ifNonNull(userStatus)}"\n            searchPlaceholder="${ifNonNull(searchPlaceholder)}"\n            .navLinks="${navLinks}"\n            ?has-profile="${hasProfile}"\n            ?has-search="${hasSearch}"\n            custom-profile-login="${customProfileLogin}"\n            .scopeParameters=${scopeParameters}\n          ></dds-masthead-container>\n        `}\n  `;\n}'}},j.parameters)}}]);